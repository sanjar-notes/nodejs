WEBVTT

00:02.170 --> 00:08.810
For this module I'm back in the application or the project we worked on in the last core section and you

00:08.810 --> 00:15.190
can find my state attached to this video so that you can start right at the same point as I do.

00:15.440 --> 00:18.900
So it is just the code we wrote over the last lectures

00:18.980 --> 00:25.280
and one thing we constantly had to do in the last section or throughout this course was that we always

00:25.280 --> 00:33.890
had to run node app.js to start our well app or our node application with that file.

00:33.890 --> 00:41.240
Now this is certainly ok and not too much work but it actually is possible to define some scripts in

00:41.240 --> 00:45.190
a nodejs project that can help us with tasks like this,

00:45.230 --> 00:50.620
we can also use them for other tasks but especially for this, they can be useful right now

00:50.720 --> 00:55.120
and for that we have to use a feature we didn't use thus far.

00:55.370 --> 01:04.490
We have to use npm, npm stands for node package manager and it is installed together with nodejs, so

01:04.490 --> 01:05.960
you don't need to do anything,

01:05.960 --> 01:08.000
you got this installed already.

01:08.000 --> 01:15.890
Now we will also use npm to install some additional third party packages to our project soon, so packages

01:15.890 --> 01:18.930
that are not included in nodes core,

01:18.950 --> 01:29.240
so not part of nodes core modules but we can also use npm to initialize a so-called node project or

01:29.240 --> 01:31.870
to add some extra features to it

01:31.910 --> 01:39.050
to be precise because we obviously already got a node project here but now in this project, in a terminal

01:39.260 --> 01:44.400
navigated into this project, you can run npm init.

01:44.450 --> 01:47.090
Now this will not delete your code or anything like that,

01:47.090 --> 01:48.080
no worries,

01:48.080 --> 01:51.840
simply hit enter and you'll be prompted with a couple of questions here.

01:51.950 --> 01:55.330
It'll ask you first of all for a name of your package

01:55.400 --> 01:58.670
and for now you can simply translate this with project name.

01:58.670 --> 02:02.990
Now you can pick any name you want, the part in the parentheses here

02:03.060 --> 02:05.930
always is the suggestion, the default

02:05.930 --> 02:08.730
it will pick if you don't choose your own name,

02:08.780 --> 02:12.270
so if I just hit enter here, it will take that default.

02:12.470 --> 02:15.420
So you can basically do that for all these questions,

02:15.530 --> 02:18.260
for the description, you can leave that empty

02:18.290 --> 02:24.550
then it will have no default text either but you can also enter some text like complete nodejs

02:24.570 --> 02:32.970
guide, this is what this course is and then define an entry point with fs for example. You can leave

02:32.970 --> 02:37.750
the task command empty, leave that empty, keywords you can choose some if you want,

02:37.830 --> 02:42.900
you can put your name into the offer field though this is also not required and you can always choose

02:42.900 --> 02:43.470
a license

02:43.470 --> 02:46.030
but if you don't plan on sharing this project publicly,

02:46.030 --> 02:47.600
this also doesn't really matter.

02:47.910 --> 02:54.210
So with this what you get is this package.json file and there you also see all these settings

02:54.210 --> 02:58.270
or configurations you just set up and you can of course edit them there too,

02:58.380 --> 03:02.160
so if you had a typo in your description, you can just edit it here.

03:02.250 --> 03:08.880
Now this is using the json format which is a special kind of data format which basically looks a

03:08.880 --> 03:13.750
lot like javascript objects and it pretty much is based on that,

03:13.770 --> 03:16.200
there is one important thing to understand though,

03:16.260 --> 03:24.330
the keys are always put between double quotation marks and so are the values, except for numbers or arrays

03:24.360 --> 03:28.190
or true or false which are not put between these

03:28.260 --> 03:29.100
but that's too much

03:29.100 --> 03:32.780
for now, we can ignore that for now just so that you understand what you got there,

03:32.880 --> 03:36.250
it's basically a configuration file for your project.

03:36.270 --> 03:39.070
Now what does this configuration file give you?

03:39.330 --> 03:41.600
Well let's clear the console here,

03:41.880 --> 03:48.450
with this configuration file, you'll see that we got a scripts section there which has one default script

03:48.540 --> 03:50.340
that won't do anything for now,

03:50.580 --> 03:56.190
you can add your own scripts here and I will tell you how to execute them too of course.

03:56.190 --> 04:02.040
For that, let's add a comma after this test script and add a new script name which has to be put between

04:02.070 --> 04:06.220
double quotation marks and there, let's name it start. Now

04:06.230 --> 04:10.430
start is actually a special script name as you will see in a second,

04:10.530 --> 04:14.950
so make sure to type this correctly and then between the quotation marks,

04:15.030 --> 04:17.880
you type a command that should be executed.

04:17.880 --> 04:20.830
So this is a command which you could also type down there

04:21.030 --> 04:22.490
and there we always have to type

04:22.490 --> 04:23.970
node app.js,

04:24.030 --> 04:28.230
so let's now put that between these double quotation marks here

04:28.270 --> 04:29.890
node app.js,

04:29.910 --> 04:31.740
like this.

04:31.830 --> 04:33.870
With that save that file

04:34.170 --> 04:42.930
and then you can run npm start. Start is a reserved name and this will always look for such a start

04:43.020 --> 04:43.850
script here.

04:44.190 --> 04:49.610
And if you do that, it will as you can see here just execute node app.js.

04:49.710 --> 04:55.620
So it does the same you had before but now you can always just well run this command instead of running

04:55.620 --> 04:55.890
node

04:55.890 --> 05:00.870
app.js. Not that much of a saved characters but a few at least

05:00.930 --> 05:04.590
and it's also a good practice because if you ever share this project,

05:04.590 --> 05:10.350
it's pretty common that people just have to run npm start and that they don't have to guess which of your

05:10.350 --> 05:13.180
javascript files is the entry file.

05:13.740 --> 05:19.200
So you can quit this with control c of course as always and I mentioned that this would be a special

05:19.260 --> 05:20.340
script name.

05:20.340 --> 05:23.780
You can add more scripts, also without using a special name,

05:23.820 --> 05:25.820
you can indeed choose any name you want,

05:25.890 --> 05:31.710
just make sure to always wrap the name in double quotation marks and that it does not contain any blanks

05:31.800 --> 05:33.490
or whitespaces.

05:33.560 --> 05:39.610
So for example we could have start-server.

05:39.610 --> 05:41.930
Now this can also run node app.js,

05:41.970 --> 05:46.350
so it will do the exact same as this script and therefore it's of course redundant

05:46.360 --> 05:47.940
but I want to show you something

05:48.240 --> 05:54.730
and now if you try running npm start-server, you'll get an error.

05:55.090 --> 06:01.930
You basically get an error that is not a known command and indeed it isn't because just typing

06:01.930 --> 06:04.030
the script name here will not work,

06:04.030 --> 06:04.630
start

06:04.650 --> 06:07.210
just was the special case as I mentioned.

06:07.220 --> 06:13.890
Indeed for normal scripts with their own custom names, you have to run npm run and then your script name,

06:14.020 --> 06:17.960
so npm run start-server will now also start the server.

06:17.980 --> 06:23.770
Now as I mentioned, this is of course redundant, npm start is way shorter but I want you to understand

06:23.920 --> 06:25.880
how you can add your own scripts.

06:26.020 --> 06:32.800
Now if you worked with something like angular or react or vue or any modern frontend development workflow,

06:33.130 --> 06:38.620
you will have seen that you use such scripts a lot to trigger build workflows for your projects for

06:38.620 --> 06:43.620
example and indeed you can use that for all kinds of tasks to want to execute

06:43.750 --> 06:48.550
but for now we'll not dive deeper into that and if you haven't worked with angular or react, it's

06:48.550 --> 06:48.810
also

06:48.850 --> 06:49.780
no problem,

06:49.780 --> 06:51.340
you will see what I mean

06:51.340 --> 06:56.900
later in this course when I explore node's functionality as a build tool a bit more.

06:56.920 --> 07:01.420
For now let's just use that npm start script to start our application conveniently.
