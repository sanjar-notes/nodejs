WEBVTT

00:02.430 --> 00:05.240
Now that we learned a lot about validation and

00:05.250 --> 00:06.700
sanitizing input,

00:07.080 --> 00:13.650
let's practice this one last time for adding a product and for editing it as well and there, feel free

00:13.650 --> 00:20.610
to again pause the video and try out some things on your own. Add your own first validation steps, after

00:20.610 --> 00:25.620
the pause we'll do it together of course and you're free to add any validation that you want to add that looks

00:25.620 --> 00:27.950
good to you for the different fields we have here

00:27.990 --> 00:31.830
and thereafter, I'll show you my suggestion on how we could validate this,

00:31.860 --> 00:33.480
so here's your chance to pause the video.

00:36.620 --> 00:37.390
Successful?

00:37.520 --> 00:39.330
Well let's try it out.

00:39.560 --> 00:40.380
We get four inputs here,

00:40.400 --> 00:44.120
title, image url, price and description.

00:44.180 --> 00:46.710
Now what would make sense to be validated here

00:46.730 --> 00:49.410
and again there is no single true solution here,

00:49.430 --> 00:53.780
you can have different requirements for the app you're building.

00:53.870 --> 01:00.770
Now I want to have a title which should be alphanumeric, so only normal alphabetic characters and numbers,

01:01.670 --> 01:06.700
it should at least be let's say three characters long. The image url should be a valid

01:06.740 --> 01:07.810
url,

01:07.910 --> 01:15.530
the price should be a floating point number, so a number with decimal places and the description here

01:15.740 --> 01:19.130
should also be not alphanumeric,

01:19.130 --> 01:23.810
there should be special characters like the exclamation mark should be allowed but it should be at least

01:23.810 --> 01:31.520
let's say five characters long. And with that information, let's add validation to the admin.js file which

01:31.520 --> 01:37.760
is where we have these post routes for, whoops, for adding and for editing. For that

01:37.760 --> 01:44.400
first of all, let's import the body or the check function, whichever you prefer

01:46.560 --> 01:47.700
by requiring

01:50.070 --> 01:52.550
express validate or /check

01:52.550 --> 01:58.250
and then let's add it here to add product. There

01:58.250 --> 02:05.190
I'll add an array to group all these middlewares together and then I'll validate my different inputs

02:05.210 --> 02:06.520
step by step.

02:06.830 --> 02:14.810
Let's first of all have a look at the views real fast, so there at the edit product view and there we

02:14.810 --> 02:21.700
see we got a field named title, one named image url, one named price and one named description,

02:21.830 --> 02:24.170
so these are the four fields I want to validate,

02:24.170 --> 02:26.900
title, image url, price and description.

02:27.200 --> 02:32.560
So back in the admin controller, excuse me in the admin route not in the controller, in the route,

02:32.600 --> 02:35.260
I'll start with the title.

02:35.540 --> 02:38.150
Now there, you're free to add whatever you want,

02:38.390 --> 02:47.650
I will add isAlphanumeric as a validator and isLength should have a minimum length of 3

02:47.660 --> 02:54.890
let's say. We can also add some sanitization and trim excess whitespace at the beginning or the end of

02:54.890 --> 02:55.910
the title.

02:55.910 --> 02:59.000
Now this is the title I want to validate, I'll

02:59.000 --> 03:06.460
now copy this and continue with the image url,

03:06.530 --> 03:10.860
however there I will check isUrl,

03:11.000 --> 03:12.710
that is the only thing I want to validate there,

03:12.710 --> 03:13.630
that this is a valid

03:13.640 --> 03:19.190
url and that is another built-in validator that checks whether this fulfills the characteristics

03:19.370 --> 03:22.000
of a url,

03:22.120 --> 03:26.790
then I'll add my validator for the price here.

03:26.800 --> 03:36.200
Now for the price, I want to have, I could check isNumeric to allow either integer values or floating

03:36.200 --> 03:37.040
point numbers 

03:37.220 --> 03:43.520
But there also is isFloat to ensure that this has to have some decimal places.

03:43.520 --> 03:51.140
Now I'll add my last validation here and that will be on the description and there, I just want to trim that

03:51.200 --> 03:56.690
and have a length of at least let's say 8 or 5 characters, whatever you want,

03:56.690 --> 03:58.360
you could also add a max value of course,

03:58.430 --> 04:05.820
let's say we have a max of 200 or 400 characters, something like that.

04:05.830 --> 04:13.690
Now I added validation to adding a product, I'll already copy that and add it to edit product here, to the post route

04:13.720 --> 04:15.400
edit product as well,

04:15.400 --> 04:20.790
so there I edit the exact same fields because we'll be editing the exact same fields there

04:20.800 --> 04:23.870
so I want to have the same validation in place.

04:24.160 --> 04:30.340
Now with that in place, let's go to the admin controller and make sure we collect these validation errors

04:30.370 --> 04:32.640
and return them. For that

04:32.860 --> 04:40.990
we'll first of all import something from the express validator by requiring express validator

04:41.120 --> 04:50.530
/check and there, I want to import the validation result function. And in post add product, here before

04:50.530 --> 04:52.700
we create that new product,

04:52.720 --> 04:59.980
I will actually collect all my errors by passing the request to validation result and I'll then check

05:00.010 --> 05:06.310
if not errors is empty which means we do have errors and in that case, if we make it into this if block,

05:06.730 --> 05:10.540
I will actually render my edit page,

05:10.540 --> 05:15.730
so here on get edit page, I will call this render function here in the end

05:16.000 --> 05:19.780
but I'll do that in this if block I just edit.

05:19.780 --> 05:26.410
I'll also set this status code of 422 which is a good practice for indicating to the browser that some

05:26.470 --> 05:28.680
data that was passed was incorrect.

05:29.670 --> 05:31.860
I'll have add product as a title

05:34.830 --> 05:42.550
and now if we have a quick look here at edit product, we see that there we already set the value

05:42.690 --> 05:48.370
if editing is set to true and then we output product title, product image url.

05:48.690 --> 05:52.690
Now we can tweak this a little bit,

05:52.850 --> 05:57.950
I'll still set editing to false because we still are not editing and I don't want to change anything

05:57.950 --> 06:07.310
else on the page but what I will do is I'll set my product here equal to an object where I do set the

06:07.310 --> 06:17.080
title and so on to these fields, to these inputs which I did fetch. So I'll set the title, the image url and

06:17.110 --> 06:24.900
also the price and the description to these fetched inputs so that we can use that old data in the way

06:24.900 --> 06:26.560
we are already using it

06:26.610 --> 06:35.190
but I'll now add another field here, hasError maybe and I'll set this to true here.

06:35.190 --> 06:41.090
Now that simply means that I should ensure that hasError is also set in other places where I render

06:41.120 --> 06:48.860
this page, like here where I set it to false for get add product and for get edit product down there,

06:48.940 --> 06:51.070
I will also set it to false,

06:51.090 --> 06:57.010
so it's only true right now if I'm in the if block of my post add product route here.

06:57.690 --> 07:03.860
Now in my view I can now take advantage of this new has error field and I can say I want to output the

07:03.870 --> 07:10.920
existing product title if I'm editing or if hasError is true,

07:11.040 --> 07:17.100
so that is my alternative condition here to ensure that the old data in this case then is output like

07:17.100 --> 07:22.960
this.

07:22.960 --> 07:28.470
Now of course it would also be nice to display some error message, so we can grab that from the login

07:28.480 --> 07:34.600
page and check for the existence of error message here above my form and output it

07:34.600 --> 07:40.950
if we have one, this just means that again back to my routes and not to my routes, to my controller in

07:40.950 --> 07:51.740
the admin.js file, we should have an error message which simply is null by default.

07:51.830 --> 08:01.110
And here in my if block where I do have validation errors, I will set the error message to errors array,

08:01.290 --> 08:03.850
the first error which we are guaranteed to have

08:03.930 --> 08:08.060
and there the msg property property as we did it before

08:08.370 --> 08:15.610
and of course I'll also set error message here when we get the edit page, there I set it to null. And

08:15.610 --> 08:23.250
now with that, if I hit add product here, I get invalid value because I set no custom errors

08:23.410 --> 08:30.760
but it did to re-render this and if I enter first book here, then this is also kept if I click add product, it still

08:30.760 --> 08:34.430
gives me that default message of invalid value because I never set my own one,

08:34.450 --> 08:37.070
you could of course do that with the techniques I showed.

08:37.090 --> 08:42.970
We also have no red borders because we didn't add that logic yet but it is reloading the page, it's not

08:42.970 --> 08:47.180
submitting the request and it's keeping all the data which we did input

08:47.200 --> 08:51.650
right, so this is not thrown away and that is of course worth a lot.

08:51.940 --> 08:55.400
We can of course also edit products and for this,

08:55.450 --> 08:57.860
let me quickly add a valid product,

08:57.880 --> 09:01.880
this also allows us to test whether this works.

09:04.980 --> 09:11.100
And it looks like it failed but actually if we go back, we see we get a double headers sent error which

09:11.100 --> 09:17.790
is stemming from my admin controller, I should return this otherwise after sending this error response,

09:17.790 --> 09:22.750
we continue with the rest of our code which I don't want to.

09:22.860 --> 09:24.280
So now if I hit add product here,

09:25.210 --> 09:27.010
this still fails though.

09:27.010 --> 09:32.740
The interesting thing is if I go back to my products collection, first book was added before though,

09:32.970 --> 09:38.120
well that was added because I did not return in case of an error as I'm doing now,

09:38.230 --> 09:42.180
so now the returning works but still I get this invalid value

09:42.490 --> 09:48.790
and if we want to find out for what I get it, I can log errors array here so that we can have a look

09:48.790 --> 09:55.150
into this errors object. If I add this again, now it fails of course, we see it's the title. The title failed

09:55.150 --> 10:03.060
somehow, the title somehow is valid in a way that tells us that it does not fulfill our criteria

10:03.440 --> 10:10.630
and the title for adding a product should be alphanumeric, have this length and be trimmed.

10:10.630 --> 10:18.700
Now the thing is my alphanumeric check, the whitespace here is neither alphabetic character nor a number,

10:18.970 --> 10:26.230
so maybe we should just check if it is a valid string because that will allow whitespace as well

10:26.230 --> 10:34.470
and now if I hit add product, now this succeeded and it did add it therefore. So now I've got two first books

10:34.470 --> 10:35.050
here,

10:36.670 --> 10:38.620
let me delete this real quick.

10:38.620 --> 10:42.250
Now if I try adding this again though, maybe a second book,

10:47.990 --> 10:49.170
it does work

10:49.460 --> 10:53.360
and now it also shows that image correctly, so seems to have been a bug.

10:53.480 --> 10:58.130
So this is now working, now we added validation for adding this

10:58.130 --> 11:01.880
and how is it for editing? If I add an exclamation mark here,

11:02.210 --> 11:05.010
this is accepted, we see the exclamation mark up there

11:05.270 --> 11:12.750
and if I now enter something incorrect like the price is missing, well then this seems to break it doesn't

11:12.750 --> 11:13.650
continue

11:14.730 --> 11:17.050
and indeed I do have an error down there

11:18.140 --> 11:21.190
which makes a lot of sense because what didn't we do yet?

11:21.560 --> 11:26.600
Well we didn't add our error collecting and error returning to the edit route,

11:26.630 --> 11:29.920
we only worked on add thus far, post add product.

11:30.170 --> 11:35.780
So in the next video we'll take care that for editing a product, we also get validation errors instead of

11:35.780 --> 11:36.680
a broken app

11:36.680 --> 11:38.600
when we do submit invalid values.
