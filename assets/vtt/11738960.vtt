WEBVTT

00:02.530 --> 00:09.490
So let's finish that setup of the products table which I need for my first little demo code. Here in the table

00:09.550 --> 00:16.280
editor so to say, in the workbench, we can define how a product's entry should look like.

00:16.300 --> 00:21.820
For that we first of all define the name of a field, ID and the data type

00:21.820 --> 00:24.570
and for the ID, an integer is fine.

00:24.780 --> 00:30.070
We can also check that it should be the primary key by which records in this table will be identified,

00:30.580 --> 00:34.470
that it must not be null, that it should be unique,

00:34.480 --> 00:40.690
that should definitely be the case, if it should hold binary data which is not the case, if it's unsigned

00:40.700 --> 00:45.760
so if it holds no negative values which should also be the case because that should be an integer starting

00:45.760 --> 00:49.040
at 1 and then incrementing, here

00:49.330 --> 00:55.960
if it is zero fill and for us important, if it's auto-incrementing and that should be the case because

00:55.990 --> 00:58.710
every new record should receive that automatically

00:58.780 --> 01:02.640
and it should be a higher number than in the last record.

01:02.680 --> 01:10.020
Now a product also typically has a title and there I'll use a var char which is basically a string,

01:10.090 --> 01:16.210
I'll just define that it may be up to 255 characters long and longer titles will simply be cut off,

01:16.210 --> 01:18.100
so that's something to keep in mind.

01:18.130 --> 01:19.830
It must also not be null,

01:19.870 --> 01:25.750
so we have to have a value in there but I don't need any other setting here. For a product,

01:25.750 --> 01:27.520
I also want to have a price

01:27.700 --> 01:33.520
and here I want to have a double so that we can enter decimal places,

01:33.520 --> 01:35.590
this must also not be null.

01:35.950 --> 01:40.720
I also want to have a description which now will not be a var char

01:40.780 --> 01:47.430
but will be text and if you're wondering which data types are available, that is exactly what I meant,

01:47.530 --> 01:55.360
you should definitely consult a full SQL course to learn more about the available data types and

01:55.360 --> 01:56.800
how to work with them.

01:56.800 --> 02:03.760
So here I got my text which is simply a longer text than the var char which has a limitation

02:03.760 --> 02:10.990
and I will have an image url which I'll also set to var char 255 which means longer urls

02:11.270 --> 02:13.810
also won't work. With that

02:13.810 --> 02:16.220
I defined how my product should look like,

02:16.450 --> 02:22.200
you can leave everything else as it is and then on the bottom right, I then click on apply here.

02:22.420 --> 02:24.130
It shows you the SQL statement

02:24.130 --> 02:28.930
it will execute and you could execute this on your own, for example in node of course to always

02:28.930 --> 02:31.770
create this new table, here we'll do it in the workbench,

02:31.810 --> 02:39.040
so click apply, close and now on tables, you see the new products table and if you click this icon here

02:39.130 --> 02:42.490
on the very right, you can see the entries in there.

02:42.490 --> 02:47.250
By the way, you also see the SQL query that was executed to look into that

02:47.440 --> 02:50.900
and that's pretty similar to the query we're executing here.

02:52.040 --> 02:58.370
So now that the table is set up, we just need to enter one dummy data so that we have something to fetch

02:58.790 --> 03:01.180
and I will simply add a book here,

03:01.930 --> 03:06.730
whoops, with a price of let's say 12.99, description

03:07.060 --> 03:13.160
this is an awesome book and also an image url.

03:13.270 --> 03:19.030
Now if you've got problems copying a value in here, you simply have to type it manually, copying also

03:19.030 --> 03:20.110
didn't work for me,

03:20.110 --> 03:24.910
of course you can also enter some dummy value and just live with no image being displayed.

03:24.910 --> 03:29.170
Now let's also enter an ID here though that should be auto-generated if you don't do it,

03:29.170 --> 03:30.700
click on apply on the bottom right,

03:30.730 --> 03:31.540
apply here,

03:31.550 --> 03:33.670
close and now if you again click on this

03:33.670 --> 03:37.390
icon here next to products and the left column,

03:37.450 --> 03:40.970
you'll see that now this one element was added here.

03:41.110 --> 03:42.690
Now that we get a book in here,

03:42.760 --> 03:49.180
let's go back to our node code and there, we can now chain then and now this is something provided by

03:49.180 --> 03:53.800
the fact that we're using promise here when exporting the pool.

03:53.980 --> 04:01.000
We now get back promises when executing queries like this with execute and promises have two functions,

04:01.150 --> 04:05.520
then and catch. Let's explore them in the next lecture.
