WEBVTT

00:02.260 --> 00:09.270
You now learned how you can display product information by getting that information out of the url,

00:09.580 --> 00:13.270
now we have a similar problem for adding a product to the cart.

00:13.300 --> 00:19.870
We get that add to cart button but in the end when posting our data, we also want to know which product

00:19.870 --> 00:21.790
to add to the cart.

00:21.790 --> 00:25.500
However here, I will send a post request right,

00:25.500 --> 00:30.920
add to cart sends a post request and this has one important implication,

00:31.210 --> 00:34.940
we can pass data in the request body.

00:35.140 --> 00:41.530
This was not possible for a get request but for post request you typically use the request body,

00:41.530 --> 00:45.900
this is also what we use when adding a product. For adding a product,

00:45.910 --> 00:51.790
we have a form and as I mentioned there when we added this the first time in the course, this automatically

00:51.790 --> 00:57.610
gives us a request which puts all the input data and so on into its body

00:57.730 --> 01:00.010
but this only works for posting data,

01:00.010 --> 01:05.620
this is not available for getting data but for posting data, we therefore don't need to add anything

01:05.620 --> 01:13.090
to the url because we can put the information in the post body. So therefore what we should do on product

01:13.090 --> 01:19.610
detail in this form is we should simply pass some important information as part of the post request.

01:19.870 --> 01:25.270
So I will add an input here and I will make it of type hidden so that it doesn't really get displayed on

01:25.270 --> 01:33.610
the page but still is encoded in the request that is getting sent and I will give this a name of product

01:33.640 --> 01:35.390
ID, the name is up to you though

01:35.530 --> 01:40.810
and now we also need to store a value here and that value will be the value that is added to the request

01:41.020 --> 01:42.560
for that product ID

01:43.330 --> 01:46.880
and here I'll use ejs again to output product ID

01:46.980 --> 01:55.050
because I still want to pass that ID to my backend so to say, to my node express app but I don't want

01:55.050 --> 01:59.330
to use the url because I do use a post request so there's no need to use it.

01:59.340 --> 02:00.400
You could do it though,

02:00.420 --> 02:04.290
you can also add a dynamic segment for post requests,

02:04.380 --> 02:05.410
that would work too

02:05.490 --> 02:07.470
but there is no need to do it here.

02:07.860 --> 02:16.810
So let's pass that data with that hidden input and let's now work on the backend on our shop.js file.

02:17.310 --> 02:23.280
There we got get cart but get cart is not the route we're working on right now,

02:23.280 --> 02:25.680
we'll use that to display the cart then

02:25.770 --> 02:27.710
but for now I need a post request.

02:27.840 --> 02:31.470
So let's add a new route which accepts a post request,

02:31.470 --> 02:33.620
still to get to /cart,

02:33.660 --> 02:40.080
that doesn't change but now we need a new controller function and we'll add one here,

02:40.260 --> 02:43.540
maybe near get cart, maybe in front of it or after it

02:43.560 --> 02:44.670
that's up to you,

02:44.790 --> 02:48.400
exports post cart

02:48.590 --> 02:55.720
and there I also will get my request response and next function as arguments. And in here

02:55.880 --> 03:02.540
we will now have to retrieve the product ID from the incoming request and then also fetch that product

03:02.780 --> 03:04.210
in our database,

03:04.250 --> 03:10.740
so in our file and add it to our cart. We got no cart yet though

03:10.850 --> 03:13.100
so this is also something we'll have to work on.

03:13.340 --> 03:16.340
For now let's simply extract the data as a first step,

03:17.370 --> 03:25.330
the prod ID by accessing request and now since it's part of the request body, we'll access request body here

03:25.750 --> 03:31.640
and then product ID because product ID is the name I'm using

03:31.690 --> 03:41.070
in my view here on the hidden input. So therefore here, I got this available,

03:41.100 --> 03:44.770
I can console log this for the moment

03:49.670 --> 03:53.220
and thereafter I can simply redirect,

03:53.320 --> 04:03.380
maybe to just /cart here and this will then load the get route, so it will render the cart page. So

04:03.380 --> 04:09.770
with that let's go back to the routes file and let's connect the newly created controller action with

04:09.770 --> 04:10.900
the post route there,

04:11.120 --> 04:13.570
so post cart should be connected here

04:13.760 --> 04:18.680
and now if you save that and you go back to the details page

04:18.820 --> 04:20.230
and for now only there

04:20.260 --> 04:21.390
this button will work

04:21.580 --> 04:27.820
and you click add to cart, I'm on the cart page and in the console we see that random ID which was

04:27.820 --> 04:30.840
generated, that random number being logged.

04:30.850 --> 04:32.020
So this is working,

04:32.140 --> 04:36.760
now obviously we're not storing that in a cart right now

04:37.030 --> 04:42.910
and before we work on that, let's actually go back to the product detail page and grab that entire form

04:42.960 --> 04:50.380
here and make sure we also use that form in all the places where we also have add to cart buttons.

04:50.440 --> 04:53.600
So let's add it on the product list.ejs file,

04:53.650 --> 04:54.730
now important

04:54.920 --> 04:58.130
there I also have product ID available,

04:58.210 --> 05:05.650
so I also access a product field so this is working here and let's add it to index.ejs and there

05:05.820 --> 05:11.130
I also have the product object available which is now important all the time of course because I'm

05:11.150 --> 05:20.600
accessing product ID here and since this is exactly equal in all three views, we can also add an include add

05:20.690 --> 05:28.310
to cart ejs and put that entire code into that include here and then simply well include that include.

05:28.340 --> 05:38.580
So instead of having that code here in index.ejs, we can use the ejs tag with the minus to add include

05:38.690 --> 05:45.500
and then we go to well up one level and then into includes and then add to cart and we use that

05:45.500 --> 05:54.790
same code also in the product detail page here and also in the product list page.

05:54.830 --> 05:59.460
So there I also want to replace this form with my include.

05:59.460 --> 06:02.280
Now let's see if that still works, if I now go to products,

06:03.380 --> 06:09.140
now we get this error because if you have an include in a for loop or in a loop in general as we have

06:09.140 --> 06:14.540
it here, we're looping through all the products and then product is a local variable available in that loop

06:14.570 --> 06:17.680
only, then in include, included in the loop

06:17.690 --> 06:24.960
unfortunately doesn't get that variable by default but you can pass it to that include here and

06:24.980 --> 06:32.030
you can do so by adding a second argument to the include function where you again pass an object and

06:32.030 --> 06:34.470
simply add that variable again.

06:34.580 --> 06:40.190
So here this product is what will be available in include and on the right side, you include or you

06:40.190 --> 06:47.030
add the value you have available in this file, so product in the loop is now passed to product in the include.

06:47.930 --> 06:53.900
This of course needs to be done for all our include, so also in the index.ejs file and not for the 

06:53.900 --> 06:57.240
one in the product detail though because there, it's not inside a loop,

06:57.260 --> 06:59.990
so it's available globally and therefore works

06:59.990 --> 07:07.440
and now if we reload here, this works, starting page works and the details page also still works and

07:07.430 --> 07:10.010
we can go to the cart on all these pages.

07:10.380 --> 07:11.430
This is looking good,

07:11.760 --> 07:16.970
we're also outputting the ID here so this is working. Now as a next step, we'll have to work on that cart.
