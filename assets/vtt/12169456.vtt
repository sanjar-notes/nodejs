WEBVTT

00:02.180 --> 00:07.610
Now for adding web sockets, you've got a broad variety of methods to use.

00:07.610 --> 00:14.330
If you google for node web sockets or node express web sockets, you'll find a lot of articles and packages

00:14.330 --> 00:15.560
you can use.

00:15.680 --> 00:24.750
One of the most popular packages however is socket.io. Socket.io is a package that uses web sockets

00:24.930 --> 00:30.210
and gives you a lot of convenience features around that protocol that make it very easy to set up a

00:30.210 --> 00:31.280
web socket channel

00:31.290 --> 00:37.080
but with a client in the server and to use that channel. You can learn all about it here in the official

00:37.080 --> 00:37.820
docs,

00:37.950 --> 00:42.980
this is no socket.io course so we'll not cover every single feature it offers

00:43.170 --> 00:48.510
but I will show you how to add it to a project and how to set up some basic communication.

00:48.900 --> 00:55.050
So socket.io is what we'll use and socket.io and that is the key thing I want you to understand does

00:55.050 --> 01:01.570
use the web socket technology, the web socket protocol and sets it up behind the scenes for you.

01:01.770 --> 01:07.680
You don't have to use socket.io to use web sockets though, you could use one of the other options I showed

01:07.680 --> 01:14.790
you on Google before. There are packages that give you a more raw approach with less convenience features

01:15.000 --> 01:18.700
and that might be what you're looking for for specific operations.

01:18.840 --> 01:24.540
We'll go with the convenient solution of socket.io here though and I strongly recommend diving into

01:24.540 --> 01:31.200
some advanced resources if you want to learn all about web sockets or socket.io specifically.

01:31.200 --> 01:33.670
So how can we add it to our project now?
