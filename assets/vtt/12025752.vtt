WEBVTT

00:02.300 --> 00:08.380
Now that we learned a bit about how we can validate user input before handling it,

00:08.570 --> 00:13.760
let's also work on the user experience side of things because right now when signing up for example,

00:13.760 --> 00:19.490
let's say you enter an e-mail address and you enter a password but the passwords don't match or the e-mail

00:19.490 --> 00:20.700
is already taken,

00:20.720 --> 00:25.880
then we give you that error message which is great but of course all the input is lost and that is a

00:25.880 --> 00:27.320
horrible user experience.

00:27.320 --> 00:33.680
So typically we want to keep the input, we want to keep the data the user entered and that is exactly

00:33.680 --> 00:34.960
what I want to work on next,

00:34.970 --> 00:36.930
keeping that data around.

00:37.040 --> 00:39.040
Now how can we do that?

00:39.080 --> 00:43.930
Well for that, let's go to these controller actions where we do handle sign up and sign in 

00:44.090 --> 00:52.900
and let's maybe start with signing users in. There we do return this page when we enter incorrect data

00:53.000 --> 00:56.300
and we send that status code, this error message.

00:56.300 --> 00:59.770
By the way we should of course also do that for logging in

00:59.780 --> 01:05.400
now that I see that I forgot that, status 422 should be added here too

01:05.630 --> 01:10.880
but in the end what matters here is that we render that view and we include the error message

01:10.940 --> 01:17.090
but of course to keep the data the user entered, we should send this data back as well.

01:17.090 --> 01:25.620
So what we can do here is we can send maybe old input key here, whatever you want

01:25.660 --> 01:31.540
and that could be an object and this object could hold the email and the password.

01:31.570 --> 01:36.880
So I have two key value pairs here where I essentially store the email and the password which I retrieved

01:36.880 --> 01:42.850
from the incoming request and I send that back to the page we render when we render it

01:43.330 --> 01:47.310
due to this error so that I can render it on the page and output it there

01:47.380 --> 01:55.970
because what this allows me to do is I can now go to my sign up page and by the way, I should also output

01:55.970 --> 02:00.260
confirm password which you can retrieve from request body,

02:00.500 --> 02:03.110
confirm password here in the sign up route,

02:03.140 --> 02:06.220
so this is another field that we enter so we should return it.

02:06.500 --> 02:12.830
And now when we have the invalid input, we get these values back in our view

02:13.180 --> 02:19.430
and so now if I go to my signup.ejs file, we can basically output that data there.

02:19.430 --> 02:26.870
So for example for the e-mail input, we can add the value attribute which html supports and we can output

02:26.900 --> 02:34.690
our data there, so we can use this ejs syntax to pre-populate this with some data and the data here would

02:34.710 --> 02:36.160
be old input.email.

02:36.170 --> 02:42.180
If we do that and we save everything and I reload the sign up page,

02:45.000 --> 02:53.010
I get an error though and the reason is that when I visit this for the first time through my get sign up action, I

02:53.010 --> 02:54.600
don't render the old input,

02:54.720 --> 02:58.240
so here when I render the sign up page I don't have old input,

02:58.290 --> 03:00.980
so what I should do instead is there

03:01.230 --> 03:05.880
we can also pass our data out with email being equal to an empty string,

03:05.880 --> 03:16.780
the same for password and for confirm password, so that I enter empty values for these fields when we

03:16.780 --> 03:24.470
load it for the first time and I enter the old input for the case that we have that validation error.

03:24.610 --> 03:30.480
And with that if I now reload sign up, this works and if I now do enter something here which is incorrect

03:30.490 --> 03:37.720
for some reason, then you see that it kept the old e-mail because we return that with the response

03:38.080 --> 03:40.460
and we then output it in our view

03:40.780 --> 03:46.170
and of course we should do the same for password and confirm password. So for password I output old

03:46.190 --> 03:50.080
input.password and for confirm password,

03:50.080 --> 03:53.600
it is old input.confirm password,

03:53.600 --> 04:02.520
so I'm outputting that through ejs syntax. And therefore now when I enter something invalid again,

04:02.920 --> 04:09.250
now we still get that error message but we kept our old data which is a much better user experience

04:09.250 --> 04:09.720
of course.
