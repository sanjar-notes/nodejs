WEBVTT

00:02.110 --> 00:09.130
That's it for this module. You learned that when moving from a classic node application which I don't

00:09.130 --> 00:14.830
mean in the sense of how you built it in the past, so simply just an application where you render 

00:14.830 --> 00:19.460
the views in the server, that is a classic application because it is what we started with in this course.

00:19.720 --> 00:25.540
So if you move from such a node application to a rest API, you'll learn that most of the server side

00:25.540 --> 00:27.380
code does not change,

00:27.410 --> 00:33.950
you work with validation files and so on in exactly the same way as you did with

00:33.970 --> 00:39.790
well the classic approach. Only request and response data changes because there you send json data,

00:39.940 --> 00:41.950
you don't render any views.

00:41.950 --> 00:50.170
You also got more http methods available which you can use to construct your endpoints, your API endpoints

00:50.380 --> 00:56.830
and the most important takeaway is that the rest API server does not care about the client.

00:56.950 --> 00:59.230
The requests are handled in isolation,

00:59.290 --> 01:03.750
so every request is treated as if it would arrive for the first time.

01:03.790 --> 01:06.940
So we don't use sessions, the server, the rest

01:06.940 --> 01:09.530
API does not store any sessions,

01:09.550 --> 01:12.670
it does not store any client data.

01:12.880 --> 01:18.550
Now that has important implications for authentication. Due to no sessions being used,

01:18.580 --> 01:20.350
the authentication works differently.

01:20.350 --> 01:27.010
Each request needs to be able to send some piece of data that proves that the request is authenticated

01:27.430 --> 01:33.090
and that is this json web token which we generated and worked with in this module.

01:33.100 --> 01:40.990
It's a common way of storing some authentication information in a token, a piece of data which you send

01:40.990 --> 01:47.020
to the client, which you store on the client and then which then gets attached to every outgoing request

01:47.260 --> 01:49.390
to a protected resource.

01:49.690 --> 01:55.420
Json web tokens are signed by the server and only the server can validate them by using a private

01:55.450 --> 01:57.940
key which is only known to the server,

01:57.970 --> 02:04.880
hence you can't fake or manipulate tokens on the client and that's it for this module.

02:04.890 --> 02:07.640
We now had a detailed look at building rest

02:07.640 --> 02:14.660
APIs, a common form of node application which you need and a lot of scenarios and now you have already

02:14.810 --> 02:22.750
a very broad toolset which allows you to build extremely versatile and powerful node applications.

02:22.880 --> 02:24.830
We're still not done with the course though,

02:24.870 --> 02:25.870
there's more to come.
