WEBVTT

00:02.130 --> 00:04.530
Now first of all let me show you the official docs,

00:04.530 --> 00:07.800
you can always visit mongoosejs.com

00:07.920 --> 00:13.680
and there you can dive into the full docs to learn everything about mongoose, all its details, all its

00:13.680 --> 00:18.240
advanced features which we'll not cover in this course because this is not a mongoose course,

00:18.240 --> 00:24.460
I just want to give you an introduction to mongoose here, so everything can be seen in great detail here

00:24.570 --> 00:29.970
but that being said, I will walk you through all the core fundamentals in this course and in this module

00:29.970 --> 00:34.390
of course and we'll also keep on using mongoose for the rest of this course

00:34.500 --> 00:41.010
so we'll gradually use more features as we add more features to our application like authentication

00:41.010 --> 00:41.970
and so on.

00:41.970 --> 00:45.180
So this is how you can learn more about mongoose,

00:45.210 --> 00:52.290
now to add it to our project, I quit my npm start process and then I can simply run npm install

00:52.290 --> 00:54.630
--save mongoose, like that,

00:54.660 --> 00:56.450
that is the name of the package.

00:56.550 --> 01:03.150
Now this will download and add it to our project and then we are already ready to start using it

01:03.570 --> 01:09.040
and the first thing we want to do when we start using it is that we want to connect to our database

01:09.660 --> 01:16.350
and for that, we could use our database utility file here but actually mongoose does all of that utility

01:16.350 --> 01:22.650
management and the management of that connection behind the scenes for us. What we can do is we can get

01:22.650 --> 01:30.890
rid of the database.js file and we can go to the app.js file and in there, simply import mongoose.

01:31.080 --> 01:36.140
So here let's import mongoose by requiring mongoose,

01:36.250 --> 01:38.360
whoops, mongoose like this

01:38.760 --> 01:45.210
and with mongoose imported, we can set up a connection. So down there where I used my own mongo connect,

01:45.510 --> 01:55.300
I can use mongoose like this and then there, there is a connect method we can use. Now that connect method

01:55.510 --> 02:00.880
takes the same url we used for connecting before,

02:00.900 --> 02:06.850
so make sure you grab that url from your backend again and enter that here,

02:06.850 --> 02:13.090
make sure you're using the right user which you set up for that and of course enter your password

02:13.380 --> 02:16.240
and this will now connect to mongoose.

02:16.590 --> 02:23.190
Then you get a promise here or you can call then at least and there you'll get the result of this

02:23.190 --> 02:27.490
connection but most importantly, you know that at this point of time you are connected,

02:27.600 --> 02:31.270
so here I then also want to bring up my node server or to be precise,

02:31.320 --> 02:33.610
start listening for incoming requests.

02:33.630 --> 02:39.010
I can also add a catch block here and log any potential error

02:39.030 --> 02:41.610
I might be getting when trying to get connected.

02:41.610 --> 02:49.000
So with this, we already have everything in place we need to connect and mongoose as I mentioned will

02:49.000 --> 02:51.870
manage that one connection behind the scenes for us 

02:51.950 --> 02:57.050
so that in other places where we start using mongoose from the mongoose package, we use that same connection

02:57.090 --> 03:03.210
we set up here, really convenient of course. And that already leads us to the next thing we have to do.

03:03.450 --> 03:10.680
We have to move our code over to mongoose now and not to use the mongodb driver directly as we

03:10.680 --> 03:11.900
are currently doing it.

03:12.090 --> 03:17.790
So we'll again have to rewrite all our models but I hope you still see the advantage of this,

03:17.790 --> 03:22.740
you first of all learn how to use the mongodb driver and you could of course stick to that and continue

03:22.740 --> 03:24.200
using that if you wanted to

03:24.360 --> 03:29.940
but now I will show you how you can move that over to mongoose to focus more on how your data should

03:29.940 --> 03:34.590
look like and less on all the logic for interacting with the database.

03:34.590 --> 03:41.550
Now to move over, again I do something I did before, I will comment out my different routes here in

03:41.550 --> 03:47.910
the shop.js and in the admin.js file so that we can gradually comment them back in as we make

03:47.910 --> 03:49.310
them work again.

03:49.380 --> 03:57.470
Now with all routes commented out if I run npm start, I get an error of course that util database

03:57.510 --> 03:59.280
was not found, in app.js

03:59.270 --> 04:05.640
I certainly have to get rid of that import here where I do import something from that database

04:05.880 --> 04:11.370
and the same is of course true for my models where I do also import something from the database.

04:11.370 --> 04:15.660
Now the problem is if I comment that out, nothing will work here anymore

04:16.230 --> 04:21.430
and therefore I will simply comment out everything in my models for the moment.

04:23.560 --> 04:27.340
Now with that, it looks like we are connected because we don't get any error here,

04:27.370 --> 04:33.420
this warning can be ignored and therefore we now are connected to our same mongodb server

04:33.430 --> 04:40.900
but now by using the mongoose package. And with that set up, let's start working on all our models and all

04:40.900 --> 04:44.890
our code to make it work with mongoose in the next lecture.
