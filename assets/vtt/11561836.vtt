WEBVTT

00:02.320 --> 00:08.660
So you hopefully got a first picture of what nodejs is and why you use it and what you use it for.

00:08.740 --> 00:15.640
Now typically and also what we will do in this course, you use nodejs to run it on a server to write

00:15.700 --> 00:17.310
server side code

00:17.710 --> 00:20.570
and for that, we have to have a look at the full picture.

00:20.590 --> 00:26.830
We have our users using a client computer with a browser, their mobile phone with a browser,

00:26.860 --> 00:32.760
even mobile apps and we will come back to how nodejs can communicate with these later in the course

00:32.760 --> 00:33.170
too

00:33.310 --> 00:36.780
but for now let's stick to the traditional browser picture.

00:36.790 --> 00:42.880
We get our users using the browser and there we can use html, css and javascript, javascript in the

00:42.880 --> 00:44.800
browser to create webpages,

00:44.800 --> 00:51.300
right. Now they visit a page, mypage.com and they send a request to do so,

00:51.370 --> 00:56.540
for example by entering a url in the browser, a request is sent to that url.

00:56.620 --> 00:59.120
Now there, this server comes into play.

00:59.140 --> 01:05.380
We got our server, some computer running in the Internet which has the IP associated with that domain

01:05.410 --> 01:07.780
which is automatically resolved for us

01:07.780 --> 01:13.780
and on that server, we then want to execute some code that does something with the incoming request

01:14.320 --> 01:20.880
and returns a response, often but not necessarily always as you will learn, this response is a html

01:20.880 --> 01:28.050
page which the browser then in turn can display. By the way, it is not necessarily just html, it's also

01:28.060 --> 01:34.670
things like css files or javascript files with javascript code for the browser, not for the server.

01:34.690 --> 01:40.840
Now on the server, we typically do tasks that we can't or don't want to do from inside the browser for

01:40.840 --> 01:47.470
performance or security reasons. We connect to databases for example to fetch and store data.

01:47.560 --> 01:53.320
We do user authentication which we obviously can only do on a place the user can't access to make it

01:53.320 --> 01:56.320
more secure and avoid it being hacked.

01:56.440 --> 02:01.410
We do it for input validation to see if a user entered a correct e-mail address,

02:01.450 --> 02:03.450
the browser can always be tricked,

02:03.460 --> 02:06.260
users can even edit their browser side code. 

02:06.280 --> 02:09.820
You can open the developer tools and start working on that page you're on

02:10.000 --> 02:13.330
but the server is of course sheltered from that,

02:13.510 --> 02:15.240
the user can't access it.

02:15.670 --> 02:22.030
And in general, we have our business logic on the server. Everything our user shouldn't see which takes

02:22.030 --> 02:23.930
too much time to run in the browser,

02:23.950 --> 02:29.410
where we obviously want to deliver a fast user experience or anything of that kind

02:29.410 --> 02:31.260
and that is where we use nodejs.

02:31.300 --> 02:33.080
So also javascript code

02:33.160 --> 02:36.370
but this time, not on the browser but on the server

02:36.640 --> 02:38.440
and this is where we use the many features

02:38.440 --> 02:45.730
nodejs gives us and this is how we indirectly allow our users to work with the server through that request response

02:45.730 --> 02:49.730
pattern, the direct access is not available.

02:50.140 --> 02:56.140
So this is how we will use nodejs in this course also, we will use it to write code on the server

02:56.380 --> 02:59.050
that returns data our users,

02:59.050 --> 03:00.980
our clients can work with.

03:01.060 --> 03:08.250
Now one important side note at this point of time, nodejs is not limited to running code on a server,

03:08.290 --> 03:14.590
it's a javascript runtime and you even saw a first demo which did not do anything where we needed a

03:14.590 --> 03:15.430
browser right,

03:15.430 --> 03:17.400
we didn't spin up a server there,

03:17.500 --> 03:22.400
we didn't do anything which we would have reached through a browser.

03:22.420 --> 03:28.120
We'll do that a lot throughout the course but we haven't done it thus far because it's just a javascript runtime,

03:28.150 --> 03:34.270
we can execute any javascript code with nodejs and often that is code that runs on a server and is

03:34.270 --> 03:36.310
executed upon incoming requests

03:36.490 --> 03:43.690
but you also often use nodejs for other code, for example for local utility scripts or build tools.

03:43.930 --> 03:50.890
If you worked with let's say react or angular or vue or anything of that kind, you actually used nodejs

03:51.070 --> 03:54.610
indirectly a lot for all the build processes

03:54.740 --> 04:01.600
these languages or frameworks needed because nodejs is a great tool for writing utility

04:01.600 --> 04:02.200
scripts.

04:02.260 --> 04:06.480
You have access to the file system so you can write and read and manipulate files

04:06.580 --> 04:12.240
and this allows you to do a lot of utility stuff on your computer that is never exposed to the public

04:12.310 --> 04:13.930
and I just want you to know that

04:14.020 --> 04:20.380
and I'll even have a section this course where I dive a little bit more in such build tools and non

04:20.420 --> 04:22.880
server side language usages of nodejs.

04:22.920 --> 04:29.830
In general and that is the most popular thing you do with nodejs though, you use it in the context

04:29.830 --> 04:32.330
of web development and server side code.

04:32.560 --> 04:34.240
So you use it to run a server

04:34.360 --> 04:36.810
and actually and that is an important difference to PHP

04:36.880 --> 04:44.200
for example, with nodejs you don't just write the code that is running on your server,

04:44.200 --> 04:46.730
you also write the server yourself,

04:46.780 --> 04:54.280
so the code that takes the incoming requests and routes them to your well other code. In PHP,

04:54.370 --> 05:00.940
you have extra tools like apache or nginx which run the servers which listen to incoming requests and

05:00.940 --> 05:03.710
then execute your php code, here

05:03.760 --> 05:05.320
nodejs does both.

05:05.350 --> 05:05.810
It does

05:05.820 --> 05:06.800
that listening

05:06.910 --> 05:10.630
and it then also does whatever you want to do in your code,

05:10.660 --> 05:13.270
so that's important and that's something you'll see in action soon.

05:14.270 --> 05:19.480
We also use it or we therefore also use it to run all our business logic,

05:19.490 --> 05:26.330
so not just to listen to incoming requests but to then work with the requests data, work with files,

05:26.510 --> 05:29.370
work with databases, all that fun stuff 

05:29.390 --> 05:34.690
nodejs is capable of and we'll do all that in this course obviously.

05:34.700 --> 05:41.120
And we also handle the response side not just incoming requests, you will also learn how you use nodejs

05:41.120 --> 05:43.820
to send back data to your clients,

05:43.940 --> 05:46.640
be that html pages, 

05:46.650 --> 05:54.190
html pages with dynamic content or data only in the format of json or xml or even files.

05:54.590 --> 06:00.100
So this is what we use nodejs and what we will dive heavily into in this course.

06:00.110 --> 06:04.410
Alternatives to nodejs would be things like Python,

06:04.610 --> 06:11.120
also with frameworks like flask or Django or PHP with frameworks like laravel maybe or standalone vanilla

06:11.180 --> 06:18.560
PHP of course and more, asp.net, Ruby on Rails, all that stuff, these basically are all replacements

06:18.710 --> 06:19.150
for

06:19.160 --> 06:24.290
nodejs or nodejs can be a replacement for them and there is no clear winner.

06:24.530 --> 06:28.250
All these languages are capable of doing the same kind of stuff

06:28.370 --> 06:35.450
and of course they differ in some technical regards but in general, it's great to have that broad variety.

06:35.450 --> 06:42.320
The huge advantage or one huge advantage of nodejs is that it uses Javascript, a language which you

06:42.320 --> 06:45.010
need so much in modern web development

06:45.080 --> 06:51.380
for all the frontend, for some build tools and if you then can also use it on the server side,

06:51.380 --> 06:54.080
you don't need to learn a bunch of different languages,

06:54.140 --> 06:59.000
you can use one and the same language and then use that for your server side code too.

06:59.000 --> 07:02.030
This is why nodejs is a great language to learn,

07:02.030 --> 07:04.000
you get so much efficiency out of it,

07:04.040 --> 07:07.340
it's also a highly performant and popular language.

07:07.430 --> 07:10.130
There are so many jobs out there for nodejs,

07:10.220 --> 07:12.320
there never was a better time to learn it.

07:12.350 --> 07:14.090
It's used in so many environments,

07:14.170 --> 07:20.960
also for a lot of cutting edge stuff but in general, nodejs is a great solution,

07:20.960 --> 07:22.010
it's trending,

07:22.010 --> 07:27.980
it's fast, it's efficient and it makes sure that you only need to learn one language to write all the

07:27.980 --> 07:30.510
code you need in a modern web application.
