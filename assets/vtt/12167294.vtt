WEBVTT

00:02.070 --> 00:08.030
We want to go to our react app and there, I'll quit the development server too and here, I will also install

00:08.030 --> 00:14.110
a new package with npm install --save and that will be socket.io-client. 

00:14.270 --> 00:19.750
So it's a different package name, it's socket.io-client because it is the code that will run on the

00:19.770 --> 00:20.580
client,

00:20.780 --> 00:25.180
hit enter and this will install that package into our react project.

00:25.230 --> 00:31.970
Now once this is done, go to the feed.js file in your react project and there at the top,

00:31.980 --> 00:37.690
first of all import with that frontend import syntax that differs from the backend syntax

00:37.890 --> 00:40.650
and you can learn more about that in my react course.

00:40.650 --> 00:46.560
But there, import open socket, you can name it however you want but this will be a function that opens

00:46.560 --> 00:51.940
a new connection, a new socket, import open socket from socket.io-client,

00:51.930 --> 00:53.710
so from that package you just installed.

00:53.820 --> 00:56.220
So this exposes a function on the client too

00:56.310 --> 00:58.920
and this is a function that allows you to connect.

00:58.920 --> 01:05.170
Now let's go to that componentDidMount function here where we load our first posts and so on

01:05.220 --> 01:11.500
and after we loaded these posts here, after this line, let's call this open socket function

01:11.580 --> 01:13.650
and now you need to define the

01:13.680 --> 01:20.910
url of the server where you've established your socket.io server and that of course is our backend

01:20.910 --> 01:21.990
server address.

01:21.990 --> 01:25.370
So it's http localhost 8080,

01:25.560 --> 01:26.810
nothing else is required

01:26.850 --> 01:31.350
and please note you do use http here because web sockets build up on that

01:31.350 --> 01:36.850
and now this function which is provided by socket.io will do all the heavy lifting behind the scenes.

01:37.110 --> 01:42.860
And if we now save that and we restart our frontend too and the backend is running as well,

01:44.240 --> 01:46.880
let's wait for that development server to restart

01:46.880 --> 01:51.560
so that our application here in the browser will actually reload.

01:51.770 --> 01:58.610
And now this should have already executed this open socket code because the page did reload,

01:58.610 --> 02:04.880
so if you now go to the backend, you indeed see client connected here because now we got an established

02:04.880 --> 02:12.410
connection between a client and our backend application through socket.io and all the other normal

02:12.440 --> 02:16.280
http requests will still work as before.

02:16.280 --> 02:19.190
Now let's use that connection for something useful

02:19.190 --> 02:23.080
and let's see what we could do with that socket.io connection

02:23.150 --> 02:25.100
that would make sense in our app here.
