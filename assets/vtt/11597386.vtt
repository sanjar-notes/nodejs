WEBVTT

00:02.150 --> 00:08.660
So now we had a look at pug and at handlebars, two possible templating engines you can use and if you

00:08.660 --> 00:14.840
plan on using them, definitely dive deeper into their docs. Now I want to show you my favorite and the templating

00:14.840 --> 00:19.090
engine we'll use for the rest of this course and that is ejs.

00:19.280 --> 00:26.210
Now ejs is a templating engine which is just like pug, supported out of the box so we don't need

00:26.210 --> 00:29.240
to register the engine as we did it with handlebars,

00:29.240 --> 00:30.360
we can remove that,

00:30.500 --> 00:33.820
we can therefore also get rid of that handlebars import

00:33.860 --> 00:37.660
and here we just set the view engine to ejs now.

00:37.700 --> 00:44.870
Now ejs has a very nice syntax in my opinion and has a nice mixture of the extended functionalities

00:44.990 --> 00:47.660
of pug, so not regarding the html

00:47.690 --> 00:53.380
but regarding the javascript code you can use in your templates, that you can do things like that

00:53.390 --> 01:01.280
simple comparison here in shop.pug file, this comparison here with the if statement which we couldn't

01:01.280 --> 01:02.640
do in handlebars,

01:02.690 --> 01:08.630
that is again possible with ejs and this is the nice thing I like about it and still, it uses normal

01:08.900 --> 01:09.410
html

01:09.560 --> 01:12.700
just like handlebars which I personally also like

01:12.710 --> 01:16.490
but of course you can follow along in this course with any solution,

01:16.490 --> 01:22.510
I will stick to ejs though and all source code will therefore be provided with that templating engine.

01:22.610 --> 01:23.840
So let's use it then

01:23.930 --> 01:27.360
and let's start with the good old 404 page again.

01:27.620 --> 01:32.540
I'll add my 404.ejs file and now in there,

01:32.540 --> 01:37.190
let's start with the html code again and let's copy that into that file here,

01:37.190 --> 01:39.920
so all the 404 html code,

01:39.950 --> 01:41.610
let's move it in there,

01:41.730 --> 01:45.260
get rid of that active class which still incorrectly is there

01:45.500 --> 01:47.880
and now we got this set up. Now

01:48.020 --> 01:55.640
ejs does not support layouts but we will find a solution to at least have some kind of reusability

01:55.640 --> 01:57.260
of certain building blocks

01:57.320 --> 02:01.150
but for now let's just create the whole document in that file.

02:01.190 --> 02:06.680
So this is now our page and let's start with the title again and let's output that dynamically. Now

02:06.710 --> 02:14.660
in handlebars, we used double curly braces, in pug we used hashtag and then single curly braces, in ejs

02:14.660 --> 02:19.160
we use a smaller than sign and then a percentage sign

02:19.280 --> 02:25.670
and then if we just want to output a value in the place we're placing this placeholder, we add an equal

02:25.670 --> 02:31.940
sign right after the percentage sign and then we close this with just a percentage sign and a greater

02:31.940 --> 02:32.780
than sign.

02:32.810 --> 02:34.040
So this is the syntax

02:34.100 --> 02:41.390
and now here we can output the data which our template receives and just as before, the method of how

02:41.390 --> 02:42.060
we receive

02:42.070 --> 02:43.570
that hasn't changed,

02:43.670 --> 02:48.430
so we can still output page title here, just as before.

02:48.440 --> 02:54.170
So just to bring this back in memory, in app.js we're passing in that page title here and therefore

02:54.170 --> 02:57.420
we can reference page title in our template.

02:57.770 --> 02:58.990
So this will still work

02:59.180 --> 03:01.230
and with that we can already test this.

03:01.310 --> 03:07.280
If I now save this and I reload here, I get an error for add product because we've got no ejs template

03:07.280 --> 03:08.340
for that yet

03:08.570 --> 03:10.940
but if I enter anything else which is not found,

03:10.940 --> 03:15.100
we do indeed see our not found page rendered through

03:15.140 --> 03:16.390
ejs.

03:16.580 --> 03:17.780
So this is now working

03:17.900 --> 03:21.340
and with that let's move on to add product,

03:21.470 --> 03:24.240
let's add the add-product.ejs

03:24.290 --> 03:27.190
file here and in this file,

03:27.200 --> 03:32.570
again I'll just copy in my add product html code, here

03:32.570 --> 03:35.380
I also want to output the title dynamically though,

03:35.480 --> 03:39.740
so again our syntax here which we used just a second ago,

03:39.830 --> 03:44.820
let's output the page title here and then the rest can stay as it is for now.

03:45.140 --> 03:51.400
Now the more interesting part is the shop file because there, we also need an if statement and a loop.

03:51.690 --> 03:57.960
So let's add our shop.ejs file and in that shop.ejs file here,

03:58.190 --> 04:06.700
let's copy in the html code we got here for the shop and let's make sure we also take that new image here, so

04:06.800 --> 04:13.320
let's copy that from one of the other files then move over to shop.ejs and replace that here.

04:13.850 --> 04:20.600
And with that, now let's remove these comments again so that this is part of our page, let's remove that

04:20.750 --> 04:21.970
part up there

04:22.320 --> 04:31.810
and now in this file, we can of course again simply output our title equals page title as we did it before

04:32.030 --> 04:37.250
but the more interesting part are obviously the if statement and our loop,

04:37.250 --> 04:44.920
so we want to output this grid here only if we do have some products. Now an if statement is placed

04:44.930 --> 04:51.140
a bit differently than with handlebars, we still use our smaller than percentage sign syntax but not

04:51.460 --> 04:56.900
an equal sign because we don't directly output a value here in this place,

04:56.900 --> 04:58.540
instead we want to enclose,

04:58.550 --> 05:07.400
we want to wrap a certain block of code and we do this by adding our opening and closing ejs tags

05:07.400 --> 05:09.390
you could say like this

05:09.410 --> 05:14.210
and now in there and that's the cool thing, you can write vanilla Javascript code.

05:14.210 --> 05:18.010
Now we know that we will get in our shop route here,

05:18.290 --> 05:25.700
we will get our prods key which holds our products array and this will be an array and therefore here

05:25.700 --> 05:30.920
what we can do is we can write a normal javascript if statement, so normal javascript code and that is

05:30.920 --> 05:31.840
really important

05:32.090 --> 05:36.670
and simply say prods.length greater 0

05:36.800 --> 05:43.880
and if that is the case, I want to render this, so thereafter after this grid, I also close this and now here important,

05:44.060 --> 05:49.720
you simply close the curly brace which you also have to open here at the beginning.

05:49.880 --> 05:56.380
So in the end what you do is you write a normal if statement as you would write it in a javascript file, just

05:56.490 --> 06:04.310
that the part inside of that statement is not javascript code but this html code and I find this to be

06:04.310 --> 06:07.300
very straightforward and easy to understand.

06:07.430 --> 06:13.720
So this is our if statement here with the opening curly brace and once we're done, we close that curly brace.

06:13.880 --> 06:19.520
Now we can of course then also combine this and add an else block here just as we would do it in normal

06:19.520 --> 06:22.860
javascript again and eventually once we're done,

06:22.880 --> 06:24.680
also close that

06:24.950 --> 06:31.560
and now here we can output our h1 tag where we say no products found.

06:31.640 --> 06:32.690
Now that is nice,

06:32.690 --> 06:40.080
let's see that in action by saving and by now going to the shop page and indeed, we get no products found.

06:40.130 --> 06:49.040
If I now do add a product on add-product here, first book, we do see it here so the if statement is working.

06:49.040 --> 06:54.110
Now again of course we want to loop through all the products and output our data and for that again,

06:54.110 --> 06:59.360
we use the same logic as with the if statement. We create simply the normal javascript code we would

06:59.360 --> 07:02.210
use for looping and there are multiple ways of doing that,

07:02.210 --> 07:06.370
we could use prods forEach to use this forEach function

07:06.380 --> 07:09.780
vanilla javascript supports or we use a normal for loop,

07:09.800 --> 07:20.970
we could say for let product of prods and then we simply open a curly brace, wrap all the content that

07:20.970 --> 07:27.480
should be repeated and once we're done, we add another ejs tag where we close that curly brace, again

07:27.480 --> 07:33.660
using normal javascript and then we have our product in there and now we can again output it as before

07:33.750 --> 07:42.000
with this ejs equal syntax as I like to call it here, basically this inline output syntax.

07:42.000 --> 07:47.150
And now with that if I reload this page here, we see object object, that is my mistake,

07:47.160 --> 07:51.800
obviously we want to access product title because product indeed is an object,

07:52.260 --> 07:55.350
so now we see the title. This is ejs

07:55.410 --> 08:01.620
and I prefer this syntax because I like having that flexibility of being able to write some javascript

08:01.620 --> 08:07.500
code in the template whilst having a clean syntax that nicely mixes with html

08:07.530 --> 08:13.380
because I personally like using html instead of the minimal version pug offers us.

08:13.680 --> 08:16.840
But as I mentioned, you can go with any approach you like.
