WEBVTT

00:02.310 --> 00:07.950
We added middlewares and I mentioned that this is a crucial concept of the express framework and that we

00:07.950 --> 00:13.440
should call next if we don't send a response because otherwise, the request will just die and will not

00:13.440 --> 00:15.220
continue to the next middleware.

00:15.540 --> 00:17.810
Now in this middleware, we're not calling next

00:17.820 --> 00:21.740
and there also wouldn't be a next middleware in line,

00:21.750 --> 00:23.330
this is our entire script right,

00:23.330 --> 00:25.520
there is nothing to come. Expressjs

00:25.560 --> 00:26.850
and that's important

00:26.910 --> 00:30.070
doesn't send a default response or anything like that,

00:30.450 --> 00:36.900
so instead we should send a response here. So we can use the response object and now sending responses

00:36.930 --> 00:39.500
actually gets easier, thanks to expressjs

00:39.540 --> 00:40.230
.

00:40.470 --> 00:46.320
Instead of setting a header which we still can do and writing which we also still can do, so we can still

00:46.320 --> 00:48.200
send responses as before

00:48.390 --> 00:57.150
but instead of doing this, there is a new utility function we can use, send. Send allows us to send well

00:57.270 --> 00:58.830
a response

00:58.830 --> 01:03.250
and actually this allows us to attach a body which is of type any,

01:03.330 --> 01:05.160
now let me show you what this could be.

01:05.220 --> 01:08.440
We could send good old html code here,

01:08.460 --> 01:14.560
just h1 tag, hello from express, like this.

01:14.800 --> 01:20.620
If we do that and we now reload this page here, we see hello from express,

01:20.860 --> 01:27.790
by the way one thing you'll notice is that if you open your network tab here and you inspect that request

01:27.790 --> 01:28.790
you got,

01:28.840 --> 01:35.570
you will see that under headers, the content type is automatically set to text html here.

01:35.860 --> 01:37.230
So this is done for you,

01:37.240 --> 01:42.430
this is another feature provided by express here. The send method by default here

01:42.490 --> 01:46.380
since we send some text here simply sets an html content type,

01:46.690 --> 01:52.260
you can still set one manually with set header of course, so you can always override this expressjs

01:52.270 --> 01:58.990
default but you can also rely on the default where the default response header is text html.

01:59.290 --> 02:04.240
And now with that, you see that we also get no dying request anymore because even though we're not calling

02:04.240 --> 02:10.100
next here and we shouldn't, we're doing the alternative, we're sending a response with send

02:10.240 --> 02:17.350
and this is of course easier than using all these write chunks and it will be particularly easier once

02:17.350 --> 02:21.180
we start sending back real files or the content of files,

02:21.250 --> 02:24.080
something we haven't done at all thus far.

02:24.080 --> 02:29.700
Now this is something we'll also do in this module but for now, make sure you understand this basic middleware

02:29.710 --> 02:37.060
concept, that you add functions that are hooked into this funnel through which the request goes and you

02:37.060 --> 02:44.430
either have next to reach the next middleware or you send a response to, well not do anything else.

02:44.550 --> 02:50.820
And of course if we would send a response here instead of calling next, we would never reach that middleware,

02:50.830 --> 02:56.320
so you really just travel from middleware to middleware, from top to bottom by calling next.
