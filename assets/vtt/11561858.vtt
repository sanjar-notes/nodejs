WEBVTT

0
00:02.070 --> 00:07.880
So now that we know for whom this module is, let me summarize JavaScript briefly.

1
00:07.890 --> 00:11.190
JavaScript is a weakly typed programming language.

2
00:11.220 --> 00:16.140
It's an object oriented programming language, and it's very versatile.

3
00:16.170 --> 00:21.530
Now, what do you mean with that weekly type means that we have no explicit type assignment.

4
00:21.540 --> 00:28.410
JavaScript knows types like numbers or text, which is called string or booleans, which is true or

5
00:28.410 --> 00:35.220
false, but it doesn't force you to define which type you're using in a variable or in a function.

6
00:35.940 --> 00:41.580
And indeed, you can also have a variable where you store a number which you then suddenly change to

7
00:41.580 --> 00:46.860
a text variable so you can switch types dynamically in other languages.

8
00:46.860 --> 00:52.470
This is differently and whilst this gives you greater flexibility to be able to change it and to not

9
00:52.470 --> 00:55.560
have strict typing, it also can lead to errors.

10
00:55.560 --> 00:57.870
So it is just something you have to be aware of.

11
00:59.260 --> 01:05.380
Object oriented simply means that data can be organized in logical objects and will see these objects

12
01:05.380 --> 01:06.370
in this module.

13
01:06.640 --> 01:14.110
And one important concept here is that you have to be aware about the difference of primitive and reference

14
01:14.110 --> 01:14.770
types.

15
01:14.770 --> 01:20.800
And attached to this lecture you'll find a link to an article and video I created for my free YouTube

16
01:20.800 --> 01:26.170
channel, a of mind, where I do dive into primitive and reference types and where I do explain the

17
01:26.170 --> 01:28.510
difference and why they are important.

18
01:28.510 --> 01:30.250
So definitely check that out.

19
01:30.250 --> 01:33.640
If primitive and reference types don't tell you anything.

20
01:35.510 --> 01:37.130
Regarding the versatility.

21
01:37.130 --> 01:42.170
Well, we can see that in this course JavaScript runs in the browser and this is actually where it comes

22
01:42.170 --> 01:48.860
from, but you can also use it with no charges to run it on your PC outside of a browser set up or also

23
01:48.860 --> 01:49.880
on a server day of work.

24
01:49.910 --> 01:52.070
And that is exactly what we'll do in this course.

25
01:52.070 --> 01:54.650
We'll build a web server with Node.js.

26
01:54.650 --> 02:01.370
So we got this broad versatility of being able to use JavaScript on different platforms, and you can

27
02:01.370 --> 02:04.340
also perform a broad variety of tasks with JavaScript.

28
02:04.340 --> 02:10.310
Also, depending on the platform you're running on, you can in the browser listen to user events,

29
02:10.310 --> 02:13.730
re render the DOM and on the server or on a PC.

30
02:13.760 --> 02:17.870
You can work with files, with databases, a lot of cool stuff.

31
02:19.300 --> 02:24.500
So this is the summary of JavaScript and what makes up the language.

32
02:24.520 --> 02:31.630
Let's now dive into some core features, also some core next generation JavaScript features which are

33
02:31.630 --> 02:33.270
supported by no charges.

34
02:33.280 --> 02:36.580
And let's see some things we'll see throughout the course.