WEBVTT

00:02.250 --> 00:04.430
Now the application is taking shape,

00:04.440 --> 00:08.800
now there are two things I want to add in this module still before we're done.

00:08.880 --> 00:14.670
The first one is I want to make sure that we can also delete products and I want to make sure that we

00:14.670 --> 00:20.780
also can see our cart items on the cart view and also remove them from the cart.

00:20.790 --> 00:26.300
Let's work on deleting products here first and definitely feel free to try this on your own,

00:26.310 --> 00:34.920
you'll have to add a new method somewhere and basically make sure that you can not just save products

00:34.920 --> 00:36.970
in the product model but also delete them

00:37.080 --> 00:42.090
but of course we'll then also do it together after a short pause that you can use to pause the vIDeo and go

00:42.090 --> 00:43.270
ahead on your own.

00:45.460 --> 00:46.530
Were you successful?

00:46.690 --> 00:49.660
Well let's see how I would solve this.

00:49.660 --> 00:52.290
We want to be able to delete our products right

00:52.540 --> 00:58.960
and if we go to the products.ejs file, this view in the admin folder, we already have that delete

00:58.960 --> 01:04.420
button which is wrapped in a form on purpose to send a post request to delete product,

01:04.420 --> 01:05.730
so we need to handle that route,

01:05.770 --> 01:07.750
that is a good starting point.

01:07.810 --> 01:16.930
So in the admin.js file in the routes folder, we need a new route for this, post route for delete product.

01:16.930 --> 01:24.580
Now since it's a post request, we also don't need to enclose or encode any information in our

01:24.580 --> 01:25.940
path in the url,

01:26.110 --> 01:29.180
we can put it as part of our request body instead.

01:29.390 --> 01:36.880
So back in the view, here I will add a hidden input again as we did it before in post requests where I

01:36.880 --> 01:46.930
set the value to product ID using ejs templating syntax and the name to product ID so that we can

01:46.930 --> 01:50.630
extract that information by that name.

01:50.720 --> 01:52.220
So that's the first step,

01:52.220 --> 01:54.160
now we do have that route,

01:54.260 --> 01:57.500
obviously we also need to work on the controller now.

01:57.930 --> 02:04.040
So let's go to the controller, the admin controller and let's add a new action for deleting a product, exports

02:04.850 --> 02:07.310
post delete product.

02:09.920 --> 02:13.660
There I get my normal arguments in this function

02:13.790 --> 02:16.170
and now the question is what do I want to do in there?

02:16.430 --> 02:21.930
Well obviously I can extract the product ID from the request body by accessing product ID,

02:22.040 --> 02:25.630
that is why we just added it to our ejs template

02:25.910 --> 02:31.790
and now we can also go back to the routes file and simply connect this route to our admin controller

02:31.820 --> 02:34.480
post delete product action

02:34.550 --> 02:38.610
but the real magic now happens in our model, in the product model.

02:38.900 --> 02:40.420
We have the save method,

02:40.430 --> 02:45.520
now I want to delete a product. So let's add a delete method in there

02:45.800 --> 02:52.460
and what I plan on doing here is I actually want to turn this into a static method and maybe name this

02:52.460 --> 02:59.880
delete by ID, pass in an ID and then have all the logic for deleting a product in here. To do this 

02:59.900 --> 03:06.620
I first of all need to find out which product to remove or update my array of products so that I can then

03:06.620 --> 03:08.740
write it back to my file.

03:08.810 --> 03:14.980
So just as in find by ID, I will call it get products from file to get all the products and in here,

03:14.990 --> 03:16.940
I then have the products array,

03:17.060 --> 03:20.670
there I now need to find the index on the product I want to delete.

03:20.900 --> 03:28.160
So I will use products and then the find method to go through all my products and find the product with

03:28.160 --> 03:28.980
the ID

03:29.090 --> 03:36.090
I'm trying to delete, this is a mechanism we did before, whoops, it should be find index though.

03:36.100 --> 03:41.920
Now this means I can update my products array such that this element is removed and actually there is

03:41.920 --> 03:43.430
even a shortcut we can use.

03:43.630 --> 03:51.010
I can create a new constant, updated products, take my existing products and not use find index but use

03:51.010 --> 03:53.790
the filter method instead. Filter

03:53.860 --> 04:01.570
also takes an anonymous function and will return me all elements as part of a new array that do match

04:01.750 --> 04:02.770
the criteria

04:02.800 --> 04:04.280
my function returns.

04:04.300 --> 04:05.500
So if this returns true,

04:05.560 --> 04:07.140
the element is kept.

04:07.150 --> 04:13.150
Now I want to keep all elements where the ID of the element is not equal to the ID I'm trying to delete

04:13.510 --> 04:16.870
because all elements where the ID is not equal should be kept

04:16.870 --> 04:20.890
around, should be part of the new array which will be the array I save 

04:20.890 --> 04:23.000
back to my file.

04:23.060 --> 04:28.140
This means that in this function, I actually want to return the opposite here.

04:28.340 --> 04:31.470
So only if the ID is not equal to the ID I'm looking for,

04:31.610 --> 04:35.710
I want to keep the item so this will then return true if the IDs are not equal

04:35.720 --> 04:39.280
therefore the item is kept and only for that single product I'm looking for

04:39.290 --> 04:40.270
this will be false,

04:40.340 --> 04:48.430
so the item is not kept in the new array. And that simply means that I can now go ahead and save my updated

04:48.430 --> 04:54.400
products which are all products except for the one I want to delete back into the file. So I will use

04:54.400 --> 05:04.240
the file system to write a file on this path and simply add my updated products in json format and then

05:04.240 --> 05:10.690
again I can use my or add my callback function to see if this throws any error.

05:10.970 --> 05:13.500
Now if it does not throw an error,

05:13.510 --> 05:19.960
so if everything went fine then I also want to remove that product from the cart of course because I

05:19.960 --> 05:21.400
can't have it in a cart

05:21.550 --> 05:23.510
if the product doesn't exist anymore,

05:23.560 --> 05:24.500
right.

05:24.910 --> 05:31.360
So as a next step, we'll also work on the cart and make sure we can delete items from there, a functionality

05:31.360 --> 05:31.780
we need

05:31.780 --> 05:32.300
anyways.
