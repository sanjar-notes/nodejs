WEBVTT

00:02.170 --> 00:09.240
Now one important note about the update video, what I did there is I actually passed an object id in admin.js

00:09.240 --> 00:12.340
controller to my product constructor.

00:12.340 --> 00:19.720
Now actually I could also just pass product id as a string and therefore remove my object id creation

00:19.720 --> 00:23.140
up there in the mongodb import, all of that is happening in the controller

00:23.140 --> 00:29.610
now and if I do that and I try editing this and change the price to 16,

00:30.010 --> 00:32.660
you see now it fails.

00:32.680 --> 00:40.060
Now if we go to the product model and we have a look at the save method, there I am actually looking

00:40.060 --> 00:47.500
for the right object but I'll have a problem with updating it because there, I'll try to set

00:47.500 --> 00:54.590
my object ID to a different object id to a string because here I'm just referring to this which will hold

00:54.590 --> 00:56.690
the unmodified objectid.

00:57.040 --> 01:03.820
So what I should do is I should automatically convert the objectid, the ID here which is a string to

01:03.820 --> 01:07.500
an object and the object in the constructor

01:07.600 --> 01:13.030
so that I can remove it down there because _id will now always be an object id field, no

01:13.030 --> 01:17.370
matter if I'm using it in a filter or if I'm using it for updating.

01:17.380 --> 01:23.520
So now with that if I edit this again and I change the price to 18, now this works again

01:23.560 --> 01:30.240
because now I'm not trying an invalid update by trying to change the ID to some invalid value.

01:30.340 --> 01:32.800
So this is just an important note I wanted to add,

01:32.800 --> 01:36.310
you don't have to convert the ID in the controller file,

01:36.310 --> 01:42.010
you can leave that untouched but you can do a general conversion in the product.js model file

01:42.100 --> 01:44.610
which is the better approach of doing that.
