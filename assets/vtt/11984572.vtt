WEBVTT

00:01.980 --> 00:04.660
So let's give this a try, this reset mechanism.

00:04.680 --> 00:10.020
And for that, we first of all need to make sure that our newly added controller actions can be reached.

00:10.350 --> 00:13.320
So we added a get reset root.

00:13.320 --> 00:20.730
Now we also need to add a post reset root so that this reset password button actually works.

00:20.730 --> 00:25.710
So let's add this root and execute post reset that action we worked on.

00:27.060 --> 00:29.790
And with that on the reset password page.

00:30.470 --> 00:37.070
Let's first of all, try out an incorrect URL, an email, one which does not exist in the database.

00:37.550 --> 00:39.620
And we get this message, which is great.

00:39.800 --> 00:46.100
Now use a real email which you used for signing up and click Reset Password.

00:46.340 --> 00:53.060
Now you should be redirected back and if you check your emails there, you should have a password reset

00:53.090 --> 00:54.320
email with a link.

00:54.650 --> 01:00.560
If you click that link, you should end up on a page not found error, but you will see that we are

01:00.560 --> 01:02.690
on reset and then some token.

01:03.110 --> 01:06.800
And that token can also be seen in your user collection here.

01:06.800 --> 01:09.350
This is the password reset token which we stored.

01:10.720 --> 01:18.460
So now we just need to add some logic to add this root, extract that token, validate whether we have

01:18.460 --> 01:23.990
a user for that token and then offer a form that allows the user to set a new password.

01:24.010 --> 01:25.630
Let's work on that next.
