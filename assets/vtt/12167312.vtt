WEBVTT

00:02.490 --> 00:08.020
Now we worked on code that allows us to emit the event when we create a new post.

00:08.070 --> 00:12.720
Now obviously we're not just creating posts, we're also updating or deleting posts,

00:12.750 --> 00:14.350
we want to be able to handle that

00:14.350 --> 00:21.280
too. Now let's do that together and let's continue with updating posts, so on the backend in the feed controller,

00:21.300 --> 00:26.490
I'll scroll down to the update post method and in there, we want to emit an event

00:26.490 --> 00:27.830
once we're done updating,

00:27.900 --> 00:34.830
so towards the end, once we got our result we save the post and we're sending a response. Here

00:34.840 --> 00:40.300
I'll again use io, get io to get access to our established io connection

00:40.310 --> 00:48.180
you could say and I'll again emit on this posts channel and I'll emit my data just as before.

00:48.190 --> 00:54.370
Now I will keep my pattern of having an action where I this time write update because this is the action

00:54.370 --> 00:59.080
we performed and my post is then my result here because result

00:59.140 --> 01:02.510
turns out to be the result of my saving operation.

01:02.770 --> 01:09.670
Now just as before, I want to be sure that I also have some user data in there, so we'll actually scroll

01:09.670 --> 01:14.410
up or we find that post and I will populate it with my creator data,

01:14.410 --> 01:18.910
this again will take that creator ID which we stored in the post object,

01:18.910 --> 01:24.940
reach out to the users database or the users collection, fetch the data for that specific user and add it

01:24.950 --> 01:27.820
here in our post.

01:27.850 --> 01:34.480
Now I do emit this event where I send my created post

01:34.480 --> 01:40.960
and let's now go back to our frontend application here and also establish some code here to update our

01:40.960 --> 01:45.080
posts. For this, after this add post function,

01:45.100 --> 01:48.830
I'll add a new function which I'll name update

01:48.830 --> 01:55.340
post where I again get my post data and then I do something with that in the arrow function and as before,

01:55.430 --> 02:01.970
I prepared some code which we just copy in there which we'll add or which we'll update to post in our

02:01.970 --> 02:03.310
list of posts.

02:03.550 --> 02:10.580
Now also scroll down in your react code here in the same file to the finish edit handler because there

02:10.580 --> 02:13.750
where I also have some logic to edit the post, here

02:14.060 --> 02:15.480
I will get rid of that,

02:15.500 --> 02:21.150
I will actually get rid of this entire part here and also of my update post assignment in this return

02:21.160 --> 02:29.690
statement in set state call because I now no longer update it here but I do emit the event to all connected

02:29.690 --> 02:36.380
clients including the client who did, well send that update and therefore I can also set up my listener

02:36.380 --> 02:37.300
and use that

02:37.400 --> 02:41.300
with this new update post function I copied in up there.

02:41.300 --> 02:48.580
So let me now go up and here where I have my established listener for the post event,

02:48.860 --> 02:53.720
I'll add an else/if block to see if the action maybe is updated

02:53.750 --> 03:00.910
if it's not create in which case I'll call this update post and pass data.post to that.

03:00.950 --> 03:07.130
Now before this will work, let me go back to the server side code and there since I do populate my creator

03:07.310 --> 03:13.960
when finding that post in the update post function here, this check here will actually fail where I do check

03:14.000 --> 03:20.480
if the ID which is now not the ID anymore but the full creator object is equal to the request user ID.

03:20.480 --> 03:26.780
So here I actually want to access creator._id to string right because we're populating

03:26.780 --> 03:29.150
the creator field with the full user data,

03:29.150 --> 03:30.580
it's not just the ID anymore.

03:30.650 --> 03:32.880
So we would fail editing this post

03:33.170 --> 03:38.830
if we don't make this change. And now if we save both and we go back and reload both pages, I deleted

03:38.840 --> 03:41.430
one post in the meantime so I only got two anymore

03:41.510 --> 03:46.970
and let me now edit this a cup post here, add a couple of exclamation marks maybe and click

03:46.980 --> 03:54.410
accept and you'll see it added or being changed on both clients.

03:54.530 --> 03:56.770
So this is now also working.
