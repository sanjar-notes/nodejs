WEBVTT

00:02.210 --> 00:08.340
Handlebars does support layouts but it works a bit differently than it did with pug.

00:08.440 --> 00:14.770
First of all we have to configure something, in app.js where we register our handlebars engine, we

00:14.770 --> 00:16.570
have to pass in some options.

00:16.630 --> 00:21.440
Now my IDE helps me here, if I hit control space it shows me which options I can set

00:21.610 --> 00:26.650
and you can of course explore the official docs to learn all about them. Now what it allows me to do

00:26.650 --> 00:33.790
here is it allows you to set up where my layouts live, so which folder I can find my layouts.

00:33.930 --> 00:40.560
Let's set this here to a string which by default is views layout so you don't need to set this but you

00:40.560 --> 00:44.710
can set it kind of to reconfirm this but this is redundant,

00:44.760 --> 00:50.490
you only need to set it if you would store it somewhere else, like in lays or if you had a different

00:50.490 --> 00:57.390
default views folder. I'll set it to this even though that is the default so that you see that setting,

00:57.390 --> 01:01.860
now you can also define a default layout that should be used for all files

01:01.980 --> 01:07.040
and here I'll just name it main and that means you will have to have a main or main layout

01:07.040 --> 01:12.050
in my case, you will have to have a main-layout.hbs file in your layouts folder.

01:12.060 --> 01:13.930
So let's add a main-layout.hbs

01:13.980 --> 01:20.880
file in the layouts folder and let's set it up similarly to the pug layout and that was of course

01:21.300 --> 01:28.680
influenced by the 404 page. So let's copy over the 404 html code into the main-layout.hbs code

01:29.010 --> 01:31.240
and first of all page not found,

01:31.290 --> 01:39.640
of course we want output this dynamically here, we'll output the page title here with the handlebars handlers.

01:39.660 --> 01:46.830
Now regarding the styling, in pug we defined a block where we could dynamically add the content that

01:46.830 --> 01:51.700
should be rendered from inside the view that extended this layout.

01:52.050 --> 01:58.750
Unfortunately hbs doesn't have such a feature so we can't do that, we can't define a block here,

01:58.830 --> 02:06.800
instead the only thing we can do there is we can define a placeholder with three curly braces,

02:06.810 --> 02:13.660
opening and closing, so not normal double curly braces but three curly braces and then adding body here

02:13.800 --> 02:16.740
and you have to exactly use this placeholder.

02:16.770 --> 02:22.340
This is understood by handlebars and you will then be able to target this in your views that extend the

02:22.420 --> 02:26.610
layout automatically because you set it as the default layout.

02:26.610 --> 02:34.050
However if you have some part like this where you need to add some styling depending on the page you

02:34.050 --> 02:40.690
are on, you will have to solve this differently, in a kind of a similar approach as we solved the active

02:40.730 --> 02:43.000
class here in pug,

02:43.050 --> 02:45.130
you will have to add an if statement here in

02:45.280 --> 02:51.810
your main layout and this is of course a bit of a more cumbersome or complex way, though you can do way

02:51.810 --> 02:53.000
more with handlebars,

02:53.100 --> 02:56.190
you could define custom helpers that help you with that

02:56.250 --> 03:00.660
but this is beyond the scope of this course where I just want to give you a brief introduction,

03:00.750 --> 03:06.900
so let me show you the easiest way of solving this and this is that we add an if block here and we check

03:07.020 --> 03:14.750
if product.css and if this is the case, let's also close the if statement here,

03:14.860 --> 03:16.750
then I will add a link

03:19.330 --> 03:23.290
to my product.css file

03:23.470 --> 03:27.620
and I will repeat that same logic of course for forms

03:27.640 --> 03:31.420
and again as I said, this is the easy solution but it will do for now.

03:31.480 --> 03:35.520
So forms and here we have forms.css.

03:35.740 --> 03:37.290
So this is working now,

03:37.300 --> 03:42.390
now what regarding the active class, we also want to add that dynamically, right?

03:43.300 --> 03:45.910
Well again we can simply add the class here

03:46.240 --> 03:54.180
and I add my handlebars handlers here and I add an if statement and check if active shop is true

03:54.270 --> 03:57.090
and this is a variable we'll have to pass into this view,

03:57.950 --> 04:00.040
if that is true then I'll add the active class

04:00.050 --> 04:04.420
and of course also close may have statement so he can also write this inline,

04:04.430 --> 04:06.010
that is an important take away

04:06.410 --> 04:13.970
and I'll do the same for the add product route here where I check if active add-product is true.

04:14.150 --> 04:20.330
Of course we'll have to make sure that these variables are also passed into the view at least when they're

04:20.330 --> 04:20.830
needed,

04:20.870 --> 04:23.730
if you don't pass them, they're always treated as false,

04:23.750 --> 04:27.910
so you only need to pass them if you want to have them treated as true.

04:28.970 --> 04:31.340
With that, our layout is prepared,

04:31.340 --> 04:37.040
now let's go back to the shop.js file to start with that and as I just mentioned, we now have

04:37.040 --> 04:44.850
to pass in active shop, this is this variable or this property we're checking for here in the if statement

04:45.100 --> 04:50.910
and we should set this to true for this route to ensure that for this route, the active class is added.

04:51.050 --> 04:56.420
So let's set this to true and therefore in the main layout, this will be true and therefore active will

04:56.420 --> 05:01.400
be rendered, active add product would be false because we don't pass it at all and therefore this would

05:01.400 --> 05:02.870
not be rendered.

05:02.990 --> 05:03.920
So that is that,

05:03.950 --> 05:07.250
now of course we also need to make sure that the product.css gets rendered,

05:07.310 --> 05:09.320
so we need to pass in this too.

05:09.450 --> 05:10.810
So back in shop.js,

05:10.850 --> 05:14.730
let's also pass in product.css and set this to true,

05:14.900 --> 05:20.300
so you can already tell, you configure a lot from inside node express when using handlebars and that

05:20.360 --> 05:22.090
is its philosophy.

05:22.460 --> 05:29.400
So now with that set up, we can go back to the layout, have that finished and move over to shop.hbs.

05:29.570 --> 05:31.870
Now this will use the layout by default,

05:31.970 --> 05:38.330
you could disable this by going to the render function for a given page and setting a special layout

05:38.330 --> 05:40.060
key and setting it to false,

05:40.070 --> 05:45.770
this is a special key that is understood by handlebars and it would not use the default layout,

05:45.770 --> 05:47.040
otherwise it will.

05:47.300 --> 05:53.630
So since it will do that by default, in shop.hbs we can get rid of this entire code here,

05:53.870 --> 05:55.020
including the header

05:55.460 --> 06:05.700
and just have in this file what should be injected into our triple curly brace body tag in the main

06:05.700 --> 06:06.310
layout,

06:06.370 --> 06:14.040
so here, whatever should get entered in this place should be added to shop.hbs and nothing else.

06:14.080 --> 06:21.520
So with that if we save this and we go to the shop, you'll see we get an error and the error is a bit annoying

06:21.520 --> 06:27.220
to be honest with express handlebars, it's looking for the main layout.handlebars file.

06:27.400 --> 06:30.600
So it does not take .hbs here

06:30.880 --> 06:38.140
and for whatever reason, you explicitly have to tell handlebars to do that differently. You have to go

06:38.140 --> 06:45.730
to the options and set the extension name which only applies to the layout and not to all files, just

06:45.730 --> 06:52.310
as this applies to all files but the layout, you have to set the extname here

06:52.930 --> 06:58.030
to hbs. This is really strange but it is how express handlebars works,

06:58.030 --> 07:02.740
so now we're setting the extension to hbs for layouts too

07:03.070 --> 07:10.360
and now if we reload this page, we see our normal shop page. And with that we can of course also go to

07:10.360 --> 07:17.800
add product, here add-product.hbs, remove everything but the part which should be rendered in the place

07:17.890 --> 07:22.940
of our body, triple curly brace body tags.

07:23.030 --> 07:27.350
And if we reload, something's missing right,

07:27.470 --> 07:29.100
do you know what went wrong?

07:29.970 --> 07:36.150
Well we're missing some styles and the reason for that is that we need the forms and for this however,

07:36.180 --> 07:39.630
we need to ensure that forms css is set to true,

07:39.630 --> 07:43.040
we will also need product css by the way. So in admin.js,

07:43.070 --> 07:52.920
we should ensure that when we rendered this route, we set forms css to true and product.css,

07:52.930 --> 08:01.400
this one, product.css to true and that we also to get that active link in the navigation, that we

08:01.400 --> 08:11.390
also set active add product to true because active add product is the key we're looking for here.

08:11.570 --> 08:14.270
With that, if we save all files and we reload here,

08:14.550 --> 08:15.720
this is looking better

08:15.800 --> 08:19.370
and now it's all working again with handlebars.

08:19.370 --> 08:22.740
So as you can see, handlebars uses a different philosophy,

08:22.850 --> 08:25.400
definitely something you have to get used to,

08:25.410 --> 08:30.800
therefore your templates are leaner. And there is no better or worse way of doing this,

08:30.800 --> 08:33.500
it really is up to you which one you prefer.

08:33.710 --> 08:38.540
Let's now have a look at a third option, ejs which is my personal favorite.
