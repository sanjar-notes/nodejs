WEBVTT

00:02.130 --> 00:05.770
So let's go back to the request object we logged here.

00:05.890 --> 00:08.100
Now important just to keep that in mind,

00:08.220 --> 00:15.840
this request object is the object nodejs generated for us with all the data of the incoming request

00:15.840 --> 00:22.860
when we visited localhost 3000 which we in turn can do because we listen to requests on that

00:23.040 --> 00:24.220
port.

00:24.240 --> 00:27.830
So this is the request object, if we have a look at it,

00:27.840 --> 00:30.080
we see it's a very complex object.

00:30.090 --> 00:31.880
There's lots of data in it,

00:31.960 --> 00:33.400
it's not just data,

00:33.420 --> 00:36.930
these are also partly functions we can call and so on,

00:37.080 --> 00:43.450
so this is quite a complex object but we also see that for example we have some headers here. Headers

00:43.530 --> 00:51.490
as I mentioned earlier are metadata, meta information added to a request and also to responses by the way

00:51.510 --> 00:56.940
and there we see for example the host, this was sent too, the request was sent too.

00:57.030 --> 00:59.600
We saw some headers attached by the browser

00:59.610 --> 01:05.850
like for example how the response data should be cached and stuff like that, which browser we used

01:05.850 --> 01:13.320
for that request, which kind of response we would accept, that we accept some html, xml and so on,

01:13.320 --> 01:19.770
that we would accept encoded responses, so where the response is actually minified to well save

01:19.800 --> 01:21.780
bandwidth and so on.

01:21.950 --> 01:23.450
There also was a cookie attached

01:23.460 --> 01:26.520
even, we haven't learned about cookies yet, we'll do so later

01:26.610 --> 01:35.580
but this was attached at some Google Analytics cookie. We saw which http version was used and so on,

01:35.580 --> 01:41.250
so there's a lot we can gain from that request but a bit too much.

01:41.350 --> 01:46.010
Now there are only a few important fields you typically need.

01:46.050 --> 01:51.300
The first important or interesting field is the url, now

01:51.840 --> 01:57.540
let's output that and let's also output, you can output more than one value by separating them with

01:57.540 --> 02:03.430
commas, request method and also request headers here.

02:03.750 --> 02:04.590
Let's output these

02:04.770 --> 02:09.090
three values and restart the server with node app.js,

02:09.150 --> 02:14.180
so now it's again listening and let's reload that page on localhost 3000.

02:14.490 --> 02:17.700
If we do so, now we see the output has changed,

02:17.760 --> 02:23.730
we still have all the header stuff because we're outputting request headers but prior to that, we output

02:23.760 --> 02:30.950
the method which you see here, it's get and you see the url and the url is just the slash here because

02:31.040 --> 02:31.790
the url

02:31.860 --> 02:37.500
is basically everything after our host and we just have localhost,

02:37.620 --> 02:39.080
well nothing

02:39.080 --> 02:42.400
and that basically translates to localhost slash.

02:42.510 --> 02:51.900
If I had /test, now we see another output and there we see /test being logged here and then

02:51.940 --> 02:54.900
also get for the method and our headers.

02:54.900 --> 03:00.160
So this is basically how we can access some information about our request.

03:00.240 --> 03:04.620
Now one crucial thing that is missing here is the response,

03:04.620 --> 03:08.160
so let's have a look at sending responses in the next lecture.
