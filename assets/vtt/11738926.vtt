WEBVTT

00:02.340 --> 00:04.790
So that's it for this module,

00:04.860 --> 00:11.610
again we learned a lot and practiced a lot. You learned about dynamic routing and that you can pass dynamic

00:11.610 --> 00:17.880
path segments by adding a colon to the express router path, the name after the colon is then the name

00:17.880 --> 00:21.810
by which you can extract the data on request params. As a side note

00:21.840 --> 00:24.880
you can have more than one dynamic segment per route,

00:24.890 --> 00:26.830
this is absolutely possible.

00:27.300 --> 00:30.350
You can also work with optional query parameters,

00:30.420 --> 00:36.300
these are the parameters you append with a question mark at the end of your url and you can have multiple

00:36.300 --> 00:42.570
ones separate with an ampersand and you can extract these values with request query and then the name

00:42.570 --> 00:44.050
of your param.

00:44.430 --> 00:50.920
Now you don't need to register or name these parameters in your route registry,

00:50.970 --> 00:52.570
you totally don't add them there,

00:52.590 --> 00:57.840
you can just start extracting them but since they're optional, you should also have a check in place

00:57.840 --> 01:00.360
to see if that parameter was passed

01:00.420 --> 01:07.530
in case you are depending on it. We also continued working on models and we added a cart model which only

01:07.530 --> 01:13.590
holds static methods because we don't really create a cart that often, instead we just want to work with

01:13.590 --> 01:18.780
the data storage behind it. You also saw that you can interact between models,

01:18.810 --> 01:22.160
for example delete a cart item if a product is deleted

01:22.350 --> 01:28.260
but as I also mentioned towards the end of this module, it's not that good if we only work with files

01:28.260 --> 01:32.670
for data storage because accessing them is a bit slow to be honest

01:32.820 --> 01:35.430
and in general, there are better options,

01:35.460 --> 01:37.860
most importantly of course, databases.

01:37.950 --> 01:44.010
So let's move on to how we can work with databases in a node express app in the next module.
