WEBVTT

00:02.390 --> 00:06.950
Now we learned a lot about validation and providing a good user experience,

00:06.950 --> 00:10.010
now sometimes you also want to sanitize user input.

00:10.010 --> 00:14.770
Now what does sanitising mean? For one on this validator page,

00:14.840 --> 00:20.840
so the package which is used behind the scenes, you don't just find all these validators, you also find

00:20.840 --> 00:24.950
available sanitizers here and there you also see what they do.

00:24.950 --> 00:30.230
For example what you can do is you can ensure that there is no excess whitespace in a string passed

00:30.230 --> 00:32.480
by the user on the left or on the right,

00:32.570 --> 00:37.380
you can normalize an e-mail which means it's converted to lowercase and things like that.

00:37.400 --> 00:43.370
So there are a couple of things you can do to make sure the data you get is not just valid but also

00:43.370 --> 00:45.380
is stored in a uniform way,

00:45.380 --> 00:48.580
so without extra whitespace or anything like that.

00:48.680 --> 00:53.730
So sanitising input is also something that makes sense to be done.

00:53.900 --> 00:58.490
Cross-site scripting attacks sanitation which is a security feature is by the way something I'll

00:58.490 --> 01:06.500
cover in the security module of this course, so we'll focus on the visual sanitization for now not on security

01:06.500 --> 01:08.200
relevant sanitising.

01:08.300 --> 01:10.610
So this is what you can also do,

01:10.610 --> 01:13.620
now how does sanitising input work though?

01:14.120 --> 01:17.910
Well you do it in one step with validating,

01:18.000 --> 01:23.130
so in the routes folder in the auth.js file in our example, let's say the email here, I want to

01:23.130 --> 01:25.470
make sure that it's stored in a normalized way,

01:25.470 --> 01:30.420
so lowercase not starting with an uppercase character, no excess whitespace.

01:30.420 --> 01:36.180
Well I can do this by chaining another method after my validation logic and there I can call normalize

01:36.240 --> 01:43.400
e-mail which is one of these built-in sanitizers which I showed you. For the password we could trim it,

01:43.430 --> 01:50.690
so here we could trim the password to remove excess whitespace. Of course we can do the same for the sign

01:50.690 --> 01:51.680
up here,

01:52.040 --> 01:58.550
besides our check here I also want to normalize the email once I'm done with it, with sensitise, with validating

01:59.000 --> 02:03.010
and for the password I want to trim excess whitespace.

02:03.320 --> 02:10.480
So again this is something which I can do here to sanitize user input and to see the result of that,

02:10.490 --> 02:16.490
let me actually connect to my database real quick with the help of compass, my visual user interface here

02:17.030 --> 02:18.700
and there in the users,

02:18.710 --> 02:26.320
I get a bunch of users because I created some users throughout this module. Let me delete a couple of entries

02:26.320 --> 02:28.690
here really quick just to clean this up,

02:31.420 --> 02:33.010
well actually delete them all

02:33.390 --> 02:36.070
and now let me create a new user,

02:36.120 --> 02:39.530
keep in mind I added sanitization.

02:39.610 --> 02:48.910
Now if I enter test@test.com like this with an extra blank after this and I enter my password

02:48.930 --> 02:53.100
here with an extra whitespace at the end, so our blank at the end,

02:53.300 --> 02:59.870
then I do already get an error because for signing up, I do actually trm my password here but I don't

02:59.900 --> 03:01.600
trim the confirming password,

03:01.670 --> 03:03.680
so I should trim this as well

03:04.580 --> 03:11.170
otherwise the whitespace is removed here and indeed it is, this is one character shorter. Now if I sign up, both

03:11.170 --> 03:16.060
passwords were changed and keep in mind the email started with a capital character and also had an extra

03:16.060 --> 03:17.110
whitespace,

03:17.110 --> 03:23.260
if I now reload my users, we see the email is stored with a lowercase t at the beginning and without

03:23.320 --> 03:28.060
that extra whitespace at the beginning and this is now simply the case because I sanitized the input.

03:28.240 --> 03:35.020
So sanitising data is also something which makes sense to ensure that your data is stored in a uniform

03:35.020 --> 03:39.430
format and well that your email addresses look equal and so on.
