WEBVTT

00:02.110 --> 00:04.540
We're restricting the amount of products we can see

00:04.600 --> 00:07.270
and that is one great step forward

00:07.480 --> 00:14.200
but it still doesn't mean we can't send requests somehow by creating our own pages where we still

00:14.200 --> 00:16.490
try to delete another product.

00:16.690 --> 00:24.960
So we should also add protections in our post actions, like in post edit and post delete product, there

00:24.970 --> 00:30.700
we want to check that the product I try to delete is really created by the user who is currently logged

00:30.700 --> 00:31.220
in.

00:31.450 --> 00:36.300
So in post edit product, there I might want to add a check

00:36.310 --> 00:42.400
once I found the product that should be edited where I see if I'm allowed to edit that product.

00:42.400 --> 00:47.920
So here in the then block where I have that product fetched from the database, there I will quickly

00:47.920 --> 00:59.050
check if product user ID is not equal to request user ID because if it's not equal, then this means the

00:59.050 --> 01:01.800
wrong user is trying to edit this.

01:01.840 --> 01:10.030
So here I then want to return and simply redirect back to the starting page let's say because we try

01:10.030 --> 01:11.530
to do something fishy here,

01:11.560 --> 01:12.830
we don't want to continue,

01:12.850 --> 01:17.290
so all the other code will now not run.

01:17.520 --> 01:18.650
We would still go into that

01:18.660 --> 01:25.080
then block though as you learned because the next then block is still executed even if I do redirect

01:25.080 --> 01:26.120
here,

01:26.340 --> 01:28.400
so to circumvent this, I'll add

01:28.410 --> 01:30.360
then right after save here

01:30.360 --> 01:40.100
so a nested then block so to say and now we have protection in place that ensures that we can start editing

01:40.130 --> 01:47.570
products that don't belong to us. To quickly check this, I'll temporarily remove my filter so that I can

01:47.570 --> 01:51.380
see all the products again and I will log in with the wrong account,

01:51.830 --> 02:00.540
so with test2 and now what we should see is that when I edit this and add a couple of exclamation marks

02:00.540 --> 02:09.900
and I click update, I'm redirected but the edit wasn't saved because I essentially ended up in my extra check

02:09.900 --> 02:18.350
here and I was redirected back but without saving the changes because this code was never executed.

02:18.350 --> 02:24.970
Now let's try the same for deleting before I re-add my filter here. For deleting

02:24.980 --> 02:31.520
I also want to check if I'm really allowed to delete that product and we can easily implement this by

02:31.520 --> 02:37.290
changing our deletion method here and use delete one

02:37.310 --> 02:44.990
and there I want to delete the product where the ID is equal to the prod ID but also where the user

02:44.990 --> 02:47.090
ID is equal to the request

02:47.180 --> 02:49.500
user ID.

02:49.760 --> 02:50.920
So both has to be true

02:50.930 --> 02:56.900
now, the Product ID alone is not enough, the user id also has to match and therefore even if we have

02:56.900 --> 03:01.730
a valid user id, it will not delete this product if the user ID does not match.

03:01.730 --> 03:09.530
So if I save this and I go to admin products with the wrong account still and I click delete,

03:09.530 --> 03:12.330
you see the product doesn't go anywhere,

03:12.380 --> 03:14.550
still there.

03:14.770 --> 03:19.940
Now let me add that filter in get products again so that we can't even see it

03:20.140 --> 03:25.480
and now we have the best possible set up because now we can really only see it in that account where

03:25.480 --> 03:27.420
we are able to interact with it.

03:27.430 --> 03:34.420
So if I do login with that valid account, there I do see it and there I now also should be able

03:34.420 --> 03:38.680
to edit it, though if I try that, it fails.

03:38.710 --> 03:41.290
So let's explore what's wrong here in the next lecture.
