WEBVTT

00:02.970 --> 00:08.390
Now that we learned how to save files and how to return them in different ways statically

00:08.520 --> 00:15.210
as one big file or as a streamed response, let me show you a little bonus so to say where we can create

00:15.210 --> 00:18.230
a pdf on the fly on the server,

00:18.330 --> 00:21.700
instead of serving that hardcoded pdf here,

00:21.930 --> 00:24.270
let me create it on the fly instead.

00:24.540 --> 00:31.270
So I will delete my invoice here and instead when we get the invoice for an order, I don't want to serve

00:31.270 --> 00:38.450
a file that already exists but I want to generate that file based on the real order data. For that

00:38.460 --> 00:43.570
I first of all will still check if we have that order and if the user is allowed to access it

00:43.770 --> 00:45.690
but of course this will now change,

00:45.690 --> 00:49.070
well actually the name will be the same and I will store it in the same way

00:49.140 --> 00:51.380
but I now can't read the file,

00:51.420 --> 00:52.700
I need to create it

00:52.860 --> 00:55.010
and how can we create a pdf?

00:55.440 --> 01:02.670
Well there are third party packages which we can use which make it a lot easier and pdfkit is a very

01:02.820 --> 01:07.840
prominent or popular package for creating pdfs on a nodejs server.

01:07.890 --> 01:13.500
I strongly recommend checking out their documentation to learn more about all its many options because

01:13.500 --> 01:19.590
it's super powerful, it can do a lot of stuff, so definitely worth having a look at this and we will use

01:19.590 --> 01:23.970
it to create a very simple pdf in this course here.

01:24.240 --> 01:29.700
Now for documentation, it's important to know that this documentation uses coffee script which is like

01:29.850 --> 01:31.430
a superset to javascript,

01:31.450 --> 01:33.210
it's not supported by node,

01:33.450 --> 01:36.560
it's just a tooling for writing your code,

01:36.570 --> 01:42.330
it's compiled back to a normal javascript and therefore this documentation can be a bit hard to read.

01:42.390 --> 01:49.340
In the end you could say something like this new pdf document, here we would have curly braces after it,

01:49.720 --> 01:54.870
require would be using curly braces so some stuff here looks a bit different but I will show you how

01:54.870 --> 02:01.590
to use it in this module, in this lecture actually. Let's start by installing it, so I will simply run

02:01.770 --> 02:04.620
npm install --save pdfkit,

02:04.740 --> 02:06.310
that's the name of the package,

02:06.440 --> 02:12.750
you'll also find these instructions on the official page, npm install pdfkit and then we can start using

02:12.750 --> 02:12.960
it

02:12.960 --> 02:16.950
once it's installed. So let me start that server again

02:19.260 --> 02:21.440
and up there in my shop.js

02:21.530 --> 02:27.670
controller file, I'll import pdfkit by requiring pdfkit,

02:27.900 --> 02:35.040
so this package we just installed. Actually pdfkit exposes a pdf document constructor,

02:35.080 --> 02:36.610
so let's maybe name it like this,

02:36.710 --> 02:38.440
so pdf document,

02:38.480 --> 02:43.870
the name is up to you but this is closer to what this package really exposes.

02:43.880 --> 02:46.000
Now I want to create a new pdf document

02:46.040 --> 02:50.230
when we get an invoice at this point here.

02:50.420 --> 02:58.230
So let's create a new pdf doc, whatever you want to name it by calling new pdf document and that's

02:58.230 --> 02:58.700
what I meant,

02:58.740 --> 03:03.190
you need to add normal parentheses as we always did for all constructors.

03:03.600 --> 03:05.790
So now we have a new pdf document.

03:08.420 --> 03:14.090
This actually also turns out to be a readable stream,

03:14.140 --> 03:17.970
therefore what we can do here is we can use the pdf document and

03:17.990 --> 03:19.490
we can do two things.

03:19.570 --> 03:25.760
First of all we pipe this output into a writable file stream,

03:25.780 --> 03:31.690
so create write stream is a function we can call on the file system package and to that we pass a path

03:31.770 --> 03:34.230
where we want to write it to, the invoice path

03:34.240 --> 03:41.230
in my case and this ensures that the pdf we generate here also gets stored on the server and not just serve

03:41.230 --> 03:42.250
to the client.

03:42.460 --> 03:49.940
So we create that and of course I also want to return it to the client,

03:49.990 --> 03:54.230
so I also pipe the output into my response, just as before,

03:54.250 --> 04:00.430
the response is a writable read stream, pdf doc is a readable one so we can do that.

04:00.550 --> 04:06.400
Now we have this set up and now whatever we add to the document will be forwarded into this file which

04:06.400 --> 04:10.550
gets generated on the fly and into our response.

04:10.560 --> 04:17.130
Now let's start simple and let's now use pdf doc and let's call the text method which exists there,

04:17.190 --> 04:22.060
this allows us to add a single line of text into the pdf document.

04:22.090 --> 04:25.970
So here let's add hello world maybe

04:26.230 --> 04:31.900
and then you have to call pdf doc to tell node when you're done writing to that stream because you

04:31.900 --> 04:33.650
have to be done at some point, right.

04:33.670 --> 04:36.160
So here you simply call end

04:36.400 --> 04:43.390
and when you call end, these writable streams for creating the file and for sending the response will be closed

04:43.390 --> 04:48.490
so to say or will know that you are done writing and therefore the file will be saved and the response

04:48.490 --> 04:50.170
will be sent.

04:50.290 --> 04:56.210
And now with that saved, just make sure you also change your setup down there at the bottom.

04:56.230 --> 05:02.820
I will keep the headers but I will not pipe any file because we now, well pipe the file up there

05:02.830 --> 05:03.800
when we create it

05:03.880 --> 05:07.180
and I just need to make sure that I set my response headers accordingly.

05:07.540 --> 05:13.390
Now with that if you save that and you click on that invoice link, you should get a pdf with hello

05:13.390 --> 05:17.260
world in there and this pdf also can be found here.

05:18.100 --> 05:22.730
Now it might look a bit strange here but you can open it with a normal pdf reader and it should look like

05:22.730 --> 05:23.550
a pdf.

05:23.840 --> 05:26.440
So this is how you can create a pdf on the fly,

05:26.550 --> 05:29.630
now in the next lecture let's actually populate it with some order data.
