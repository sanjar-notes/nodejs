WEBVTT

1
00:00:02.070 --> 00:00:03.860
<v Instructor>Now, with the TypeScript basics</v>

2
00:00:03.860 --> 00:00:07.500
out of the way, let's see how we could utilize TypeScript

3
00:00:07.500 --> 00:00:11.590
in a simple Node Express application.

4
00:00:11.590 --> 00:00:14.010
And for that, I cleared my folder again,

5
00:00:14.010 --> 00:00:17.800
and I'll initialize my TypeScript compiler there

6
00:00:17.800 --> 00:00:22.800
with tsc --init to create this tsconfig file again,

7
00:00:23.100 --> 00:00:27.220
and I'll run npm init to basically turn this

8
00:00:27.220 --> 00:00:30.300
into a new npm controlled project

9
00:00:30.300 --> 00:00:32.970
where we then can install dependencies.

10
00:00:32.970 --> 00:00:35.390
I'll confirm all these defaults here,

11
00:00:35.390 --> 00:00:38.570
and that gives me an empty package JSON file.

12
00:00:38.570 --> 00:00:42.810
Now, I wanna create a basic Node Express application,

13
00:00:42.810 --> 00:00:46.670
let's say a basic Node Express rest API,

14
00:00:46.670 --> 00:00:51.600
but with TypeScript instead of with JavaScript.

15
00:00:51.600 --> 00:00:53.370
And for this now,

16
00:00:53.370 --> 00:00:56.690
besides creating these configuration files here,

17
00:00:56.690 --> 00:00:59.160
of course we wanna install Express,

18
00:00:59.160 --> 00:01:02.400
with npm install --save express,

19
00:01:02.400 --> 00:01:04.490
we install the Express package

20
00:01:04.490 --> 00:01:07.210
which we also used before in the course.

21
00:01:07.210 --> 00:01:11.430
We can also install with npm install --save

22
00:01:11.430 --> 00:01:15.783
the body-parser package to parse incoming request bodies.

23
00:01:16.640 --> 00:01:18.980
Now, with all of that installed,

24
00:01:18.980 --> 00:01:22.980
we could write a regular Node Express application

25
00:01:22.980 --> 00:01:25.470
as we did at multiple times throughout this course.

26
00:01:25.470 --> 00:01:28.880
We can add a app.js file, and in there,

27
00:01:28.880 --> 00:01:30.890
you know that we can import Express

28
00:01:30.890 --> 00:01:34.740
by requiring express like this,

29
00:01:34.740 --> 00:01:38.750
and we can create our app by calling the express function,

30
00:01:38.750 --> 00:01:41.850
and on app, we can then listen on a port,

31
00:01:41.850 --> 00:01:44.510
and then we can register our middleware,

32
00:01:44.510 --> 00:01:48.450
our different routes, we can parse incoming request bodies,

33
00:01:48.450 --> 00:01:50.510
we can do all of that.

34
00:01:50.510 --> 00:01:53.670
But I now don't want to do it like that,

35
00:01:53.670 --> 00:01:57.560
instead now the goal is to write some TypeScript code.

36
00:01:57.560 --> 00:02:00.650
And since we now learned all those core essentials

37
00:02:00.650 --> 00:02:03.360
about TypeScript in the last lectures,

38
00:02:03.360 --> 00:02:06.390
let's convert this to a TypeScript application

39
00:02:06.390 --> 00:02:08.860
and let me show you how we can build

40
00:02:08.860 --> 00:02:12.263
a basic rest API with TypeScript.

