WEBVTT

00:02.230 --> 00:09.010
Time for more logic and with which logic do we want to start? We could add more logic to add product for

00:09.010 --> 00:15.850
example so that we finally can not just add a title but actually also an image, a price and the description

00:15.890 --> 00:16.830
text here.

00:17.290 --> 00:22.430
So to do that first of all, I'll work on my model here. In this model,

00:22.450 --> 00:29.290
I want to make sure that we don't just work with the title here but that I actually initialize a new

00:29.290 --> 00:34.750
product with my title and I will now rename it here as an argument,

00:34.780 --> 00:39.550
you probably got the point that these two names don't have to be equal but it's easier to understand

00:39.550 --> 00:43.750
the constructor if we give it a title that makes sense or a name that makes sense.

00:43.750 --> 00:49.110
So I got my title here, now a product will also have an image url,

00:49.180 --> 00:51.580
later in the course we'll also add image upload,

00:51.580 --> 00:53.050
for now let's take a finished

00:53.080 --> 00:55.250
url of some image on the web,

00:55.720 --> 00:58.470
it also needs a description and a price.

00:58.960 --> 01:02.610
And then here I will simply store all that data in properties,

01:02.730 --> 01:05.060
image url will be stored,

01:05.060 --> 01:12.690
the description will be stored and the price will be stored,

01:12.780 --> 01:15.270
whoops, not the description, price like this.

01:15.270 --> 01:18.930
With all that, future products we add to our file

01:18.930 --> 01:24.420
will have all that data in them and the data we fetch or products we fetch will have too,

01:24.570 --> 01:30.600
now we just need to work on our add product view and make sure we've got more inputs to fetch that additional

01:30.600 --> 01:31.460
data.

01:31.650 --> 01:38.630
And for this let's simply copy that form control and add an additional one, we're fetching the title.

01:38.680 --> 01:46.150
Now as we just worked on the model, we'll also need an image url and I'll simply fetch this as

01:46.180 --> 01:50.360
some text input for now, again we'll add an image upload later in the course,

01:50.380 --> 01:52.520
so here I will get my image

01:52.720 --> 01:58.680
url, name that field image url and optionally also assign an ID

01:58.680 --> 02:01.990
here for best accessibility.

02:02.050 --> 02:10.930
Now I'll copy that again and here I will not add an input but instead here I want to fetch the description

02:11.040 --> 02:14.520
or let's actually fetch the price first, so it stays in input actually

02:14.660 --> 02:16.600
and here I want to have a price.

02:16.600 --> 02:25.260
Now this can be of type number and I will give this here an ID of price and also a name of price

02:25.450 --> 02:30.000
and now I will add one more form control and that should be my description,

02:30.160 --> 02:35.740
so here this is for my description for the element with the description ID,

02:35.920 --> 02:39.660
it gets the label description and now this is not an input

02:39.700 --> 02:48.730
instead it is a text area and that text area has a name of description and an ID or description and

02:48.790 --> 03:00.390
it also has let's say five rose here. If we add all that and we go to add product, this is the form we see, doesn't

03:00.390 --> 03:03.400
look too bad but the description field doesn't look good,

03:03.570 --> 03:09.640
well that is a styling thing and we can quickly fix that in the public folder by going to forms.css

03:09.740 --> 03:10.410
.

03:10.650 --> 03:13.830
I want to give it the same styling as a normal input has,

03:14.040 --> 03:20.640
so here where I have form control input, let's add form control text area with a whitespace in-between

03:20.980 --> 03:26.690
and let's also add that rule or that selector for this rule here

03:26.820 --> 03:33.570
and also down there for this rule, I will add text area and then the focus pseudo selector

03:33.720 --> 03:37.920
and with that if we now reload, this looks much better.

03:37.950 --> 03:41.050
So now we got all these fields here which we need to add a product

03:41.220 --> 03:47.700
and these are automatically added to the request which is sent to the backend because we are using regular

03:47.750 --> 03:51.520
html inputs in a form and we assigned names,

03:51.540 --> 03:57.230
so now we can extract all that data up by the names we assign to our input fields here.

03:57.510 --> 04:05.280
And with that, let's actually go back to our controller, to the admin controller where we have post add

04:05.280 --> 04:08.550
product and there, we create a new product.

04:08.550 --> 04:10.230
I do extract the title here,

04:10.350 --> 04:13.590
now let's do this in a more structured way to make it easier to read.

04:13.680 --> 04:20.430
I do extract my title here and store it in a constant, title constant because I never overwrite the value

04:20.490 --> 04:22.030
in this function,

04:22.050 --> 04:25.230
I will then also add my image url which I extract from request

04:25.230 --> 04:27.390
body, image url.

04:27.420 --> 04:34.190
Now make sure to type this in exactly the same way using the same casing as you assign the name here

04:35.510 --> 04:39.360
and the same is true for the price and the description.

04:39.530 --> 04:44.580
So here I'll also add a price field and extract the price

04:44.630 --> 04:48.840
and of course also extract my description.

04:49.250 --> 04:53.320
And now with that data extracted here, we can pass the title,

04:53.510 --> 04:59.720
we can pass the image url, we can pass the description, watch the order you defined in the constructor

05:00.140 --> 05:03.230
and we can pass the price

05:03.230 --> 05:06.370
and now we create a product with all that data.

05:07.220 --> 05:13.460
Now with that, in the next step, let's also extract that data and show it when we show all products.
