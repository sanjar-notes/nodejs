WEBVTT

00:02.360 --> 00:09.990
So let's now use all that information we get back from our backend when rendering our index.ejs page,

00:10.110 --> 00:16.290
we have all these utility information pieces, these utility variables like total products has next page

00:16.310 --> 00:20.720
and so on which hopefully should be helpful.

00:20.730 --> 00:22.090
So let's go back to index.ejs

00:22.130 --> 00:22.640
.

00:22.770 --> 00:28.980
and there instead of hardcoding this, we can now generate this dynamically.

00:29.010 --> 00:34.940
Now I always want to have page one here, that is something I absolutely need.

00:35.010 --> 00:37.950
Let's say the page next to it should be the current page,

00:38.190 --> 00:44.280
so actually instead of total products, I should return current page here which is simply the page

00:44.280 --> 00:49.760
number so that I always know what's the currently active page. So I'm returning current page as well

00:49.950 --> 00:57.140
and here, I can now output equals current page because I'm now getting that data in my view

00:57.310 --> 01:02.780
and here I therefore will load the current page number if I should click on that link again.

01:04.120 --> 01:08.860
And this current page will receive a css class of active because that will always be the active class

01:09.370 --> 01:16.550
and I'll quickly go to my main css file to give that the same style as when I hover over it.

01:16.570 --> 01:23.080
So here I'll have my pagination a class with an active class added to it with a single dot, a active will

01:23.080 --> 01:26.550
receive the same style as when I hover over it.

01:26.560 --> 01:32.170
Now I only want to render this one by the way if the current page is not one because otherwise I will already

01:32.170 --> 01:41.500
render it here, so we can add some ejs logic here to check if current page is equal to one or to be precise,

01:41.520 --> 01:43.660
if that is not the case.

01:43.770 --> 01:45.660
If that is not the case,

01:48.450 --> 01:54.560
then I will render this otherwise I will not render this. So I can now close that

01:54.590 --> 01:59.270
and now this will only get rendered if the current page is not equal to one, like this.

02:01.540 --> 02:04.290
This will always get rendered, the current page

02:04.290 --> 02:06.540
and I also want to render the next page

02:06.570 --> 02:13.690
let's say, so I will repeat this one more time here and this will be the next page.

02:13.690 --> 02:17.140
Remember the next page is some information which I return as well,

02:17.140 --> 02:24.080
next page here. So I will render the next page, only however if there is a next page and that is another

02:24.090 --> 02:28.350
piece of information I do return, has next page.

02:28.400 --> 02:39.290
So let me go back and here again if has next page, so if that is true, then I will render this, otherwise

02:39.320 --> 02:39.890
I won't,

02:40.000 --> 02:43.910
so here I just close that if statement.

02:43.990 --> 02:49.750
I also want to render the highest page, so I'll add another anchor

02:52.200 --> 02:56.670
tag here and that will use this last page information,

03:00.150 --> 03:04.750
by the way the active class here of course not be added here and also not be added here.

03:04.890 --> 03:10.530
So here I will render the last page and it will lead to last page, here

03:10.530 --> 03:14.150
it will lead to next page by the way so we have to adjust this link

03:14.160 --> 03:16.160
obviously, here it's the last page

03:20.130 --> 03:29.440
and this last page should also not always be rendered, it should only be rendered if last page is not

03:29.440 --> 03:30.520
equal to the current page,

03:30.520 --> 03:34.970
so if we are not already on the current page because then this link would already render the link to

03:34.970 --> 03:43.870
this last page and the next page should also not be equal to the last page because if it is, then this

03:43.870 --> 03:45.180
link will already be rendered

03:45.280 --> 03:48.420
and this is then the last and next page simultaneously

03:48.610 --> 03:54.620
but if both is not true, then I will render this.

03:54.620 --> 03:56.180
Now let's have a look at this

03:56.180 --> 04:06.250
and let's reload this and here I got an error, little logical error. Count used to be the function you should

04:06.250 --> 04:06.520
use,

04:06.520 --> 04:08.290
now it's count documents

04:08.530 --> 04:11.170
so change count to count documents here

04:11.620 --> 04:14.180
but this error is not coming from that

04:14.210 --> 04:19.940
but in the index.ejs here I got a dollar sign instead of a percentage sign which I should use.

04:20.970 --> 04:25.220
With that fixed, this looks a bit better

04:25.380 --> 04:28.710
but I got 11 here and then a two again

04:28.710 --> 04:31.550
so there seemed to be some issues.

04:31.610 --> 04:33.040
For one it's rendering

04:33.050 --> 04:37.890
the one here even though the current page is not equal to one,

04:37.910 --> 04:40.620
the problem here is really just the data format,

04:42.280 --> 04:44.290
we're comparing strings and numbers here

04:44.380 --> 04:48.480
so I should remove one equal sign

04:48.660 --> 04:50.020
and now this works. 

04:50.100 --> 05:00.780
And now regarding the 11, next page somehow is calculated to be 11.

05:00.790 --> 05:07.900
The reason for that is that page here is a string, not a number and therefore page plus one gets concatenated

05:07.990 --> 05:10.310
to 11, so to 11,

05:10.510 --> 05:19.220
this can be fixed by adding a plus here in front of request query page

05:19.450 --> 05:20.860
and now this looks better.

05:20.980 --> 05:26.860
Now I can switch between these two and this is looking all right now with that error, this format,

05:26.920 --> 05:29.110
this data type error fixed,

05:29.140 --> 05:34.870
now what happens if I load that page without the page query parameter and then I have this not a number

05:34.870 --> 05:35.700
issue here.

05:37.000 --> 05:40.120
And to fix this, I can add two pipe symbols here in that one

05:40.120 --> 05:47.340
and this means if this is undefined or if this does not hold a true-ish value, then we'll use this value

05:47.400 --> 05:49.480
instead. With that if I save that

05:53.180 --> 05:55.520
and I reload this page, I'll start on page 1

05:55.700 --> 05:57.940
and now I can jump around.

05:57.950 --> 05:59.180
Now let's also try this,

05:59.180 --> 06:04.060
when changing the items per page to one so that we should have one extra page.

06:04.100 --> 06:12.850
Now if I reload this with Page 1 being loaded, I can go to page 3 and 1, 2, 3.

06:12.860 --> 06:17.870
Now I don't see a two when I'm on page three because we have no logic for it in our template right now,

06:18.290 --> 06:26.060
I could of course add that logic to also show the previous page. For that I can replicate this and

06:26.060 --> 06:29.690
if I have a previous page,

06:32.560 --> 06:37.870
then I can show my previous page and link to it here.

06:37.870 --> 06:42.720
Now of course I want to avoid that I have two ones if I'm on page 2 because that would render this

06:42.730 --> 06:44.920
link and I would render this link,

06:45.100 --> 06:51.810
so I don't want to render this first page if I am on it already or if it's equal to the previous page.

06:51.910 --> 06:53.710
So I only want to render this first page

06:53.740 --> 07:06.570
if it's not equal to the current page and if the previous page is not equal to 1. Now by the way since

07:06.570 --> 07:13.610
I fixed that data type, we can also work with double equal signs here again. So now if I reload this

07:13.610 --> 07:14.910
page,

07:15.170 --> 07:19.090
it's in the wrong place, the previous page here should be before

07:19.290 --> 07:23.900
this current page so let's fix that.

07:24.930 --> 07:26.040
Reload again,

07:26.160 --> 07:27.210
now this is looking better,

07:27.210 --> 07:32.580
now I can go to page two, page one and that all seems to work.

07:32.580 --> 07:42.650
Now let's add another product, product4 with another deck again to see how it works with four products

07:42.680 --> 07:43.950
on the shop page

07:44.390 --> 07:49.970
and now I see the first page, the next page and the last page. If I go to the last page, I see the previous

07:49.970 --> 07:51.480
page and the first page,

07:51.650 --> 07:56.540
if I go to three, well then I have the previous and the next page which is the last page and the first

07:56.540 --> 07:57.110
page.

07:57.110 --> 08:02.120
So now this pagination is working and you can always of course tweak this to your requirements or your

08:02.120 --> 08:03.080
different needs

08:03.170 --> 08:05.400
but now this is looking good to me here.
