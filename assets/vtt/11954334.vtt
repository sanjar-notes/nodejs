WEBVTT

00:02.130 --> 00:04.460
So what is authentication?

00:04.560 --> 00:11.910
Well we obviously got our user using our application, interacting with our views and we get the server

00:12.000 --> 00:16.060
and also the database with which our server works,

00:16.200 --> 00:19.430
these are all things we worked with in this course already.

00:19.740 --> 00:25.080
Now in our application, we might have different routes, different actions

00:25.110 --> 00:26.480
a user can do,

00:26.580 --> 00:32.260
we might be able to view all products, to create and manage products or to place orders,

00:32.370 --> 00:37.060
now obviously we can do more things in our application but these are just some examples.

00:37.090 --> 00:43.650
Now the idea behind authentication is that not all these actions are available to every user of our

00:43.650 --> 00:44.710
application

00:44.710 --> 00:53.160
and now here's one important thing, with user I don't mean logged in user, I mean simply a person visiting

00:53.160 --> 00:56.610
our page, visiting localhost 3000

00:56.700 --> 01:00.870
in our case here, later of course the domain under which we deployed it.

01:00.900 --> 01:07.590
So I'm not talking about logged in users but really just people using our page and such anonymous users

01:07.650 --> 01:11.120
who are not logged in should not be able to do all these things,

01:11.130 --> 01:17.610
they certainly should be able to view all products just as you are able to view all products on Amazon.com

01:17.670 --> 01:19.320
even if you're not logged in,

01:19.320 --> 01:21.760
we want to allow this in our shop too.

01:22.110 --> 01:27.990
But there are other things like for example here creating products, managing products and placing orders

01:28.380 --> 01:34.320
which should only be available to logged in users and not to every visitor of our page because in

01:34.320 --> 01:39.660
order to buy a product, you need to be logged in and in order to create a new product, you also need to

01:39.660 --> 01:40.360
be logged in

01:40.440 --> 01:47.970
because in our application, we of course connect a product to the logged in user, we match the two things

01:47.970 --> 01:50.110
and this is what we need authentication for.

01:50.160 --> 01:56.790
We need to be able to differentiate between anonymous users who are not logged in and logged in users

01:57.030 --> 02:03.750
and we need to provide a flow, a view and the backend logic that allows people visiting our page to

02:03.750 --> 02:10.500
sign up and then to sign in and then we can use sessions as I showed it to you in the last module to

02:10.590 --> 02:19.030
store the information whether a user is signed in and well let him interact with the page across requests.

02:19.140 --> 02:21.370
This is the idea behind authentication,

02:21.390 --> 02:23.220
now how is it implemented?
