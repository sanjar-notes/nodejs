WEBVTT

00:02.220 --> 00:08.520
Now that you had a brief introduction to what mongodb is and what NoSQL databases are, let's install

00:08.520 --> 00:08.730
mongodb,

00:08.730 --> 00:09.340
.

00:09.420 --> 00:15.160
let's set it up and let's use it for our project here. Now to install mongodb,

00:15.210 --> 00:21.090
you can either do that locally on mongodb.com, you can click on get mongodb, download the

00:21.300 --> 00:26.880
installer or the tools when you click on community server here and follow the installation instructions

00:26.970 --> 00:31.400
and this will all work and it will give you a locally running mongodb server.

00:31.770 --> 00:36.140
Now I would go for a cloud solution here because it's the more realistic environment

00:36.150 --> 00:40.760
we would use for deployment anyways and it's really easy to set up and it's free

00:40.980 --> 00:43.580
and that will be Atlas, so mongodb Atlas.

00:43.620 --> 00:47.260
So I got here by clicking on get mongodb and then choosing atlas.

00:47.310 --> 00:48.320
Now again this is free,

00:48.330 --> 00:50.570
you don't need a credit card or anything like that,

00:50.670 --> 00:54.120
you just need to sign up and you can spin up your own in the cloud

00:54.120 --> 00:59.520
best practice managed mongodb server which is a great environment for practicing because this

00:59.520 --> 01:03.750
will follow all the best practices. So sign up here,

01:04.230 --> 01:07.800
now once you did sign up you should end up on a page that looks something like this.

01:07.830 --> 01:12.510
Maybe you need to create a new project first, give it any name you want and then you should be on that

01:12.510 --> 01:14.850
page or you can build a new cluster,

01:14.850 --> 01:18.540
you might also end up in that wizard right from the start.

01:18.540 --> 01:23.960
Now here you configure a mongodb cloud cluster, so basically a mongodb server and therefore a

01:23.970 --> 01:29.230
mongodb database or multiple databases, as many as you want running in the server.

01:29.730 --> 01:32.060
You can generally leave all the default settings,

01:32.160 --> 01:37.970
make sure that you choose a region where a free tier is available, behind the scenes mongodb uses

01:37.980 --> 01:42.150
one of these cloud providers but you don't need to be signed up with them or anything like that,

01:42.180 --> 01:48.600
so you can choose anything you want here, then you choose the cluster tier and there you should use the free

01:48.600 --> 01:51.210
one and zero where it says free

01:51.330 --> 01:56.590
and then this will not cost you anything. Under additional settings, you can well leave all the defaults,

01:56.610 --> 01:59.970
you can't change them anyways in the free tier but that's fine.

02:00.240 --> 02:05.010
You can change the cluster name if you want and then you can click create cluster and this will now create

02:05.010 --> 02:05.920
a new cluster,

02:05.940 --> 02:12.660
we'll take a couple of minutes which you then can connect to later and which you then can use as your

02:12.730 --> 02:13.530
backend.

02:13.860 --> 02:19.620
Now one important note, you might see that I have some cost here in this account and this is not coming

02:19.620 --> 02:20.710
from the setup

02:20.730 --> 02:21.720
I'm showing you here,

02:21.780 --> 02:25.700
I was simply using this for some other set up in the past which did cost something,

02:25.710 --> 02:28.070
this does not cost you anything.

02:28.210 --> 02:34.020
Now whilst this is getting set up, you can already click on security here and there you will probably not have

02:34.020 --> 02:35.560
as many users as I do.

02:35.890 --> 02:41.600
Now make sure you add at least one new user and I already did this which

02:41.610 --> 02:45.500
and that's important, which has read and write access to any database.

02:45.660 --> 02:52.230
You can turn it into an atlas admin but more realistic is this here because this will later be the role

02:52.320 --> 02:57.930
which our nodejs application assumes which should be able to read and write our databases but not

02:57.960 --> 03:03.840
to administrate them because we'll not do database administration through nodejs, that would be something

03:03.870 --> 03:05.830
our database admin does

03:06.070 --> 03:07.670
and therefore not our app.

03:07.710 --> 03:09.540
So make sure you create such a user,

03:09.840 --> 03:14.240
you can also sign your own password or auto-generate a secure one,

03:14.280 --> 03:17.980
make sure you do save that because you'll need it later

03:18.880 --> 03:22.360
and then also make sure you have a look at IP whitelist.

03:22.570 --> 03:27.490
There you see all the IP addresses that are allowed to connect to your mongodb server,

03:27.490 --> 03:31.630
now I already got a bunch here that will probably be less for you.

03:31.630 --> 03:38.470
Now one thing you should do here is you should add a new IP address and add your current IP address

03:38.530 --> 03:44.760
since the node app runs locally on your machine, your node app will have this IP address. Later when you deploy

03:44.770 --> 03:45.240
the node app

03:45.280 --> 03:51.250
this should of course use the IP address of your server where you deployed it to

03:51.280 --> 03:56.850
but here you can use your local one so that you can connect and your node app can connect to that server.

03:57.070 --> 04:03.320
That's of course a good security feature because this makes sure that no unauthorised access can happen

04:03.320 --> 04:09.280
to your database, so your database is now locked down both from a IP perspective but also from a

04:09.280 --> 04:10.540
user perspective.

04:10.690 --> 04:15.700
And now we can wait for it to set up to finish and I'll be back once it did finish.

04:15.750 --> 04:21.780
Now the set up did complete and now we can connect to our mongodb server from inside our node

04:22.020 --> 04:28.440
app and for this we can click on connect here and choose a connection method which in our case will be

04:28.650 --> 04:30.170
an application.

04:30.180 --> 04:36.160
Now here we can check I'm using this driver and we get this url which we'll need soon

04:36.420 --> 04:41.260
but first of all we need to install the mongodb driver, in our case for nodejs.

04:41.340 --> 04:45.840
You can click on an example down there but I will simply show it to you in our project.
