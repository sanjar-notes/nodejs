WEBVTT

00:02.250 --> 00:10.140
Now let's first of all fix the fact that our user does not have the post added to his posts array,

00:10.560 --> 00:13.050
the reason for that is that I do push the post here

00:13.050 --> 00:15.540
but of course I forgot one important thing,

00:15.600 --> 00:23.430
I never saved that change. I need to call users save here and I'm not interested in the result but I certainly

00:23.430 --> 00:28.790
want to await it nonetheless so that I only return after this has been done.

00:29.010 --> 00:35.520
So this is one important change and this is only one change we need though, we can quickly validate whether

00:35.520 --> 00:36.320
it works

00:36.330 --> 00:43.270
however by going to posts, let's delete that post which we added here and now let's go back to our frontend,

00:43.280 --> 00:46.330
add a new post, another

00:46.380 --> 00:51.140
duck, choose an image even though it's not getting used.

00:51.240 --> 00:55.560
Let's add some content and click accept, we still get that error

00:55.560 --> 01:01.360
but if we go back to compass, we have a look at our users, for the first user,

01:01.380 --> 01:03.140
we now also see that post here.

01:03.320 --> 01:04.790
So that is now working

01:05.010 --> 01:11.850
and now let's make sure we also extract the data correctly on the frontend and that we then also load

01:11.850 --> 01:15.060
all posts so that we really can see them there.

01:15.180 --> 01:20.000
Now for the data extraction, we see that this is the data in the format we get it back,

01:20.130 --> 01:26.640
an object with a data field, then the name of our query and then in another nested object, the fields

01:26.640 --> 01:27.730
for that query

01:27.840 --> 01:31.000
and this is exactly how we have to retrieve our data.

01:31.080 --> 01:33.720
So in our react code in feed.js

01:33.740 --> 01:35.160
here,

01:35.340 --> 01:41.630
when I create my post there and I try to access response data post and this will not work,

01:41.640 --> 01:44.750
I have to access res data data

01:44.940 --> 01:49.860
create post, so here its res data data

01:50.110 --> 01:57.470
create post ID and that is the case for all these places,

01:58.830 --> 02:05.100
whoops, where I do access fields on my created post.

02:05.120 --> 02:07.900
Now with that, we should not get an error message anymore

02:07.970 --> 02:10.320
when I create a new post at least,

02:10.460 --> 02:11.910
so let's try that out, a cup,

02:14.860 --> 02:17.230
let's choose the cup image though it does not matter,

02:17.220 --> 02:22.470
we're not uploading it, it accept and I don't get that error anymore.

02:22.510 --> 02:24.450
So extracting the data works,

02:24.460 --> 02:31.870
now let's focus on adding a query that allows us to get our posts so that we can also render them here.

02:31.870 --> 02:35.980
This is also a great practice for you, we'll do together in the next lecture,

02:35.980 --> 02:38.080
try fetching your posts on your own,

02:38.080 --> 02:41.300
try creating that query on the backend on your own.

02:41.380 --> 02:43.330
You don't need to tweak the frontend code,

02:43.330 --> 02:44.290
if you can do that,

02:44.290 --> 02:51.150
perfect, we'll do it together otherwise but add your graphql query and test it with the graphiql interface.
