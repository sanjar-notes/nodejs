WEBVTT

00:02.160 --> 00:08.100
So now we're importing something which allows us to get access to the database connection

00:08.100 --> 00:13.380
we set up initially when starting our server which now is a concept that we can reuse.

00:13.440 --> 00:22.110
So in the save method of the product model, I can now get access to my database by calling get db, remember

00:22.220 --> 00:26.800
get db does simply return that database instance we connected to,

00:26.990 --> 00:32.190
so now we have a connection which allows us to interact with the database and then here in mongodb,

00:32.280 --> 00:39.630
you can call collection to tell mongodb into which collection you want to insert something or with which

00:39.630 --> 00:41.960
collection you want to work

00:42.060 --> 00:46.680
because remember in mongodb you have databases, collections and documents.

00:46.680 --> 00:48.590
We have a database connection here,

00:48.690 --> 00:51.500
so the next level is a collection.

00:51.570 --> 00:56.940
So here we can connect to any collection and just as with the database, if it doesn't exist yet, it will

00:56.940 --> 00:59.530
be created the first time you insert data.

00:59.730 --> 01:04.120
So here I'll connect to a products collection.

01:04.530 --> 01:12.010
Now on that collection, we can execute a couple of mongodb commands or operations.

01:12.120 --> 01:15.610
Now a full list can be found in the official docs

01:15.630 --> 01:21.030
and of course you'll learn all about them and all the details in my full mongodb course which

01:21.030 --> 01:24.740
I mentioned. In the official docs, you can click on mongodb server

01:24.900 --> 01:31.410
and here for example click on mongodb crud operations to learn how to insert find, that is what query is,

01:31.710 --> 01:37.620
update and deletes documents and you'll see all the examples here and all the commands and how to configure

01:37.620 --> 01:38.670
them and so on,

01:38.670 --> 01:41.090
so this is a great place for you to dive deeper

01:41.100 --> 01:42.840
besides the other course I mentioned

01:42.930 --> 01:47.730
but of course here's a short introduction too. If you want to insert data,

01:47.730 --> 01:52.300
you can do this with insert one or if it's multiple documents at once,

01:52.410 --> 01:58.650
insert many. Insert many then takes an array of javascript objects you want to insert, insert one which I'll

01:58.650 --> 02:03.890
do here because I want to insert one product only takes the object you want to insert.

02:03.930 --> 02:05.990
Now what do you mean with object?

02:06.060 --> 02:13.280
Well you would simply pass an object where you have like for example name, a book, price

02:13.450 --> 02:15.360
12.99 and so on,

02:15.360 --> 02:20.760
so this is something which would be valid code, that would insert such a document into the database.

02:20.760 --> 02:26.100
By the way this is not json, this is a javascript object but it will be converted by mongodb

02:26.100 --> 02:27.090
.

02:27.150 --> 02:31.630
However here in our case, essentially it's the product which we want to insert right,

02:31.680 --> 02:35.390
so we could just say this and see how that works

02:35.460 --> 02:41.010
if we try to insert this into our database. Now this is all we need to do right now,

02:41.010 --> 02:43.690
insert one then returns us a promise,

02:43.860 --> 02:52.500
so we have then and catch and we can log any error we found or we can have a look at the result we

02:52.500 --> 03:00.390
get back, so we can console log the result. With that out of the way, let me remove the sequelize

03:00.990 --> 03:04.150
model and export our class with the save method

03:04.440 --> 03:07.480
and now with that, we fixed the model file,

03:07.530 --> 03:12.810
let's now go to the admin.js file. And here obviously we got a couple of methods or a couple of

03:12.810 --> 03:19.670
functions which still use parts of the model that won't work anymore, like this one here, request user

03:19.680 --> 03:22.230
create product for adding a new product.

03:22.230 --> 03:23.600
This will not work anymore,

03:23.610 --> 03:27.770
for now we'll have to create a product without storing something about the user,

03:27.850 --> 03:30.390
we'll reintroduce this later again.

03:30.780 --> 03:34.730
So for now, we can overwrite this here though

03:34.890 --> 03:42.480
and I also want to comment out my other methods because these will not work anymore,

03:42.540 --> 03:43.810
so let's comment them out.

03:43.850 --> 03:49.530
We'll comment them back in later once it works and therefore in the admin routes, here routes

03:49.610 --> 03:54.860
admin.js, there I also want to disable all routes that will not work anymore.

03:55.020 --> 03:56.560
So essentially that's all

03:56.580 --> 03:58.230
but this post route.

03:58.380 --> 04:00.540
So here for getting all products,

04:00.660 --> 04:05.700
this will not work anymore and all these routes down there will also not work anymore

04:05.820 --> 04:08.410
but these two routes should still work

04:09.220 --> 04:10.650
for add product.

04:10.930 --> 04:20.260
So now with that, I need to fix one more thing in the app.js file, here I need to import .mongo connect

04:20.260 --> 04:22.900
here from my database utility file.

04:23.310 --> 04:29.290
And with that now we're not only connected but we should also be able to insert a new product already,

04:30.270 --> 04:38.090
so let's try this out. Visit localhost 3000/addproduct and this won't load because

04:38.090 --> 04:44.510
in app.js when I commented out the code here in app use, well I should at least call next otherwise

04:44.520 --> 04:47.820
every incoming request will die here.

04:47.820 --> 04:54.480
So with that changed, now if we reload, we are back to our admin add product page.

04:54.480 --> 05:00.690
Now let's simply check this and see if it works by adding a product.

05:00.690 --> 05:06.300
Now I get an error here regarding create product and that of course makes sense because in the admin.js

05:06.300 --> 05:08.510
file, I didn't change any code.

05:08.610 --> 05:10.000
So let's work on that code

05:10.050 --> 05:10.440
next, so

05:10.440 --> 05:12.450
let's make sure that we can add a product.
