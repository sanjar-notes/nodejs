WEBVTT

00:02.410 --> 00:09.430
So why would we want to add some data or input validation to our application?

00:09.790 --> 00:16.090
Well if we have a user interacting with our website, then we typically have a lot of forms on any

00:16.090 --> 00:22.510
web application we build. In our example project for example, we have a form for signing up,

00:22.510 --> 00:26.490
we got one for signing in and we got one for adding products

00:26.620 --> 00:31.990
and the bigger your application is, the more data you will need from your users at some point of time.

00:32.020 --> 00:37.840
So we have that form with which our user, our visitor of the website interacts with.

00:37.840 --> 00:43.780
Now in the end when this form is submitted with a post request as we controlled it in our form, then

00:43.780 --> 00:46.220
a request is sent to our backend and

00:46.360 --> 00:49.430
by the way you could also configure it to send a get request

00:49.510 --> 00:55.570
but the key thing here is a request with the form data is sent and we're already doing this in this

00:55.570 --> 01:00.230
course because this is a crucial task in any web application.

01:00.350 --> 01:08.500
Now on our backend so our nodejs code, we then typically interact with a database or maybe we write

01:08.560 --> 01:14.380
the data into a normal file but in the end we take that data which we receive and we want to store

01:14.380 --> 01:15.530
it.

01:15.550 --> 01:22.360
Now this is exactly the part which can be dangerous or problematic though. Right now in the app we got no

01:22.360 --> 01:24.850
kind of data validation,

01:24.880 --> 01:31.960
so if a user in our current application would try to login with something that is not a valid email

01:31.960 --> 01:33.960
address, we would allow that,

01:34.000 --> 01:38.650
we're not preventing the user from entering something incorrect.

01:38.650 --> 01:44.380
The same is true for adding a product, we don't care about what the user enters and this is what I want

01:44.380 --> 01:51.990
to change in this module. We'll add some validation as an extra step right at the start of our nodejs

01:52.000 --> 01:59.350
code so right at the start when we handled a request on the server, definitely before we store it in

01:59.440 --> 02:06.040
a database. And this validation can then either succeed and allow the data to be written to the database

02:06.040 --> 02:13.150
or to a file or allow it to be handled by the rest of our node code or we reject the input and then

02:13.150 --> 02:19.030
basically return some information to the user prompting the user to correct the error.

02:19.240 --> 02:24.670
So this is what we will work on in this module and I will show you how to validate and how to provide

02:24.670 --> 02:26.240
a good user experience.
