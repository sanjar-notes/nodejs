WEBVTT

00:02.460 --> 00:08.250
I'm setting these query parameters and I can use that data on the backend to control which data I want

00:08.250 --> 00:09.150
to fetch,

00:09.150 --> 00:13.540
obviously I do that in my controllers and there in the shop controller. Here.

00:13.590 --> 00:19.500
we're working on the index page so I'm looking for the get index controller action. In here I need to

00:19.500 --> 00:22.050
retrieve the information on which page we are,

00:22.080 --> 00:25.040
so which data for which page needs to be displayed,

00:25.260 --> 00:30.180
so I'll store this information in a new constant named page and in that constant, well I will store

00:30.210 --> 00:36.160
request and then we can get query parameters on the query object provided by expressjs

00:36.420 --> 00:44.150
and there I can access page, page because I named that query parameter page here.

00:44.180 --> 00:49.350
So now with that, I'm getting that page number and I'll store it in this constant.

00:49.370 --> 00:54.400
Now with that, we just need to define how many items should be displayed per page

00:54.920 --> 00:59.000
and that's something I will store as a global constant in this file,

00:59.000 --> 01:03.250
I could also store it in a different file, export it there and import it here

01:03.410 --> 01:04.180
but I will

01:04.220 --> 01:07.970
name this items per page

01:07.970 --> 01:09.880
and this will be let's say 2,

01:10.010 --> 01:16.400
it should be some number lower than the number of items you have here so that you can see a difference.

01:16.430 --> 01:23.250
So I have two items per page here and with that in get index,

01:23.250 --> 01:27.960
I know that I if I'm on page one want to fetch the first two items,

01:27.960 --> 01:33.600
if I'm on page two, I want to fetch items three and four, on page three I would fetch four and five and so

01:33.600 --> 01:34.740
on.

01:34.770 --> 01:40.590
Therefore we now need to control the amount of data we're retrieving from the database, find right now

01:40.590 --> 01:45.870
gives us all the items but we can actually control this. In mongodb

01:45.870 --> 01:47.540
and therefore also mongoose,

01:47.700 --> 01:57.150
there is a skip function. We can add this on a cursor and find does return a cursor to skip the first

01:57.270 --> 02:02.950
X amount of results and here, that would be page -1,

02:03.030 --> 02:10.930
so the previous page number in brackets times items per page.

02:10.930 --> 02:18.920
So if I am on page 2, I would skip the first page -1, so the first one times items per page items.

02:18.940 --> 02:27.090
So on page 2, if I have 2 items per page, I would skip the first one times two, the first two items.

02:28.750 --> 02:31.220
I don't just want to skip some items,

02:31.330 --> 02:36.460
I also want to limit the amount of items I retrieve though, so that I don't just skip the items of

02:36.460 --> 02:42.850
previous pages but for the current page, I also only fetch as many items as I want to display there and

02:42.850 --> 02:45.230
this can be done with the limit method.

02:45.460 --> 02:49.800
The limit method as the name suggests limits the amount of data we fetch to

02:49.870 --> 02:56.800
the, well number we specify here and here I can pass items per page because that is my item limit per page.

02:57.520 --> 03:04.630
With that if we save this code, we can reload this first page with the query parameter set to page 1 and

03:04.630 --> 03:06.790
we only see the first two items.

03:06.790 --> 03:11.350
If I now click on two down there, I only see the third item because I'm on page 2,

03:11.410 --> 03:16.480
I skip the first two items and I fetch the next two items and I only happened to have one other item.

03:17.260 --> 03:24.010
On page 3 if I would enter this, we would not find any products because I have no items for this page

03:24.250 --> 03:27.620
but Page 1 and 2 were just fine.

03:27.610 --> 03:30.460
So this is the general idea behind pagination.

03:30.640 --> 03:32.950
Now obviously the idea would be that

03:32.950 --> 03:41.770
we update our pagination buttons here based on, well the page we are on and the maximum number of pages

03:41.770 --> 03:43.700
that are available or something like that.

03:43.810 --> 03:44.970
So let's see what we can do

03:44.970 --> 03:45.260
there.
