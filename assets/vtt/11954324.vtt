WEBVTT

00:02.170 --> 00:08.180
That's it for this module. You learned a lot about cookies and sessions. Now about cookies,

00:08.460 --> 00:11.080
they're great for storing data on the client side,

00:11.080 --> 00:16.750
so in the browser and since they're stored there, you should not store sensitive data in cookies because

00:16.760 --> 00:18.480
they can be viewed by the user,

00:18.610 --> 00:24.280
that might not be the worst part because each user can only view his own cookies but they can also be

00:24.280 --> 00:25.230
manipulated

00:25.330 --> 00:31.120
and you don't want to let your users control whether they are authenticated or not by simply switching

00:31.120 --> 00:33.010
some cookie value.

00:33.070 --> 00:38.710
Now you can configure cookies in a broad variety and often you won't do that, at least not directly by

00:38.710 --> 00:40.090
setting that header

00:40.150 --> 00:43.390
instead you'll use something like the session package which also uses a cookie

00:43.480 --> 00:44.740
but more on that in a second

00:44.950 --> 00:47.770
but you can configure them, for example to expire.

00:48.040 --> 00:53.260
By default they will expire when the browser is closed and such cookies that expire when the browser

00:53.260 --> 00:55.600
is closed are called session cookies.

00:55.600 --> 00:58.050
Now this term can be confusing,

00:58.240 --> 01:04.270
session cookies are not cookies necessarily used to identify a session, a concept to which I'll come back in

01:04.270 --> 01:05.080
a second,

01:05.080 --> 01:10.390
they're just called session cookie because they only survive as long as you are using that page in

01:10.390 --> 01:12.100
the current browser.

01:12.180 --> 01:17.860
You can also set an expiry date or an age after which the cookie will get invalid and that is thing called

01:17.860 --> 01:19.090
a permanent cookie,

01:19.120 --> 01:26.440
it's not permanent in the sense of lives infinitely long but in a sense of it does not necessarily go

01:26.440 --> 01:30.390
away when you close the browser, it will still be there when you reopen the browser,

01:30.430 --> 01:34.500
it will be invalid deleted once it expired.

01:34.540 --> 01:39.070
Now cookies work well together with sessions but they're not limited to using with sessions,

01:39.070 --> 01:42.510
keep that tracking cookie in mind as an example.

01:42.850 --> 01:45.670
Sessions are another great concept,

01:45.790 --> 01:49.210
you use them to store data on a server not on the client

01:49.210 --> 01:55.150
and therefore since they're on the server and they can't be viewed or manipulated by your users, they

01:55.150 --> 01:59.770
are great for storing sensitive data that should survive across requests

01:59.890 --> 02:01.190
because that's important too.

02:01.240 --> 02:04.760
You could store data in requests as we did it earlier in this course

02:04.960 --> 02:11.170
but then the data is lost for every new request, with sessions the data survives. Now you store anything

02:11.170 --> 02:17.110
in sessions, you could store your shopping cart there but often you use them for authenticating users,

02:17.170 --> 02:21.280
for storing user data in there or the authentication status in general.

02:21.280 --> 02:26.890
Now a session needs a cookie to be identified and that's not the session cookie which is simply a cookie

02:26.890 --> 02:29.890
that dies after you close the browser,

02:30.040 --> 02:33.420
you can use a session or a permanent cookie for that actually

02:33.460 --> 02:39.910
and on express session, the package we used which sets the cookie automatically by the way there, there if you remember

02:40.000 --> 02:43.650
you could configure the cookie when registering the session middleware.

02:43.840 --> 02:45.970
So we're not talking about that here

02:45.970 --> 02:52.060
instead you just have a cookie that is used to identify a session and that is important because otherwise

02:52.060 --> 02:53.760
you have that data on your server,

02:53.770 --> 02:56.730
that is great but how do you know to which user it belongs?

02:56.830 --> 02:59.230
Well for that you need the cookie.

02:59.370 --> 03:02.350
This is how sessions work and how to use cookies

03:02.650 --> 03:08.310
and since the session is also stored on the server, you can choose from different storages,

03:08.470 --> 03:14.400
you could use a MySQL storage, you could use file storage or as we did it here, you could use mongodb

03:14.470 --> 03:16.990
to store your session data.

03:16.990 --> 03:23.980
So these are sessions and cookies, crucial concepts which you might not always control and use directly

03:23.980 --> 03:25.470
but often indirectly,

03:25.570 --> 03:32.380
for example with authentication, something which we will come back to the next module where we will

03:32.380 --> 03:38.650
implement a real authentication workflow with sign up, logging in, logging out, storing real user data,

03:38.650 --> 03:41.130
creating users and all that fun stuff.
