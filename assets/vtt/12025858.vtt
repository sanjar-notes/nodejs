WEBVTT

00:02.740 --> 00:09.000
So I'll just quickly clean up all my products here because there I'll store it in an incorrect way due

00:09.080 --> 00:12.590
to, well how I worked with the files in the past so

00:12.590 --> 00:20.920
let me remove all these products and now let me go back and here in my application in post add products,

00:21.010 --> 00:25.670
in my admin controller, there I now want to handle that file correctly.

00:25.670 --> 00:32.990
So first of all image here will be an object of this format with information about the file and where

00:32.990 --> 00:33.950
it was stored,

00:33.950 --> 00:39.880
so where the physical file can be found and now I want to save that.

00:39.950 --> 00:45.600
First of all, I will check if image is set because if it's undefined, then that means that multer declined

00:45.600 --> 00:46.860
the incoming file.

00:46.910 --> 00:57.230
So if this is not set, if it is undefined, well then I want to return a response with status 422 because

00:57.230 --> 01:01.130
I then have an invalid input, so I want to return that response,

01:02.070 --> 01:04.650
add product, editing false has error

01:04.700 --> 01:05.270
is true

01:06.160 --> 01:12.460
where I pass in my old data, not the file however, only title, price and description and the error message is

01:12.970 --> 01:16.220
attached file is not an image, let's say

01:16.370 --> 01:18.930
and validation errors can be an empty array,

01:18.940 --> 01:23.090
I won't mark anything as read. With this change in place,

01:23.170 --> 01:24.600
we can already validate this.

01:24.640 --> 01:31.590
If I now try to upload an image, I succeed,

01:31.590 --> 01:40.910
so I don't get my same form again. If I choose a PDF though, then I get attached file is not an image.

01:40.990 --> 01:45.370
So this is working and let's now also work on the case that we do have an image and that we want

01:45.370 --> 01:46.500
to store it.

01:46.540 --> 01:50.420
Now the file already gets stored on our file system

01:50.590 --> 01:51.950
and this is how you should store it,

01:51.970 --> 01:57.600
you should not store data like this in the database, files should not be stored in a database,

01:57.600 --> 01:58.610
they are too big,

01:58.660 --> 02:04.900
it's too inefficient to store them in a database and query them from there. Store files on a file system

02:05.050 --> 02:06.260
as we are doing it here

02:06.430 --> 02:08.910
but of course you need to store something in a database,

02:08.980 --> 02:11.130
you need to store the path to the file,

02:11.140 --> 02:11.870
right

02:12.230 --> 02:18.130
and that is something you can construct here with the information given to you in the file object and

02:18.130 --> 02:22.920
you can then simply pass that data to the database.

02:22.930 --> 02:30.550
So if we made it after our entire validation here, I know that I have a valid file and valid input data

02:30.820 --> 02:31.930
and then I'll create my image

02:31.930 --> 02:35.450
url again and in that image url,

02:35.470 --> 02:39.950
I will use my image data which is that file object we get from multer

02:40.240 --> 02:42.920
and there we have information like the file path

02:43.030 --> 02:49.050
and it's this path that is interesting to me of course because this is the path that a file on my operating system,

02:49.150 --> 02:53.770
it is the path I therefore want to use later on when fetching that image.

02:55.340 --> 02:59.890
So this path is what I'll store here in the image url and therefore I can store image

02:59.900 --> 03:01.740
url in the database again.

03:02.090 --> 03:10.310
So if we now save all of that and I do select a valid image here and I hit add product, this now works

03:10.310 --> 03:10.900
again,

03:10.940 --> 03:15.220
displaying it does not work we'll work on this in a second but saving does work and

03:15.470 --> 03:21.650
if I have a look into my database for the products, you see this is the part that was stored.

03:21.740 --> 03:22.920
Now this is looking good

03:23.150 --> 03:29.200
but of course here if we inspect this, we see the image is not really rendered because it can't find this,

03:29.270 --> 03:36.230
it fails to fetch images and then well this name and in the network tab we indeed find a 404 error when

03:36.230 --> 03:38.520
the browser sends the request for this image.

03:38.810 --> 03:40.940
So now that we are able to store data,

03:40.970 --> 03:45.540
let's also learn how we can serve data, well almost before we serve it,

03:45.560 --> 03:50.480
let's work on editing this because this is another path which won't work correctly right now.

03:50.660 --> 03:56.450
Right now when we load the added page, what we do is we load the page and we send back the data we need

03:56.540 --> 03:58.290
for displaying it of course.

03:58.310 --> 04:05.600
So that means we render the added product page with product data that includes our image url which

04:05.600 --> 04:12.740
is of course fine but ultimately, here we don't see the url and we don't want to change the url

04:12.800 --> 04:14.540
when editing the product, instead

04:14.540 --> 04:16.530
here we have a new file picker.

04:16.590 --> 04:20.090
Now you can of course configure this to work in any way you want

04:20.210 --> 04:26.870
but here I want to have a behavior where if we choose no file here, we simply keep the old one and we

04:26.870 --> 04:29.000
only overwrite it with a new file

04:29.030 --> 04:36.100
if I do choose a new one here. So to do that, I'll go to post edit product which is where we do handle the

04:36.110 --> 04:37.080
incoming data

04:37.220 --> 04:45.410
and of course here we again can retrieve request file and store that in image constant, just as I'm doing

04:45.410 --> 04:51.380
it here when we add the product, there I'm also retrieving this file extracted by multer.

04:51.380 --> 04:57.080
Multer will do the same for post edit product, so I can extract it there too, store it in an image

04:57.170 --> 05:03.030
and now this image is the thing I need to check. If it is undefined,

05:03.140 --> 05:05.560
then I know no file was saved

05:05.750 --> 05:11.360
and in this case this means I want to keep the old file, by the way the same will be true if I upload

05:11.360 --> 05:12.020
a PDF,

05:12.080 --> 05:13.490
I will simply keep the old image

05:13.490 --> 05:14.570
in that case.

05:15.080 --> 05:18.710
So we don't need to throw an error or return an error message,

05:18.740 --> 05:20.630
though you could of course do that if you want,

05:20.780 --> 05:23.360
if you always want to force a new image

05:23.360 --> 05:26.370
but here what I'll do is instead I'll

05:26.450 --> 05:33.170
first of all edit my validation page which I return and I'll not return the image url here,

05:33.170 --> 05:33.840
we don't need that

05:33.860 --> 05:39.770
just as in post add product, there we also don't need to return that because there is no image url we

05:39.770 --> 05:39.990
render

05:40.010 --> 05:42.640
in our edit page any more

05:42.650 --> 05:48.860
but if we make it past our validation here, when we store the product or when we update the product

05:48.920 --> 05:53.130
I should say, this image url does not exist anymore.

05:53.150 --> 05:57.410
Instead here I want to see if I really need to set that,

05:57.590 --> 06:03.770
so I'll check if image is there, if it's not undefined, in which case I'll set product image

06:03.770 --> 06:12.080
url to image path. So the same logic as I do have it in post add product, there

06:12.110 --> 06:19.800
I also set image url to image path but in post edit product, I do it conditionally and if the

06:19.800 --> 06:25.700
image is undefined, so if no new image was passed, I simply don't set it on the object which I then update

06:26.270 --> 06:27.710
and since I update it

06:27.920 --> 06:33.830
and if I don't set this, I will simply well not update this field and I can prove this to you.

06:34.010 --> 06:42.140
If I update this product here now, I get an invalid value because I forgot to adjust my validation

06:42.200 --> 06:44.930
middleware in the routes folder, for editing the product

06:44.930 --> 06:49.850
I'm still checking for image url to be a url but this field does not exist anymore so we should

06:49.850 --> 06:55.540
remove that from the edit product route validation logic and now if I submit this again,

06:55.700 --> 06:57.350
it just works.

06:57.590 --> 07:05.190
If I now choose a different image though and before I select this, let me quickly show you, if I update my database

07:05.190 --> 07:09.280
here, you'll see that image url did not change.

07:09.440 --> 07:14.720
If I select both too now which is the same image but a different file name and technically, a different

07:14.720 --> 07:17.700
file therefore, I update this

07:17.970 --> 07:22.480
and now if we go to that database and we refresh, we see it set both too.

07:22.620 --> 07:25.110
So now we got that editing option in place too

07:25.260 --> 07:30.300
and now we do handle the file uploads in the way we need to handle them.

07:30.420 --> 07:33.620
But of course handling file uploads is only one thing,

07:33.720 --> 07:35.570
we also want to be able to see that image,

07:35.610 --> 07:39.750
so to download it kind of and that is what I focus on in the next lectures.
