WEBVTT

00:02.210 --> 00:04.370
So we want to end up with optimized code

00:04.400 --> 00:07.880
and again this is mostly important for frontend projects.

00:08.060 --> 00:14.270
Npm is useful because we can install packages, we can manage this project with our package.json file

00:14.270 --> 00:18.240
and we can of course install packages that run in the browser too.

00:18.620 --> 00:24.410
It's our duty as a developer to ensure that we don't try to install expressjs into this project

00:24.620 --> 00:31.580
because we couldn't use any functionality from expressjs in the browser but we know as a frontend developer

00:31.760 --> 00:36.330
which packages we can use and we want to use, we find that out with research and so on

00:36.560 --> 00:41.600
and then we can install these packages and we can import them in our files with a slightly different

00:41.600 --> 00:46.300
syntax, that just happens to be primarily used frontend development

00:46.430 --> 00:47.990
import export syntax

00:47.990 --> 00:54.200
with that es module style because that is actually the style that is supported in modern browsers too

00:54.470 --> 01:01.700
and then this is done by npm. We install the packages and now we also want to start a script with npm.

01:02.180 --> 01:05.960
Now npm's work is over and nodejs takes over,

01:05.990 --> 01:07.500
the react scripts

01:07.520 --> 01:08.190
package here,

01:08.210 --> 01:09.330
let's look into that.

01:09.460 --> 01:14.990
And for that we can look into our node modules folder, run npm install in case you don't have that

01:15.050 --> 01:20.030
because that will install all dependencies that are listed in your package.json file and

01:20.030 --> 01:21.480
now in node modules,

01:21.650 --> 01:24.260
let's search for that react scripts

01:24.270 --> 01:31.230
package and you can see by the list that is very long, that all packages have a lot of dependencies which

01:31.230 --> 01:35.870
in turn have dependencies which is why we end up with a lot of packages being installed here.

01:36.240 --> 01:42.910
Now I'm in the react area though and there, I find react scripts. Now there we also have a package.json

01:42.910 --> 01:48.600
file because if you share a package you also need that, you need to add some extra information

01:48.600 --> 01:49.350
to the package.json

01:49.370 --> 01:55.380
file then and you can learn all about creating and sharing packages in the official npm docs if you're

01:55.380 --> 01:56.340
interested

01:56.730 --> 02:01.930
and there you will also find like the entry point that is executed which is in the bin folder, the react

02:01.970 --> 02:04.240
scripts js code here.

02:04.350 --> 02:06.230
This is in the end the code that will be executed

02:06.230 --> 02:08.190
and now here's something important,

02:08.250 --> 02:14.790
this code well in the end be executed by nodejs because the idea behind build workflows is of course

02:14.790 --> 02:19.150
that it runs on your computer before you deploy your optimized code,

02:19.230 --> 02:25.380
so before you upload your optimized code to some server. So this code will not run in the browser or

02:25.380 --> 02:32.630
anything like that, this code will run on your local machine and therefore it will be executed by nodejs.

02:32.700 --> 02:40.380
This is also the case because in the end this code will kickstart, other scripts will kickstart other code

02:40.770 --> 02:44.570
and it will kickstart code that will also work with your local file system.

02:44.640 --> 02:51.330
For example in the scripts folder, we find the build.js file and there, we will see what else it does

02:51.330 --> 02:54.450
and now this is actually a very complex build workflow,

02:54.510 --> 03:00.630
in the end this uses a tool called webpack which is used heavily in frontend development to orchestrate your

03:00.630 --> 03:06.690
build workflow and to compile your different files and unlock next gen features and make sure that you

03:06.690 --> 03:13.020
can handle the features correctly, again by using also some other tools like babel but that would

03:13.020 --> 03:14.490
lead too far here.

03:14.490 --> 03:20.580
The idea is here we are using nodejs, we can also tell that we are by the fact that we now have a different

03:20.640 --> 03:24.750
import export syntax and we are loading different packages here,

03:24.780 --> 03:30.020
we're running them and some of these packages will in the end also pick up our files,

03:30.060 --> 03:33.720
so our local source code we have written here in the source folder.

03:33.900 --> 03:38.040
We'll parse them and we'll transform the content in there, pull

03:38.100 --> 03:43.860
all of them together because we don't want to have multiple files in the end but only very few files

03:43.860 --> 03:45.440
with one main file,

03:45.450 --> 03:52.150
we'll pull all that code together and then also rewrite our code in a way that also runs in older browsers

03:52.320 --> 03:57.570
and this is all done by a couple of packages which are used behind the scenes here, which are installed

03:57.570 --> 04:03.650
by npm and then the code in that packages is executed through nodejs.

04:03.870 --> 04:08.790
And that was a lot of talking about that but I really want to get that into your heads because it's

04:08.790 --> 04:16.470
so important that you understand that you can use nodejs to execute any javascript code which uses

04:16.510 --> 04:22.530
nodejs features of course on your machine and that it's therefore also used to run utility scripts

04:22.650 --> 04:28.590
and you could also write your own utility script that like calculates your taxes but here, the utility

04:28.590 --> 04:34.860
scripts actually take our source code and then transform it as defined by the packages we use because

04:34.860 --> 04:38.900
we don't want to write all that build tooling code on our own.

04:39.090 --> 04:45.490
And that is another important area where you can use nodejs and if you want to dive into that area,

04:45.600 --> 04:50.520
actually a lot of the knowledge you learned in this course, like for example when it comes to work with

04:50.520 --> 04:56.310
files will be useful but you will also have to pick up new skills because you need to know all the ins

04:56.310 --> 05:02.470
and outs about working with files, managing large chunks of data efficiently and so on.

05:02.490 --> 05:05.200
You don't need to create a web servers or anything like that,

05:05.220 --> 05:10.400
you don't need to validate user input and that of course was the main topic of this course

05:10.410 --> 05:16.680
but this is a different area of nodejs that you can also dive into if you are interested and especially

05:16.830 --> 05:20.340
npm is something that is worth having a look at,

05:20.400 --> 05:26.370
having a look at the commands you got there so that you throughly understand what you can use npm for and

05:26.370 --> 05:32.370
if you want to learn how to distribute your own packages for example, the getting started guide there

05:32.550 --> 05:36.750
also teaches you that, how to publish and update packages and so on.

05:36.750 --> 05:40.140
So check these resources out if that's interesting to you,

05:40.140 --> 05:47.190
I found it important to mention that this also exists and is important area where nodejs and npm are

05:47.190 --> 05:48.180
being used.
