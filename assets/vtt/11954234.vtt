WEBVTT

00:02.080 --> 00:03.560
So we can manipulate cookies

00:03.580 --> 00:09.340
so storing sensitive data is not ideal but I mentioned that for example for tracking users,

00:09.460 --> 00:12.770
it's a popular instrument and why is that?

00:12.820 --> 00:20.020
Because as you can for example see with the cookies I have here, the cookies don't only have to relate

00:20.260 --> 00:22.260
to your page.

00:22.570 --> 00:29.770
A cookie can also be sent to another page and that is a common instrument in tracking where you have that

00:29.770 --> 00:35.310
so-called tracking pixel on pages which is simply an image url with no real image

00:35.620 --> 00:41.620
but that image can be located on let's say Google's servers and you have a cookie on that page which

00:41.620 --> 00:43.390
is also sent along with that

00:43.570 --> 00:48.850
and therefore Google can track on which page you are and how you are moving through the web even if

00:48.850 --> 00:54.790
you're not on their websites because some data is stored in your client and obviously you could delete

00:54.790 --> 00:55.720
it therefore

00:55.720 --> 00:58.430
which is why you can block such mechanisms too

00:58.570 --> 01:04.380
but it is stored there and it is sent with every request to Google, so they can track you without you

01:04.390 --> 01:05.680
being on their servers,

01:05.770 --> 01:11.050
so storing that information on their servers would not work but storing it on your computer will work

01:11.260 --> 01:14.630
because obviously that can be sent on every page you visit.

01:14.890 --> 01:20.060
So that is something where this could be interesting if you want to track your users,

01:20.170 --> 01:22.520
that is a very common thing to do

01:22.870 --> 01:24.850
and you can also configure cookies.

01:24.940 --> 01:30.010
We set a value but actually you can set more things than just the value, here

01:30.060 --> 01:34.500
I set my cookie by adding that key value pair.

01:34.510 --> 01:39.990
Now obviously we could add multiple cookies, multiple key value pairs,

01:40.000 --> 01:48.770
we can also add a semi-colon after the key value pair and for example set expires to some expiration date, this

01:48.770 --> 01:54.160
date would have to follow a certain format, the http date format,

01:54.320 --> 01:57.830
I'll link it attached to this video here.

01:57.830 --> 02:02.450
So you could set a certain date when this cookie will expire because remember if you don't set this,

02:02.450 --> 02:04.830
it will expire once you close your browser.

02:05.210 --> 02:09.540
Alternatively to expires, you can set max age written like this

02:09.710 --> 02:13.590
and this is a number in seconds, how long that cookie should stay around,

02:13.610 --> 02:16.060
so we could set this to 10 for example

02:16.400 --> 02:21.410
and now if I click that login button here, I got logged in

02:21.620 --> 02:26.210
and now you see the expiry date also changed here, the expiry date

02:26.330 --> 02:34.040
if I decrease that, the expiry date here basically is today and now it already is expired and if I reload

02:34.040 --> 02:36.630
that page, is logged in is therefore gone.

02:36.800 --> 02:38.300
So this is something we can do

02:39.190 --> 02:45.130
and this is of course interesting if you want to control for example how long you want to track a user

02:45.250 --> 02:49.250
or we will actually use that together with authentication later,

02:49.300 --> 02:55.530
you could use this to also control how long an authenticated session stays active for a user,

02:55.600 --> 03:01.690
you might know that from your online bank where you timeout after a certain duration. You can also

03:01.690 --> 03:04.060
add a domain to which the cookies should be sent

03:04.100 --> 03:08.350
and here we again are on that tracking thing again.

03:08.660 --> 03:12.560
You can add secure just like this without an equal sign, just secure,

03:12.560 --> 03:15.950
this means this cookie will only be set if the page is served via

03:15.980 --> 03:17.240
https.

03:17.240 --> 03:23.660
Now I can't demonstrate this here because our local development server is not using https but we will eventually

03:23.660 --> 03:27.230
use https later in the course where I will show you how to set this up,

03:27.290 --> 03:34.040
so now you can already see however that I get an error if I try to reload login because I try to extract

03:34.040 --> 03:36.110
the value which is not there.

03:36.450 --> 03:42.710
So for now let's simply comment this out and set this always to false so that I can just show you how

03:42.710 --> 03:44.140
this cookie is now not set,

03:44.150 --> 03:49.880
if I reload and I click here, you don't see the cookie here because I added secure and it would only

03:49.880 --> 03:52.370
be set if we are serving the page

03:52.370 --> 03:53.900
via https

03:54.200 --> 03:56.700
and you can also set this to http only.

03:56.780 --> 04:01.280
Now if I do that and I go back to login and I click here,

04:01.280 --> 04:05.540
it is set but now it has this checkmark here in the http column

04:05.540 --> 04:11.310
and that means that now we can't access the cookie value through client side javascript,

04:11.330 --> 04:16.880
so in the scripts running in the browser. This can be an important security mechanism because it protects

04:16.880 --> 04:19.780
us against cross-site scripting attacks now

04:19.940 --> 04:25.760
because now your client side javascript where someone could have injected malicious code can't

04:25.760 --> 04:31.610
read your cookie values and that will be important later with authentication where a cookie will not

04:31.710 --> 04:38.820
store the sensitive information but an important part of authenticating the user.

04:38.840 --> 04:45.020
So this can be an extra security layer because now the cookie will still be attached to every request

04:45.080 --> 04:46.470
that is sent to the server

04:46.610 --> 04:51.270
but you can't read the cookie value from inside the browser javascript code.

04:51.320 --> 04:56.100
Obviously as you can tell, as a user in the developer tools, you can still read it

04:56.150 --> 05:01.730
but then again it's your own cookie and you will not store information like hey I'm logged in there

05:01.790 --> 05:06.430
because that would be easy to manipulate and you can't protect against that.

05:06.440 --> 05:09.310
These are the key values you can set here

05:09.470 --> 05:11.600
and this gives you a lot of flexibility.

05:11.600 --> 05:18.620
That being said, often you will not directly set your cookies because you rather use some packages like

05:18.620 --> 05:26.390
for example for authentication that will manage setting the cookie for you. And that is something which

05:26.390 --> 05:33.560
I'll dive into in the next lectures where we dive into sessions, what sessions are, how they can help

05:33.560 --> 05:40.880
us with storing sensitive information across requests and how cookies still are important when using

05:40.880 --> 05:41.510
sessions.
