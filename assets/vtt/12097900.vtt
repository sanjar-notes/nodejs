WEBVTT

00:02.230 --> 00:04.630
To ensure that we can also delete posts,

00:04.720 --> 00:09.640
let's start in our node rest project and add a new route.

00:09.700 --> 00:13.260
This will be a delete route using the delete http method,

00:13.450 --> 00:18.130
we register such a route by using router.delete.

00:18.170 --> 00:26.090
Now here, the path will be /post/:postid, for delete routes you can't send a body

00:26.210 --> 00:30.980
but as with all routes, you can of course encode data into the urls

00:31.010 --> 00:32.350
and that is what I'm doing here.

00:33.760 --> 00:35.410
Now the route is one thing,

00:35.410 --> 00:38.320
obviously we also need a controller action,

00:38.400 --> 00:44.410
so let's go back to our feed controller and before clear image, I'll export my new action which I'll

00:44.410 --> 00:52.130
add which will be my delete action. So I'll name it delete post here, it will be my standard middleware with

00:52.130 --> 00:55.050
these three arguments being passed to the function

00:55.330 --> 01:02.080
and in there, I first of all extract the post ID from my request params as we did it multiple times

01:02.080 --> 01:03.540
throughout the course.

01:03.970 --> 01:11.740
Then we can use the post model to find a post by ID and that will be my post with this ID of course.

01:12.780 --> 01:15.450
Now why would I find it by ID first?

01:15.480 --> 01:19.920
I can of course also use post, find by id and remove.

01:20.310 --> 01:26.940
Well I will use this eventually but later once we edit a user, I want to verify whether that user created

01:26.940 --> 01:29.010
the post before I delete it,

01:29.030 --> 01:36.950
so I'll first of all find the post with success or not and if I have an error, I'll use that old error

01:36.950 --> 01:40.350
handling code I had before and in the then block,

01:40.550 --> 01:47.740
I'll have my post where I will check whether the creator is the currently logged in user, so check

01:47.810 --> 01:49.140
logged in user,

01:49.150 --> 01:53.390
this is something I can't do yet because we have no logged in user obviously.

01:53.420 --> 01:55.660
For now there is one thing I can do though,

01:55.790 --> 02:01.790
I can use clear image to access the post I retrieved and delete the image for the image url that

02:01.790 --> 02:03.100
is stored there.

02:03.110 --> 02:08.210
There is one other thing I actually should do and that is I should check whether that post exists. So

02:08.210 --> 02:12.740
I can copy that logic from up there where I see whether post is undefined

02:12.830 --> 02:15.630
and if it is undefined, I throw an error.

02:16.100 --> 02:24.530
Now if that succeeded, I delete the post image and then I return post find by ID and remove because

02:24.530 --> 02:26.100
now I will remove it

02:26.220 --> 02:28.400
and here, I pass my posts ID again,

02:29.180 --> 02:33.280
I can add one more then block with the result of that operation

02:33.440 --> 02:39.650
and in here, I'll know whether that succeeded and most importantly, I'll return with a status code

02:39.650 --> 02:48.250
of 200 which means yes we were successful and a json data package where I will just say deleted post

02:48.360 --> 02:49.160
in a message,

02:49.160 --> 02:52.170
of course you could send any data you want.

02:52.360 --> 02:58.900
So with that, my delete post action is configured here in the controller, back in my route,

02:58.930 --> 03:04.260
I can now use my feed controller delete post and assign it to that delete route

03:04.510 --> 03:09.640
and now we just need to work on the frontend and hook up this route.

03:09.700 --> 03:11.240
So there in the feed.js

03:11.320 --> 03:14.040
file which we worked in a lot already,

03:14.230 --> 03:17.440
you'll find the delete post handler and there,

03:17.440 --> 03:26.570
you simply need to update that url you see in there. So let's replace url with http localhost

03:26.800 --> 03:36.540
8080 /feed/post/ and then post ID which is an argument we'll get in this function.

03:37.570 --> 03:40.770
Now important, we want to send a delete request

03:40.900 --> 03:48.580
so we need to pass a second argument to fetch here and set the method to delete and that is it for now,

03:48.580 --> 03:50.440
this should now send such a request

03:50.440 --> 03:52.210
when we click the delete button.

03:52.360 --> 03:56.280
So make sure you save this and you're back in the code and thereafter,

03:56.320 --> 03:59.630
let's go back to the feed and let's click delete,

03:59.640 --> 04:06.210
maybe on the first item. Now after reloading, it's gone here and the duck image was deleted as well.

04:07.250 --> 04:10.430
If I reload this app, we also should not fetch it again

04:10.460 --> 04:12.390
so it really seems to be gone.

04:12.500 --> 04:14.600
So now deleting also works.
