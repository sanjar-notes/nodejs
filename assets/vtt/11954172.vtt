WEBVTT

00:02.290 --> 00:07.070
I want to show you something which we don't need here but which is really neat and which you should

00:07.070 --> 00:08.170
be aware of.

00:08.180 --> 00:11.880
Keep in mind that in our product model, we're storing a user ID.

00:11.900 --> 00:17.330
Now let's say when we fetch all products as we're doing it in the admin controller in get products

00:17.330 --> 00:23.660
with find, let's say we actually want to get all the user data for the related user and not just the

00:23.710 --> 00:31.270
ID because right now, if my console log my products here in find in get products in the admin

00:31.280 --> 00:40.830
controller and I reload my admin products page here, we see in the console, this is what gets logged, an

00:40.920 --> 00:47.400
array of products and that array of course only or the objects in there only have the user ID.

00:47.430 --> 00:51.360
Now this is of course not what we need in all cases,

00:51.360 --> 00:54.640
sometimes we want to fetch the related user data too,

00:55.140 --> 01:00.690
now we could do that manually. Here inside the then where we got the products, we could loop through the

01:00.690 --> 01:07.950
products and then write queries where we get the users with find by ID with the IDs that we have

01:07.950 --> 01:08.870
received

01:09.030 --> 01:10.820
but this is a bit cumbersome.

01:10.950 --> 01:15.190
Mongoose has a useful utility method which we can add after find

01:15.320 --> 01:22.170
and that is populate. Populate allows you to tell mongoose to populate a certain field with all the detail

01:22.170 --> 01:24.610
information and not just the ID,

01:24.900 --> 01:31.620
so here I could add populate and then you first of all describe the path which you want to populate,

01:31.620 --> 01:37.360
in my case thats just the user id field but you could also point at nested paths if you had these

01:37.530 --> 01:39.210
but here it's just the user ID

01:39.870 --> 01:50.730
and then that is it for now. If I now save this and I reload this page, you'll see actually the user ID

01:50.730 --> 01:53.490
is now not just the ID but the full user object

01:53.530 --> 01:59.880
and that can of course be really helpful for fetching data because this gives you all the data in one

01:59.880 --> 02:00.450
step

02:00.450 --> 02:03.220
instead of writing nested queries on your own.

02:03.600 --> 02:08.250
By the way, you can also select which kind of data should be received and you can not just do that in

02:08.250 --> 02:13.580
populate but also in find. After find, you can call select

02:13.740 --> 02:18.690
and this allows you to define which fields you want to select or unselect, so which fields should actually

02:18.690 --> 02:21.140
be retrieved from the database and

02:21.190 --> 02:26.130
there you pass a string where you could say for a product, maybe you want to get the title and the price

02:26.520 --> 02:30.010
but you don't need description and anything else.

02:30.120 --> 02:36.720
So you could then add title and price like this and you could even exclude something like the ID by

02:36.720 --> 02:38.620
adding a minus in front of it

02:39.360 --> 02:43.660
and the same can be done on populate by passing a second argument,

02:43.680 --> 02:48.080
this would be a string where you say ok I want to get the name and that's it,

02:49.170 --> 02:55.320
the ID will by the way always be retrieved unless you explicitly exclude it. If you do that and you now

02:55.320 --> 02:57.030
reload this page, 

02:57.030 --> 03:00.890
you already see some data as missing here because we did not retrieve it

03:01.110 --> 03:03.680
and you see it in the data that gets logged here too,

03:03.930 --> 03:10.370
we only retrive the title and the price, we explicitly excluded the ID. For the user,

03:10.530 --> 03:13.010
we didn't explicitly exclude the ID

03:13.050 --> 03:16.570
so we got that and we got the name which we defined here.

03:16.800 --> 03:21.900
So that's just a little side note about data fetching with mongoose and something I wanted to make

03:21.900 --> 03:22.760
you aware of.

03:22.890 --> 03:24.150
We don't need that here,

03:24.150 --> 03:28.690
it actually breaks our application but it's still something that's nice to know.

03:28.860 --> 03:34.740
So I will comment this out and I just want you to keep in mind that you can automatically populate related

03:34.740 --> 03:41.190
fields and fetch the related data and that you can also control which fields are returned, both for

03:41.330 --> 03:42.470
the main document

03:42.510 --> 03:45.620
and also for populated documents. With that,

03:45.660 --> 03:48.140
let's go back to the state in which we need the app in

03:48.240 --> 03:51.330
and let's instead work on things like the cart and orders.
