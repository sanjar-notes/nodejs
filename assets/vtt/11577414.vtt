WEBVTT

00:02.090 --> 00:07.420
Now we had a very close look at pug as a templating engine but it's only one of three options.

00:07.470 --> 00:13.290
Now this was a quite extensive look because I also explained what templating engines are and what their

00:13.290 --> 00:14.640
core logic is,

00:14.700 --> 00:19.240
it'll be a bit faster for the two other languages therefore or the other two solutions

00:19.420 --> 00:26.300
so let's continue with handlebars which does not follow such a minimal html approach but uses normal html

00:26.350 --> 00:29.040
mixed with some templating logic.

00:29.430 --> 00:32.370
So let's use handlebars and for this,

00:32.490 --> 00:33.460
let's go to app.js

00:33.470 --> 00:34.260
.

00:34.290 --> 00:38.100
and in there, we now need to change our view engine.

00:38.100 --> 00:45.460
Now we did install express handlebars but this actually is a package that is not auto-installed by express,

00:45.540 --> 00:52.340
so instead we manually have to tell express that there is such an express handlebars engine available

00:52.660 --> 00:58.560
and for this, we first of all import it and to find out whether you do need to do this for your favorite

00:58.560 --> 01:04.680
engine or not, you'll simply check their docs because there, this is mentioned. So for express handlebars,

01:04.680 --> 01:05.870
we add express.hbs,

01:05.950 --> 01:10.650
the name is up to you by requiring express handlebars.

01:10.760 --> 01:12.170
So now this is imported

01:12.180 --> 01:16.320
and now we have to tell express that this exists, that this is an engine

01:16.350 --> 01:17.360
it can use.

01:17.460 --> 01:24.570
We do this by calling app and now there is an engine method and this registers a new templating engine

01:24.660 --> 01:31.610
in case we're using one which is not built-in, pug was built-in kind of, express handlebars is not.

01:32.070 --> 01:38.530
So to register this, we have to define a name for our engine and you can use any name you want though

01:38.550 --> 01:44.190
of course you should try to not clash with the built-in engines to which you also find a link at the

01:44.190 --> 01:49.920
end of this module by the way. Handlebars is a name we can use for example,

01:49.920 --> 01:53.900
so let's give this engine this name and now we just have to tell

01:53.970 --> 01:55.950
express this is the name,

01:55.980 --> 01:58.700
now what is the actual tool I should use?

01:58.890 --> 02:00.280
And that is express.hbs,

02:00.780 --> 02:07.440
so that object we just imported, that just turns out to be a function we can call and we have to call

02:07.800 --> 02:10.970
that basically initialises this engine you could say,

02:11.090 --> 02:17.730
so this function returns the initialised view engine which we can assign to engine here.

02:18.240 --> 02:24.810
So express handlebars gives us this engine and now we have to switch the view engine here to handlebars

02:24.810 --> 02:28.920
and obviously this name here has to match the name you set up here.

02:28.950 --> 02:30.900
With this you're good to go,

02:30.900 --> 02:34.330
now you're ready to use handlebars in your code.

02:34.530 --> 02:36.260
Now how do you use it?

02:36.430 --> 02:38.850
Now you do create new files for this

02:38.850 --> 02:45.860
and let's start with the 404.html page. I'll create a 404.handlebars page,

02:45.870 --> 02:48.260
now we have to name it handlebars here

02:48.310 --> 02:53.830
as this is the default by express handlebars and we defined this as an engine name here.

02:54.040 --> 02:55.660
You can also change the name

02:55.660 --> 03:05.820
for example to hbs, like this and now you're able to use .hbs as an extension, so this is how that

03:05.820 --> 03:09.630
works and how you register handlebars as the view engine.

03:09.690 --> 03:15.870
Now with that registered, let's use it and let's take the 404.html file and copy its content into

03:15.870 --> 03:23.110
the 404.hbs file because handlebars uses normal html with some custom syntax

03:23.160 --> 03:27.930
therefore there is no minimal html version as it was with pug.

03:27.930 --> 03:33.810
Now in this file let's remove that active class on that link in the navigation because that's still

03:33.810 --> 03:35.880
wrong, in that file

03:35.910 --> 03:38.300
I now want to change that here,

03:38.400 --> 03:43.220
I want to output that title dynamically so that you can see how that works with handlebars.

03:43.230 --> 03:50.310
Keep in mind that in app.js where we load that 404 page, we are passing in this data and the way

03:50.310 --> 03:54.550
you pass data into templates doesn't change with the engine,

03:54.570 --> 04:00.720
this is always the same type of flow. You pass in an object with key value pairs where the keys and

04:00.720 --> 04:07.290
therefore indirectly also the values are available in the template, just the way you use it in a template

04:07.500 --> 04:09.710
differs from engine to engine.

04:09.890 --> 04:16.920
And in handlebars, we output this value here by adding double curly braces, opening and closing and between

04:16.920 --> 04:22.660
these we add page title, so that key name for which we want to output the value.

04:22.810 --> 04:30.240
And with that if we save that and we go back and reload some page which does not exist, we should still

04:30.240 --> 04:36.360
get page not found, this time handled through handlebars and just as before with pug if we inspect the

04:36.360 --> 04:37.090
source,

04:37.170 --> 04:44.160
we of course see no handlebars code, the double curly braces was simply replaced with the content that should

04:44.160 --> 04:45.920
be rendered.

04:45.960 --> 04:47.840
So this is how we use handlebars

04:48.020 --> 04:53.580
and now if you're feeling confident with the help of the official docs where you learn how to use

04:53.640 --> 04:55.560
if statements and loops,

04:55.560 --> 05:01.920
feel free to go ahead and also replace the add product pages with the handlebar equivalents

05:02.430 --> 05:05.840
otherwise we'll of course do that together in the next lecture.
