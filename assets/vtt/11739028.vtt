WEBVTT

00:02.300 --> 00:09.170
So it's now time to introduce more models and I will introduce a brand new model before I start working

00:09.170 --> 00:10.440
on the cart again,

00:10.580 --> 00:13.030
that new model will be my user model but

00:13.070 --> 00:20.240
for now we have no real authentication process, so we'll only work with one dummy user who doesn't really

00:20.240 --> 00:21.480
have to log in,

00:21.530 --> 00:27.290
authentication will follow later in the course but I still want to show you how you could have a user

00:27.500 --> 00:33.200
who did create a product and who therefore is connected to that product and at the same time, a user

00:33.200 --> 00:37.030
should own a cart and that cart will hold multiple products

00:37.160 --> 00:40.600
and this is how we can then overall connect everything.

00:40.610 --> 00:46.970
So I'll add a user.js file in the models folder and in there first of all, let's define a user model.

00:47.170 --> 00:49.790
And this is also something you can try on your own,

00:49.790 --> 00:55.190
try to define a sequelize model with a user that has an ID,

00:55.220 --> 01:00.100
the ID should have the same function as it has for the product model

01:00.200 --> 01:04.170
and let's say for now a user also has a name and an email.

01:04.490 --> 01:09.500
Definitely try this on your own, pause the video at this point, we'll thereafter define the user model

01:09.500 --> 01:10.550
together.

01:13.140 --> 01:14.350
Were you successful?

01:14.670 --> 01:16.710
Let's define the user model

01:16.830 --> 01:25.370
by first of all requiring the sequelize constructor or class and then also with lowercase s, let's

01:25.390 --> 01:34.200
import our own sequelize object which holds the connections on from the util folder and there, the database

01:34.200 --> 01:35.100
file.

01:35.610 --> 01:43.320
We can then define a user and store the user in a user constant by calling sequelize define, I'll name the

01:43.320 --> 01:45.130
model user like this

01:45.360 --> 01:48.860
and then as an object you define the structure of the user.

01:49.050 --> 01:54.540
I want to have an ID for my user and the type here will be sequelize

01:57.240 --> 01:58.960
integer,

01:59.130 --> 02:07.650
it should auto-incrementing, I don't allow null values and this will be my primary key.

02:08.790 --> 02:15.540
Besides that ID, I'll also have a name and here I'll use a very short definition where I say that the name

02:15.810 --> 02:21.940
will be a string and the email here will also be a string.

02:23.290 --> 02:24.410
So this is my user,

02:24.490 --> 02:31.110
now we need to export this model with module exports user like that

02:31.390 --> 02:35.050
and now with that being exported, we can start using it.

02:35.080 --> 02:40.650
And one thing I want to start using it for is that I want to create an association.

02:40.780 --> 02:46.390
Now let's have a look at how we do that and what an association actually is in the next lecture.
