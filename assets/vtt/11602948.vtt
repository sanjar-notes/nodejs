WEBVTT

00:02.250 --> 00:08.190
In our project as I mentioned in the previous lectures, we already got some views and we'll leave that

00:08.190 --> 00:09.930
exactly in the state it is.

00:09.930 --> 00:14.430
We've got that views folder with all our templates inside of them.

00:14.430 --> 00:22.140
Now what's missing is a folder for the controllers and the controllers themselves and for the models.

00:22.620 --> 00:30.030
Right now that is all mixed into our route files or into our route functions here, the way we route won't

00:30.030 --> 00:30.710
change,

00:30.720 --> 00:36.960
we use the router and we have such a middleware function but actually, the logic that is executed here

00:37.200 --> 00:43.230
that is the typical controller logic, we're interacting with our data even though that's just one line

00:43.230 --> 00:44.330
here but still

00:44.610 --> 00:50.510
and we're then returning a view and that's exactly this in-between logic that makes up a controller.

00:50.760 --> 00:56.840
So therefore you could of course say well we already got controllers, these two files hold our controller

00:56.850 --> 00:58.910
logic and you would be right

00:59.070 --> 01:05.070
but especially as our application grows if you put everything into your route files, this can quickly

01:05.070 --> 01:11.580
become a very big file and therefore separating this into separate files can be a good idea because

01:11.580 --> 01:16.320
you can then quickly see which routes you have and if you want to see the code which executes per route,

01:16.530 --> 01:20.690
you simply go into the respective controller file and function.

01:21.060 --> 01:24.590
So therefore let's create a new folder here and let's name it

01:24.660 --> 01:26.820
controllers, like this.

01:27.010 --> 01:33.270
Now in that controllers folder, I will create controllers for the functionalities I have.

01:33.270 --> 01:41.430
Now you can have a one to one mapping between your route file names and route file number and your controller

01:41.430 --> 01:44.400
files but you can also split this differently,

01:44.610 --> 01:50.060
maybe you want to group your routes by prefix, like here,

01:50.070 --> 01:52.200
these are all our admin routes

01:52.200 --> 01:56.760
but the thing you execute there might fit two different controllers.

01:56.760 --> 02:03.120
Let's say you have admin routes which allow you to change your admin user profile and products, you might

02:03.120 --> 02:09.210
have all these routes in the admin.js file in the routes folder but you do have two different controllers,

02:09.510 --> 02:14.330
the users controller or admin controller and the product controller.

02:14.340 --> 02:18.050
So this is up to you and I will indeed create different files here,

02:18.120 --> 02:27.150
I'll have my product.js file or products.js for my product related logic and I will put all

02:27.150 --> 02:28.650
the product logic in there,

02:28.830 --> 02:36.240
so even my shop route here where I also work with products, I'll put that logic in here because all logic

02:36.270 --> 02:39.830
I have in my app thus far and this will change later

02:39.960 --> 02:46.110
but all logic thus far is related to products and therefore, I want to have it in a controller that only

02:46.110 --> 02:53.430
works with product logic. And if I later add some user logic, that will go into a user controller and maybe

02:53.430 --> 02:59.120
we even split the product controller into a user product and an admin product controller

02:59.220 --> 03:01.490
but for now, we'll leave it like this.

03:01.500 --> 03:08.890
So in that products.js file in the controllers folder, I now want to add that code here basically.

03:08.890 --> 03:11.310
So this middleware function we're executing here,

03:11.430 --> 03:16.380
this code for add product right where I just render this add product route,

03:16.380 --> 03:18.470
this can now go into there and

03:18.620 --> 03:19.980
the question just is how 

03:19.980 --> 03:21.680
because this would be incorrect.

03:22.110 --> 03:28.670
Well in the end we want to link to this function and we want to link there from inside our route,

03:28.710 --> 03:32.810
so here we basically want to add a link to this controller function here.

03:32.880 --> 03:34.950
So therefore what do we need to do?

03:35.370 --> 03:42.090
We need to export this function in the product controller file and we can do this and we'll have multiple

03:42.090 --> 03:44.570
exports by using exports

03:44.670 --> 03:46.800
and then any name of our choice.

03:46.800 --> 03:52.470
Remember with this syntax, we can have multiple exports in one file easily.

03:52.530 --> 04:02.210
So here I will now export my get add product function here and the name is up to you but I name it like

04:02.240 --> 04:04.350
this because in the end this is what we do,

04:04.350 --> 04:06.720
we get the add product page.

04:06.720 --> 04:12.300
Of course you could also name it get add product page here but I will just describe what this in the end

04:12.300 --> 04:16.850
helps me do and it helps me get everything I need to add a product

04:16.890 --> 04:19.580
but you can name this to your likings.

04:19.690 --> 04:25.980
So now I get this product and I still have my function which receives the request object even though

04:25.980 --> 04:33.350
we're not using it here but we still get that, the response object which we are using and next because

04:33.370 --> 04:40.660
this still is a normal middleware function expressjs understands because I will now import get add

04:40.710 --> 04:45.750
product into my admin.js file and still using here on my route,

04:45.750 --> 04:46.800
this will not change,

04:46.860 --> 04:51.020
I just split my code differently. So with that, let's

04:51.070 --> 04:52.150
add an import,

04:52.330 --> 04:54.290
by the way we can get rid of this root

04:54.310 --> 04:57.390
dir import because I'm not using that utility anymore,

04:57.400 --> 05:01.410
you can also therefore delete the entire file or even folder

05:01.420 --> 05:03.170
but that's just a side note.

05:03.370 --> 05:09.160
So let's now import our controller and there, I will import products

05:09.160 --> 05:13.370
controller by requiring

05:17.050 --> 05:20.080
my controllers folder and there, the products file.

05:20.110 --> 05:25.560
So since I'm doing this from inside my admin.js file here, I need to go up one level until I'm in

05:25.560 --> 05:31.390
the root project folder and then I go into the controllers folder and then I pick that products file.

05:31.690 --> 05:37.990
So now products controller bundles all the exported functions and right now, this is only one of course

05:38.140 --> 05:45.120
but it will become more. So back in admin.js here on this route where I want to use that, I can now simply

05:45.120 --> 05:52.550
say products controller.get add product. And we don't execute this function

05:52.630 --> 05:55.200
so please don't add these parentheses,

05:55.270 --> 05:58.170
instead we just pass a reference to this function.

05:58.240 --> 06:04.360
So we're just saying or we're just telling express, the express router that it should take this function

06:04.360 --> 06:05.310
and store it

06:05.500 --> 06:10.480
and whenever a request reaches this route, it should go ahead and execute it.

06:10.480 --> 06:13.910
Now we can repeat this for adding a new product,

06:13.910 --> 06:20.380
I'll cut this code and go to my product controller and simply add a brand new export and I'll name this

06:20.560 --> 06:23.660
post add product because this is what I do here,

06:23.680 --> 06:30.200
I post a new product I add the product therefore through a post route and this will be the function

06:30.220 --> 06:31.900
I just copied.

06:31.960 --> 06:37.330
Now the problem here is that we refer to products which is of course something we don't have in that

06:37.360 --> 06:43.040
file yet, so I should also go into admin.js and take my products array which I have

06:43.080 --> 06:48.620
there, cut it out of there and then in products.js in the controllers file,

06:48.640 --> 06:54.290
I will add this array and I'll change this later too but for now, let's simply add it here,

06:54.490 --> 06:57.640
products should be our empty array.

06:57.830 --> 07:06.110
Now back in admin.js, we can now also use our new products controller function we just added, post add

07:06.110 --> 07:10.340
product in exactly the same way we use get add product

07:10.520 --> 07:13.600
and of course we can now tweak our exports here,

07:13.640 --> 07:20.430
we no longer need to export products in our admin.js file because we no longer have that array in here.

07:20.480 --> 07:26.260
So instead I'll just export my router again as I'm doing it in the shop.js file.

07:26.330 --> 07:30.340
So with module exports equal to router, that is what we have here too

07:30.500 --> 07:37.490
and this just means that we now have to adjust the app.js file where we are importing this, there I'm importing

07:37.580 --> 07:39.130
admin data, now

07:39.140 --> 07:44.600
a more fitting name is admin routes again because now we just export routes and nothing else

07:44.600 --> 07:51.560
and of course that also means that here where we use that, we just use admin routes because we change

07:51.570 --> 07:54.010
that export. Ok good,

07:54.050 --> 07:56.090
so we get this set up,

07:56.090 --> 07:59.200
now let's also do the same for shop.js.

07:59.400 --> 08:02.750
There I also get a function which is related to products,

08:02.750 --> 08:03.930
so let's cut it

08:04.160 --> 08:05.850
and in products.js here,

08:06.110 --> 08:14.830
I will add a new export, exports get products like this.

08:14.970 --> 08:22.780
If I do this, I have my function here which will in the end return or render that page with my products

08:22.840 --> 08:29.240
and one important note, obviously products is now an array which is available in that file,

08:29.260 --> 08:32.700
so products here doesn't have to be extracted from anywhere

08:32.710 --> 08:35.530
and again we will change this.

08:35.630 --> 08:37.640
So this is now my finished products

08:37.640 --> 08:39.700
controller in shop.js,

08:39.800 --> 08:44.680
we can now remove these two imports because we don't need them anymore

08:44.900 --> 08:53.510
instead I import my products controller by requiring it from the same path as in the admin.js file

08:53.990 --> 09:01.470
and here for this get route, I will simply say products controller get products. With all that,

09:01.470 --> 09:04.170
let's save this and see if it still works.

09:04.170 --> 09:07.620
If I reload this page, this all seems to work

09:07.860 --> 09:11.420
and if I add my first book here, this also works.

09:11.490 --> 09:15.660
So it's still working as before but now we're using a controller.

09:15.690 --> 09:18.520
Now let's see what else we can do here.
