WEBVTT

00:02.060 --> 00:08.810
So we want to get started with Node.js and for that we first of all need to install it.

00:09.050 --> 00:16.960
To do this, visit Node.js dot org and then there simply download this latest version.

00:16.970 --> 00:19.570
In my case, that's 14.11.

00:19.580 --> 00:21.140
It will change over time.

00:21.140 --> 00:24.210
When you're watching this, you might see a higher version here.

00:24.230 --> 00:30.290
It is important to note that these versions will change frequently, but they don't really bring many

00:30.290 --> 00:31.320
new changes.

00:31.340 --> 00:36.680
It's most of the time just behind the scenes optimizations and bug fixes.

00:37.280 --> 00:42.980
I will keep this course updated though, as I have in the past, but with that, let's install this

00:42.980 --> 00:45.380
latest version for this.

00:45.470 --> 00:50.980
Simply download it onto your system and I'm doing this on a mac here on Windows.

00:50.990 --> 00:52.490
It's exactly the same.

00:52.490 --> 00:57.650
You can download the installer here and then you simply walk through that installer.

00:58.650 --> 01:02.280
And again here that is the Mac installer on Windows.

01:02.280 --> 01:09.000
You have a similar installer and you simply walk through all the steps you have there, leaving all

01:09.000 --> 01:11.880
the default settings which are set up for you.

01:11.880 --> 01:14.070
You don't need to tweak anything there.

01:16.710 --> 01:21.100
Ultimately this will then install Node.js on your system.

01:21.120 --> 01:28.560
This JavaScript runtime, this course is all about and we need Node.js to be installed in order to execute

01:28.560 --> 01:34.170
JavaScript code with Node.js, which of course is our goal in this course.

01:35.030 --> 01:37.880
So once this is installed, we can use it.

01:37.910 --> 01:45.350
And the first and quickest way of getting started with it and of using it is that you open up your default

01:45.350 --> 01:48.950
system, terminal or command prompt on windows.

01:49.400 --> 01:51.770
So again, here I am on Mac OS.

01:51.770 --> 01:55.160
So I'm using the built in terminal on windows.

01:55.160 --> 02:01.460
You would simply open up the command prompt or PowerShell and you can check whether Node has been installed

02:01.460 --> 02:08.270
successfully by running Node Dash V to check the version of Node JS that was installed.

02:08.390 --> 02:12.800
And there you should see the version you just downloaded and installed.

02:12.980 --> 02:18.320
And with that, if that succeeds, if you don't get an error, we know that it worked.

02:18.680 --> 02:25.520
Now we can use Node and one way of using it is to enter an interactive mode.

02:25.520 --> 02:30.980
Node JS offers you the so called rappel TA, which I will come back later.

02:31.430 --> 02:36.590
You enter this interactive mode by simply executing Node as a command.

02:36.620 --> 02:44.990
Now this enters a new mode in your terminal or command prompt, and here you can run certain node commands.

02:45.230 --> 02:51.860
You can use it as a basic calculator to do basic math there, and you could do more than that.

02:51.860 --> 02:54.650
You could run some JavaScript code in there.

02:54.770 --> 03:00.830
Again, I will come back to this rappel later, but actually this interactive mode might be nice to

03:00.830 --> 03:02.360
play around with Node.

03:02.360 --> 03:07.250
You're not going to use it to write real Node programs for that.

03:07.250 --> 03:14.420
Instead, you will use a code editor and store your code in files and then execute these files with

03:14.420 --> 03:14.880
Node.

03:14.900 --> 03:16.010
So let's do that.

03:16.010 --> 03:26.330
Now for that, let's quit this interactive mode by pressing control C twice or control D or typing exit

03:26.330 --> 03:27.340
as you see here.

03:27.350 --> 03:34.280
And once you closed that mode, let's actually create a new project, a new folder in which we write

03:34.280 --> 03:35.690
our first code.

03:36.470 --> 03:38.210
And I did just that.

03:38.210 --> 03:46.400
I created a new folder somewhere on my system and I opened it with my favorite code editor, Visual

03:46.400 --> 03:52.600
Studio code, which you can find if you simply Google for VZ code or you visit code dot Visual Studio

03:52.610 --> 03:53.360
dot com.

03:53.900 --> 04:00.560
Visual Studio code is a free code editor, which is great for web development and it's available for

04:00.560 --> 04:05.300
Mac OS, Windows and Linux so you can use it on any operating system.

04:05.300 --> 04:11.090
Simply download it from code dot Visual Studio dot com and then walk through the installer that gives

04:11.090 --> 04:14.360
you to install this editor on your system.

04:14.750 --> 04:19.850
As a side note, you can use any IDE and code editor of your choice.

04:19.850 --> 04:25.970
Of course, Visual Studio code is just what I will be using throughout this course and what I recommend

04:25.970 --> 04:26.810
that you use.

04:26.810 --> 04:28.850
If you don't have another favorite editor.

04:28.850 --> 04:35.330
Of course, with it installed you can also open your project folder, which at the moment should be

04:35.330 --> 04:42.440
empty with this tool simply by going to file and then open and then pick the folder in which you want

04:42.440 --> 04:43.910
to write your code files.

04:44.770 --> 04:51.370
Now, if you want to make sure that you got the same look and feel as I do, you can go to view appearance

04:51.370 --> 04:58.240
and there you can control whether or not you see the sidebar, this activity bar on the left and so

04:58.240 --> 04:58.540
on.

04:58.540 --> 05:00.670
So that's how you can customize this.

05:01.000 --> 05:09.220
And in addition, under preferences color theme, I am using the dark plus theme and you can switch

05:09.220 --> 05:11.740
to this as well if you want to have the same colors.

05:12.730 --> 05:16.390
Last but not least, under view extensions.

05:16.660 --> 05:23.830
You can search for the material icon theme, which is 100% optional, but which will give you a specific

05:23.830 --> 05:27.610
icon look, which you will see for all the discourse in my project.

05:27.610 --> 05:29.950
So that's why I will enable this icon theme here.

05:29.950 --> 05:32.920
For me, using it is optional though.

05:33.220 --> 05:38.650
And with all of that we got the code editor set up, which we are going to use throughout this course

05:38.650 --> 05:40.420
or which I am going to use.

05:40.420 --> 05:45.190
And now we can write our first node code in a file for that.

05:45.190 --> 05:53.080
I'll add a new file in there, which I'll name first dash app JS, dot JS because of course it will

05:53.080 --> 05:55.840
hold some JavaScript code in there.

05:55.840 --> 06:04.090
We can now write JavaScript code which can be executed by Node JS and a very simple first code snippet

06:04.090 --> 06:11.080
we could write here is a simple console log statement which logs something to the console where we say

06:11.080 --> 06:14.260
hello from Node JS for example.

06:15.320 --> 06:17.870
This is code which would run in the browser.

06:17.900 --> 06:21.410
It will also run if we execute it with Node.js.

06:21.590 --> 06:27.650
Now to executed with Node.js, we need to execute this file here with Node.js.

06:27.770 --> 06:34.850
And for that, the easiest way of doing that in Visual Studio code is that we go to terminal, new terminal.

06:34.880 --> 06:43.460
This opens your default system, terminal or command prompt here, integrated in this IDE and already

06:43.460 --> 06:45.920
navigate it into this project folder.

06:46.250 --> 06:52.780
And then we can run this first app JS file by running node and then first the DASH app.

06:52.790 --> 07:01.730
JS So simply add the file name after node and then you will not enter this interactive mode, but instead

07:01.730 --> 07:09.140
execute this code file this JavaScript file with node JS and therefore you should see hello from Node

07:09.140 --> 07:10.130
JS here.

07:11.100 --> 07:18.990
Now that was a nice first example, but we can do more with Node and to right and at least a little

07:18.990 --> 07:23.430
bit more realistic or more fancy application.

07:23.550 --> 07:29.460
We can also try writing some output to a file instead of the console.

07:29.730 --> 07:36.390
And for this we'll leverage one of the built in functionalities Node.js offers, and that would be the

07:36.390 --> 07:42.900
file system functionality which enables us to work with the file system for this.

07:42.900 --> 07:50.430
We first of all have to import it into that file to let Node know that we want to use this functionality.

07:50.550 --> 07:58.530
And the syntax for that is that we call require a function made available by Node JS and we want to

07:58.530 --> 08:05.940
require the FS module, which is one of node's core modules shipping together with Node JS.

08:05.940 --> 08:13.050
And I will come back to this import syntax and to the node core modules in greater detail later.

08:13.140 --> 08:20.520
For now, we just call this and we store the imported file system functionality in a simple constant

08:20.520 --> 08:20.970
here.

08:21.600 --> 08:30.990
And then we can use this file system to call right file sync, which is a method made available by this

08:30.990 --> 08:33.540
file system object which we're importing.

08:33.540 --> 08:37.860
And this method here will write a file to our harddrive.

08:38.400 --> 08:44.490
And the argument it wants is the path to the file, including the file name.

08:44.730 --> 08:47.790
And here we could name this hello dot text.

08:48.000 --> 08:51.360
And then the second argument is the content of that file.

08:51.510 --> 08:55.830
And here we could store hello from node js again.

08:57.050 --> 08:59.240
So now this is our code here.

08:59.270 --> 09:05.220
I am writing to a file by leveraging the file system module offered by Node.js.

09:05.240 --> 09:13.280
And if we now save this file and then run node first edges again, we should find a hello text file

09:13.280 --> 09:20.690
next to our script file which contains this content, and that is how we can use Node.js.

09:21.450 --> 09:25.390
Now, obviously, we're just scratching the surface at the moment.

09:25.410 --> 09:30.750
We just learned about a brand new syntax, which you don't know from the browser, and therefore we

09:30.750 --> 09:37.170
are going to dive way deeper into all of that over the next lectures and throughout this entire course.
