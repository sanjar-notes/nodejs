WEBVTT

00:02.250 --> 00:08.690
Now we had a look at compression and headers, now logging is also something that matters. For that

00:08.700 --> 00:14.460
I'll quit my server and I'll install a new package with npm install --save and that is called

00:14.460 --> 00:18.510
morgan and that is a package that makes logging request data

00:18.540 --> 00:20.580
really simple.

00:20.580 --> 00:30.600
Now after adding it, I can, whoops, restart with npm run start dev, my nodemon server and now to use

00:30.600 --> 00:39.930
morgan, I'll import it here in the app.js file, I'll require morgan like this and now we can use it as

00:39.930 --> 00:40.780
a middleware,

00:40.990 --> 00:49.470
also before we handle all the requests, so also maybe up here, we app use morgan and we execute this

00:49.500 --> 00:55.800
as a function and pass the information on how to log this into this function.

00:55.800 --> 01:00.930
Now you find more in the official docs, that simply defines which data is being logged and how it's formatted,

01:01.380 --> 01:02.900
I'll go with combined

01:03.150 --> 01:13.360
and now if I save that and I reload this page here, you'll find some logging data here in the console.

01:13.710 --> 01:19.440
You see detailed logging information about the incoming request that we had a get request, which browser

01:19.440 --> 01:22.070
I used which operating system and so on.

01:22.080 --> 01:26.930
Now obviously we typically don't want to see that in the console when we deploy our application

01:26.970 --> 01:35.310
instead some files would be nice and to log that to files, we just have to add something here,

01:35.640 --> 01:44.640
we can create a new constant, the access log stream, use the node file system which is a core module which

01:44.640 --> 01:47.040
we have to import by requiring

01:50.420 --> 01:52.500
fs here

01:52.750 --> 01:58.620
and now with that, we can create a write stream with create write stream

01:58.630 --> 02:07.450
and this allows us to then define a path best with path join, seen from our current folder on to let's

02:07.450 --> 02:12.840
say access.log so that we will write the logs into this file.

02:13.060 --> 02:18.650
We will add a configuration here where I set flags to a which means append,

02:18.760 --> 02:24.790
so new data will be appended to that file and not overwrite the existing file but add it at the end of

02:24.790 --> 02:30.160
the file so that we don't just have one log statement in the file but we continuously add them to the

02:30.160 --> 02:31.240
file

02:31.300 --> 02:37.720
and now this write stream can be used by morgan and we simply pass that stream to morgan in a second

02:37.720 --> 02:46.120
argument. Here we can set a stream value in that object and we set that, whoops, not here but in the morgan

02:46.600 --> 02:47.500
function here,

02:47.770 --> 02:53.060
so here we set the stream and we set that to our access log stream here.

02:54.010 --> 02:59.220
And now this file stream will be used by morgan to log our requests and therefore now if I reload

02:59.230 --> 03:00.680
this page,

03:00.820 --> 03:06.700
we don't have the log here but we have this new access log file and in here, we see that log data and

03:06.700 --> 03:08.760
that is of course how we would want to log that

03:08.800 --> 03:13.980
but also as mentioned on the slide, often logging is done by our hosting providers

03:13.990 --> 03:20.890
so then this might not matter for you. If you want or have to do it manually though, this is a nice package

03:21.070 --> 03:26.440
where you can of course configure more as you can see in their official docs which allows you to log

03:26.650 --> 03:28.710
your request data to files

03:28.780 --> 03:32.320
so that you always know what's going on on your server.
